{
    "version": 3,
    "sources": ["webpack:///webpack/bootstrap", "webpack:///./sources/utils/utils.js", "webpack:///./sources/utils/dom_helpers.js", "webpack:///./sources/utils/extends.js", "webpack:///./sources/utils/helpers.js", "webpack:///./sources/utils/eventable.js", "webpack:///./sources/core/lightbox/controls/base_control.js", "webpack:///./sources/core/ui/grid/editors/editors/base.js", "webpack:///./sources/core/ui/layout/cell.js", "webpack:///./sources/core/lightbox/controls/select_control.js", "webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/drop_target.js", "webpack:///./sources/core/ui/mouse_event_container.js", "webpack:///./sources/core/ui/timeline/timeline.js", "webpack:///./sources/utils/env.js", "webpack:///./sources/locale/locale.js", "webpack:///./sources/core/worktime/calendar_arguments_helper.js", "webpack:///./sources/utils/task_tree_helpers.js", "webpack:///./sources/core/gantt_data_range.js", "webpack:///./sources/core/datastore/power_array.js", "webpack:///./sources/core/datastore/datastore.js", "webpack:///./sources/core/ui/render/task_bar_render.js", "webpack:///./sources/core/ui/grid/grid.js", "webpack:///./sources/core/ui/row_position_mixin.js", "webpack:///./sources/core/ui/timeline/scales.js", "webpack:///./sources/core/ui/layout/layout.js", "webpack:///./sources/utils/timeout.js", "webpack:///./sources/core/destructor.js", "webpack:///./sources/core/common/assert.js", "webpack:///./sources/core/gantt_core.js", "webpack:///./sources/core/touch.js", "webpack:///./sources/css/skins/contrast_white.js", "webpack:///./sources/css/skins/contrast_black.js", "webpack:///./sources/css/skins/material.js", "webpack:///./sources/css/skins/broadway.js", "webpack:///./sources/css/skins/terrace.js", "webpack:///./sources/css/skins/meadow.js", "webpack:///./sources/css/skins/skyblue.js", "webpack:///./sources/core/skin.js", "webpack:///./sources/core/cached_functions.js", "webpack:///./sources/core/data_task_types.gpl.js", "webpack:///./sources/core/lightbox_optional_time.js", "webpack:///./sources/core/lightbox/controls/parent_control.js", "webpack:///./sources/core/lightbox/controls/duration_control.js", "webpack:///./sources/core/lightbox/controls/radio_control.js", "webpack:///./sources/core/lightbox/controls/checkbox_control.js", "webpack:///./sources/utils/html_helpers.js", "webpack:///./sources/core/lightbox/controls/time_control.js", "webpack:///./sources/core/lightbox/controls/textarea_control.js", "webpack:///./sources/core/lightbox/controls/template_control.js", "webpack:///./sources/core/lightbox/index.js", "webpack:///./sources/core/data.js", "webpack:///./sources/core/facades/worktime_calendars.js", "webpack:///./sources/core/worktime/strategy/no_work_time.js", "webpack:///./sources/core/worktime/time_calculator.js", "webpack:///./sources/core/worktime/strategy/calendar_workunit_cache.js", "webpack:///./sources/core/worktime/strategy/calendar_strategy.js", "webpack:///./sources/core/worktime/calendar_manager.js", "webpack:///./sources/core/worktime/work_time.js", "webpack:///./sources/core/load.js", "webpack:///./sources/core/tasks.js", "webpack:///./sources/core/wai_aria.js", "webpack:///./sources/core/grid_column_api.gpl.js", "webpack:///./sources/core/dynamic_loading.gpl.js", "webpack:///./sources/core/plugins/auto_task_types.js", "webpack:///./sources/core/plugins/new_task_placeholder.js", "webpack:///./sources/core/plugins/resources.js", "webpack:///./sources/core/plugins/dhtmlx_hooks.js", "webpack:///./sources/core/plugins/jquery_hooks.js", "webpack:///./sources/core/plugins/wbs.js", "webpack:///./sources/core/plugins/batch_update.js", "webpack:///./sources/core/plugins/autoscroll.js", "webpack:///./sources/core/plugins/index.js", "webpack:///./sources/core/dataprocessor/dataprocessor.js", "webpack:///./sources/core/dataprocessor/live_update_hooks.js", "webpack:///./sources/core/dataprocessor/hooks.js", "webpack:///./sources/core/datastore/datastore_render.js", "webpack:///./sources/core/datastore/select.js", "webpack:///./sources/core/datastore/treedatastore.js", "webpack:///./sources/core/facades/datastore_links.js", "webpack:///./sources/core/facades/datastore_tasks.js", "webpack:///./sources/core/facades/datastore.js", "webpack:///./sources/core/datastore/datastore_hooks.js", "webpack:///./sources/core/facades/layout.js", "webpack:///./sources/core/data_task_layers.gpl.js", "webpack:///./sources/core/ui/main_layout_initializer.js", "webpack:///./sources/core/ui/timeline/links_dnd.js", "webpack:///./sources/core/ui/timeline/tasks_dnd.js", "webpack:///./sources/core/ui/timeline/main_timeline_initializer.js", "webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/highlight.js", "webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/multi_level.js", "webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/locked_level.js", "webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker.js", "webpack:///./sources/core/ui/grid/tasks_grid_dnd.js", "webpack:///./sources/core/ui/grid/main_grid_initializer.js", "webpack:///./sources/core/ui/render/task_grid_line_render.js", "webpack:///./sources/core/ui/render/link_render.js", "webpack:///./sources/core/ui/render/task_bg_render.js", "webpack:///./sources/core/ui/render/task_split_render.js", "webpack:///./sources/core/ui/grid/editors/editors/predecessor.js", "webpack:///./sources/core/ui/grid/editors/editors/date.js", "webpack:///./sources/core/ui/grid/editors/editors/select.js", "webpack:///./sources/core/ui/grid/editors/editors/number.js", "webpack:///./sources/core/ui/grid/editors/editors/text.js", "webpack:///./sources/core/ui/grid/editors/keyboard_mappings/keyboard_navigation.js", "webpack:///./sources/core/ui/grid/editors/keyboard_mappings/default.js", "webpack:///./sources/core/ui/grid/editors/keyboard_mappings.js", "webpack:///./sources/core/ui/grid/editors/controller.js", "webpack:///./sources/core/ui/grid/grid_resize.gpl.js", "webpack:///./sources/core/ui/timeline/tasks_canvas_render.gpl.js", "webpack:///./sources/core/ui/layout/scrollbar_cell.js", "webpack:///./sources/core/ui/layout/resizer_cell.gpl.js", "webpack:///./sources/core/ui/layout/view_cell.js", "webpack:///./sources/core/ui/layout/view_layout.js", "webpack:///./sources/core/ui/render/render_factory.js", "webpack:///./sources/core/ui/render/layer_engine.js", "webpack:///./sources/core/ui/gantt_layers.js", "webpack:///./sources/core/ui/mouse.js", "webpack:///./sources/core/ui/configurable.js", "webpack:///./sources/core/ui/ui_factory.js", "webpack:///./sources/core/ui/index.js", "webpack:///./sources/core/message.js", "webpack:///./sources/utils/dom_event_scope.js", "webpack:///./sources/core/common/state.js", "webpack:///./sources/core/common/templates.js", "webpack:///./sources/core/common/dnd.js", "webpack:///./sources/core/common/date.js", "webpack:///./sources/core/common/ajax.js", "webpack:///./sources/core/common/config.js", "webpack:///./sources/core/common/services.js", "webpack:///./sources/core/common/import.js", "webpack:///./sources/constants/index.js", "webpack:///./sources/core/gantt.js", "webpack:///./sources/core/deprecated_warnings.js", "webpack:///./sources/dhtmlxgantt.gpl.ts"],
    "names": ["installedModules", "__webpack_require__", "moduleId", "exports", "module", "i", "l", "modules", "call", "m", "c", "d", "name", "getter", "o", "Object", "defineProperty", "enumerable", "get", "r", "Symbol", "toStringTag", "value", "t", "mode", "__esModule", "ns", "create", "key", "bind", "n", "object", "property", "prototype", "hasOwnProperty", "p", "s", "seed", "helpers", "copy", "result", "isDate", "Date", "isArray", "Array", "length", "isStringObject", "String", "isNumberObject", "Number", "isBooleanObject", "Boolean", "apply", "defined", "obj", "mixin", "target", "source", "force", "f", "undefined", "uid", "valueOf", "functor", "arguments", "event", "el", "handler", "capture", "addEventListener", "attachEvent", "eventRemove", "removeEventListener", "detachEvent", "elementPosition", "elem", "top", "left", "right", "bottom", "getBoundingClientRect", "box", "body", "document", "docElem", "documentElement", "parentNode", "scrollTop", "window", "pageYOffset", "scrollLeft", "pageXOffset", "clientTop", "clientLeft", "offsetWidth", "offsetHeight", "parseInt", "offsetTop", "offsetLeft", "offsetParent", "y", "Math", "round", "x", "width", "height", "isVisible", "node", "display", "visibility", "getComputedStyle", "style", "currentStyle", "hasNonNegativeTabIndex", "isNaN", "getAttribute", "hasHref", "a", "area", "nodeName", "loLowerCase", "isEnabled", "input", "select", "textarea", "button", "toLowerCase", "hasAttribute", "getClassName", "className", "baseVal", "indexOf", "_trimString", "_slave", "createElement", "getTargetNode", "e", "tagName", "srcElement", "str", "trim", "this", "replace", "getNodePosition", "getFocusableNodes", "root", "nodes", "querySelectorAll", "join", "nodesArray", "slice", "splice", "getScrollSize", "div", "cssText", "appendChild", "clientWidth", "removeChild", "addClassName", "removeClassName", "split", "regEx", "RegExp", "insertNode", "newone", "innerHTML", "child", "firstChild", "removeNode", "getChildNodes", "css", "ch", "childNodes", "len", "out", "push", "toNode", "getElementById", "querySelector", "locateClassName", "classname", "strict", "trg", "ind", "charAt", "locateAttribute", "attribute", "getRelativeEventPosition", "ev", "clientX", "clientY", "isChildOf", "parent", "hasClass", "element", "classList", "contains", "test", "b", "__", "constructor", "units", "second", "minute", "hour", "day", "week", "month", "quarter", "year", "arrayFilter", "arr", "callback", "filter", "getSecondsInUnit", "unit", "forEach", "workArray", "arrayMap", "map", "resArray", "arrayFind", "find", "arrayDifference", "item", "arraySome", "hashToArray", "hash", "sortArrayOfHash", "field", "desc", "compare", "sort", "throttle", "timeout", "wait", "setTimeout", "pop", "getFullYear", "getMonth", "getDate", "Function", "toString", "delay", "timer", "clearTimeout", "EventHost", "_connected", "_silent_mode", "_silentStart", "_silentEnd", "createEventStorage", "dhx_catch", "z", "res", "zr", "addEvent", "removeEvent", "id", "eventHost", "catcher", "callObj", "attachAll", "callEvent", "arg0", "handlerName", "concat", "checkEvent", "list", "detachAllEvents", "dummy", "console", "log", "BaseControl", "render", "set_value", "get_value", "focus", "gantt", "BaseEditor", "show", "column", "config", "placeholder", "hide", "get_input", "is_changed", "currentValue", "is_valid", "save", "utils", "eventable", "domHelpers", "Cell", "factory", "$container", "$parent", "$config", "headerHeight", "$gantt", "$domEvents", "_createDomEventScope", "$id", "$name", "$factory", "destructor", "$view", "$services", "getService", "detach", "_headerClickHandler", "detachAll", "cell", "scrollTo", "clear", "getNode", "padding", "resize", "final", "$preResize", "topCont", "topSize", "getSize", "minWidth", "maxWidth", "minHeight", "maxHeight", "setSize", "_hide", "index", "cellIndex", "moveView", "hidden", "$toHTML", "content", "header", "raw", "html", "canCollapse", "$fill", "init", "self", "toggle", "delegate", "collapsed", "size", "gravity", "getContentSize", "$lastSize", "contentX", "contentY", "_getBorderSizes", "borders", "horizontal", "vertical", "_currentBorders", "_borders", "_sizeHeader", "_sizeContent", "_setBorders", "view", "cssHash", "xLayout", "floor", "transform", "__extends", "htmlHelpers", "_super", "SelectControl", "sns", "getHtmlSelect", "options", "_dhx_onchange", "onchange", "_focus", "createDropTargetObject", "targetParent", "targetIndex", "targetId", "nextSibling", "prevSibling", "nextSiblingTarget", "taskId", "store", "getParent", "getBranchIndex", "prevSiblingTarget", "firstChildTarget", "lastChildTarget", "children", "getChildren", "events", "mouseEvents", "h", "ScaleHelper", "topPositionMixin", "canvasRender", "Timeline", "$scaleHelper", "_findBinary", "array", "prev", "low", "high", "container", "$task", "$task_scale", "$task_data", "$task_bg", "$task_links", "$task_bars", "_tasks", "col_width", "full_width", "trace_x", "rendered", "$getConfig", "attr", "linksAttr", "bindLinks", "item_attribute", "link_attribute", "layers", "_createLayerConfig", "tasks", "linkLayers", "links", "_attachLayers", "dataHeight", "max", "scale_height", "refresh", "backgroundImage", "smart_rendering", "rowStore", "row_height", "countVisible", "scale", "data_els", "contentHeight", "contentWidth", "scrollHeight", "scrollWidth", "_refreshScales", "smart_scales", "scales", "_scales", "_getScaleChunkHtml", "taskFilter", "expose", "renderer", "$ui", "taskBar", "taskSplitBar", "append", "taskBg", "static_background", "link", "_taskLayers", "_linkLayers", "getDatastore", "taskRenderer", "getDataRender", "createDataRender", "defaultContainer", "taskLayers", "layer", "host", "bar_layer", "addLayer", "_taskRenderer", "getLayer", "_initStaticBackgroundRender", "linkStore", "linkRenderer", "linkLayer", "_linkRenderer", "staticRender", "_staticBgHandler", "getScale", "_clearLayers", "removeLayer", "_render_tasks_scales", "scales_html", "outer_width", "state", "getState", "_getScales", "availWidth", "autosize", "autosize_min_width", "cfgs", "prepareConfigs", "min_column_width", "min_date", "max_date", "rtl", "cfg", "fromPos", "toPos", "templates", "scale_row_class", "cssClass", "tplClass", "_prepareScaleHtml", "globalConfig", "globalTemplates", "cells", "date", "template", "date_to_str", "startIndex", "endIndex", "count", "inherit_scale_class", "scale_cell_class", "cssclass", "_waiAria", "getTimelineCellAttr", "dateFromPos", "summ", "part", "_getColumnDuration", "posFromDate", "columnIndexByDate", "assert", "wholeCells", "partCell", "pos", "min", "days", "trace_x_ascending", "ignores", "ignore_x", "day_ind", "transition", "trace_index_transition", "getItemPosition", "task", "start_date", "end_date", "xLeft", "xRight", "getItemTop", "getItemHeight", "task_height", "offset", "task_height_offset", "primaryScale", "subscales", "sortScales", "add", "step", "env", "isIE", "navigator", "userAgent", "isIE6", "XMLHttpRequest", "isIE7", "isIE8", "isOpera", "isChrome", "isKHTML", "isFF", "isIPad", "search", "isEdge", "locale", "month_full", "month_short", "day_full", "day_short", "labels", "new_task", "icon_save", "icon_cancel", "icon_details", "icon_edit", "icon_delete", "confirm_closing", "confirm_deleting", "section_description", "section_time", "section_type", "column_wbs", "column_text", "column_start_date", "column_duration", "column_add", "confirm_link_deleting", "link_start", "link_end", "type_task", "type_project", "type_milestone", "minutes", "hours", "weeks", "months", "years", "message_ok", "message_cancel", "IsWorkTimeArgument", "calendar", "ClosestWorkTimeArgument", "dir", "CalculateEndDateArgument", "duration", "GetDurationArgument", "start", "end", "getWorkHoursArguments", "setWorkTimeArguments", "unsetWorkTimeArguments", "isWorkTimeArguments", "processedConfig", "duration_unit", "getClosestWorkTimeArguments", "arg", "_getStartEndConfig", "param", "argumentType", "duration_step", "getDurationArguments", "hasDurationArguments", "calculateEndDateArguments", "copyLinkIdsArray", "linkIds", "targetHash", "isLinkExists", "getLink", "copyLinkIds", "$source", "$target", "getSubtreeLinks", "rootId", "isTaskExists", "getTask", "eachTask", "getSubtreeTasks", "_init_tasks_range", "scale_unit", "scale_offset_minimal", "helper", "_scale_range_unit", "range", "start_interval", "resolveConfigRange", "getSubtaskDates", "dateRangeResolver", "calculateEndDate", "_min_date", "_max_date", "fit_tasks", "old_min", "old_max", "_adjust_scales", "$powerArray", "$create", "$removeAt", "$remove", "$find", "$insertAt", "data", "$each", "master", "$map", "$filter", "powerArray", "DataStore", "pull", "$initItem", "initItem", "visibleOrder", "fullOrder", "_skip_refresh", "_filterRule", "_searchVisibleOrder", "_parseInner", "loaded", "parse", "getItem", "_updateOrder", "code", "updateItem", "_removeItemInner", "removeItem", "_addItemInner", "exists", "silent", "order", "data_size", "getVisibleItems", "getIndexRange", "addItem", "_changeIdInner", "oldId", "newId", "changeId", "_moveInner", "sindex", "tindex", "getIdByIndex", "move", "clearAll", "arraysEqual", "arr1", "arr2", "quick", "oldOrder", "serialize", "eachItem", "rule", "filteredOrder", "from", "to", "Infinity", "ret", "getItems", "getIndexById", "_getNullIfUndefined", "getFirst", "getLast", "getNext", "getPrev", "_task_default_render", "_isAllowedUnscheduledTask", "$getTemplates", "taskType", "getTaskType", "type", "padd", "types", "milestone", "link_line_width", "setAttribute", "show_progress", "done", "progress", "pr", "progressColor", "backgroundColor", "opacity", "progress_text", "position", "wrapper", "drag_progress", "isReadonly", "drag", "markerPos", "_render_task_progress", "task_text", "_render_task_content", "textColor", "color", "basic", "itemId", "project", "isSummaryTask", "isSplitTask", "select_task", "selected_task", "drag_id", "drag_mode", "touch_drag", "link_source_id", "link_target_id", "highlight_critical_path", "isCriticalTask", "link_landing_area", "from_id", "from_start", "link_from_start", "to_start", "link_to_start", "allowDrag", "isLinkAllowed", "dragClass", "_combine_item_class", "task_class", "styles", "side", "_get_link_crossing_css", "_render_side_content", "leftside_text", "_render_leftside_content", "rightside_text", "_render_rightside_content", "setTaskBarAttr", "drag_resize", "_render_pair", "drag_links", "show_links", "outer", "inner", "showLinkPoints", "touch", "text", "cond", "leftside", "start_to_start", "finish_to_start", "finish_to_finish", "_get_conditions", "ln", "tp", "type_renderers", "defaultRenderer", "gridResize", "Grid", "$state", "gridAriaAttr", "gridAttrString", "gridDataAriaAttr", "gridDataAttrString", "$grid", "gridScaleRowAttrString", "$grid_scale", "$grid_data", "resizer", "_renderHeaderResizers", "doOnRender", "_mouseDelegates", "_addLayers", "_initEvents", "_validateColumnWidth", "numericWidth", "outerWidth", "columns", "getGridColumns", "innerWidth", "scrollable", "_setColumnsWidth", "grid_width", "_getGridWidth", "_initSmartRenderingPlaceholder", "_calculateGridWidth", "_renderGridHeader", "getColumnIndex", "getColumn", "gridLine", "_refreshPlaceholderOnStoreUpdate", "scrollY", "scroll", "getView", "getScrollState", "scrollSize", "$rowsPlaceholder", "close", "open", "_getColumnWidth", "min_width", "min_grid_column_width", "new_width", "max_width", "_getGridWidthLimits", "min_limit", "max_limit", "newWidth", "start_index", "columns_width", "final_width", "extra_width", "start_width", "col", "share", "iterator", "curExtra", "_getColsTotalWidth", "cols_width", "v", "parseFloat", "unknown", "gridWidth", "autofit", "diff", "delta", "changed", "_setContentSize", "reverse", "lineHeigth", "last", "colWidth", "_sort", "direction", "grid_header_class", "label", "gridScaleCellAttrString", "lineHeight", "getRowTop", "task_id", "dateHelper", "services", "getSum", "sizes", "setSumWidth", "sum_width", "parts", "adjustSize", "splitSize", "full", "cellSize", "initTemplate", "date_scale", "min_coll_width", "container_width", "minDate", "maxDate", "heights", "configs", "main_scale", "initScaleConfig", "processIgnores", "initColSizes", "limitVisibleRange", "unshift", "alineScaleColumns", "reverseScale", "setPosSettings", "indexes", "trace_indexes", "_ignore_time_config", "skip_off_time", "skip", "probe", "isWorkTime", "display_count", "min_col_width", "line_height", "cont_width", "column_count", "eachColumn", "iterateScales", "lower_scale", "upper_scale", "upper_dates", "lower_dates", "prevUpper", "up", "target_index", "upper_start", "upper_end", "lower_start", "lower_end", "targetWidth", "curr", "tzOffset", "getTimezoneOffset", "_correct_dst_change", "dates", "lastDate", "outDate", "shared", "Layout", "_this", "$root", "_parseConfig", "$cells", "_resizeScrollbars", "scrollbars", "scrollbar", "scrollChanged", "visibleScrollbars", "hiddenSrollbars", "showScrollbar", "hideScrollbar", "shouldHide", "shouldShow", "visibleGroups", "group", "_syncCellSizes", "groupName", "newSize", "groups", "_eachChild", "_syncGroupSize", "_xLayout", "getNextSibling", "ownSize", "resizeSibling", "getPrevSibling", "siblingSize", "totalGravity", "totalSize", "k", "mainGrid", "$content", "startStage", "mainCall", "_resizeInProgress", "contentViews", "getCellsByType", "setContentSize", "_getAutosizeMode", "isChild", "cellId", "sub", "alert", "insertBefore", "rows", "cols", "views", "initUI", "getCells", "_cleanElSize", "_getBoxStyles", "computed", "properties", "boxSizing", "clientHeight", "MozBoxSizing", "horPaddings", "paddingLeft", "paddingRight", "borderLeftWidth", "borderRightWidth", "vertPaddings", "paddingTop", "paddingBottom", "borderTopWidth", "borderBottomWidth", "borderBox", "innerHeight", "outerHeight", "boxSizes", "contentSizes", "_sizes", "margin", "_calcFreeSpace", "_free", "_gravity", "_calcSize", "_configureBorders", "borderClass", "lastVisibleIndex", "lastCell", "borderColorClass", "_updateCellVisibility", "oldVisibleCells", "_visibleCells", "firstCall", "visibleCells", "cellView", "marginSide", "dx", "dy", "updPerSecond", "_on_timeout", "ceil", "_eventRemoveAll", "$layout", "resetLightbox", "_dp", "check", "message", "show_errors", "expire", "calculateScaleRange", "scroll_size", "_reinit", "_update_flags", "initTemplates", "_clearTaskLayers", "_clearLinkLayers", "reset", "layout", "createView", "storeNames", "refreshData", "resizeDelay", "getPropertyValue", "resizeWatcher", "tabIndex", "contentWindow", "addResizeListener", "$mouseEvents", "$click", "buttons", "edit", "showLightbox", "delete", "question", "title", "confirm_deleting_title", "_dhtmlx_confirm", "$new", "deleteTask", "hideLightbox", "posX", "_getHorizontalScrollbar", "codeScrollLeft", "visible_date", "task_scroll_offset", "preserve_scroll", "new_pos", "showDate", "setSizes", "locate", "targetAttribute", "task_attribute", "_locate_css", "_locateHTML", "getTaskRowNode", "els", "changeLightboxType", "getLightboxType", "_silent_redraw_lightbox", "_get_link_type", "start_to_finish", "prevOffset", "time_unit", "offsetChanged", "$data", "tasksStore", "_isSplitItem", "_is_icon_open_click", "getTaskDND", "_tasks_dnd", "touch_feedback", "touch_feedback_duration", "_prevent_touch_scroll", "_touch_feedback", "vibrate", "touchEventsSupported", "createEvent", "_touch_events", "touches", "pageX", "pageY", "pointerEnabled", "pointerType", "msPointerEnabled", "MSPOINTER_TYPE_MOUSE", "touchHandlers", "names", "accessor", "ignore", "scroll_state", "dblclicktime", "action_mode", "scroll_mode", "action_start", "long_tap_timer", "current_target", "start_drag", "on_mouse_move", "preventDefault", "cancelBubble", "abs", "_touch_scroll_active", "new_scroll_state", "block_action", "on_mouse_down", "renders", "_getTaskLayers", "isTaskVisible", "cloneNode", "cloneTaskRendered", "_start_dnd", "_touch_drag", "refreshTask", "on_mouse_up", "now", "onDoubleClick", "skins", "link_arrow_size", "lightbox_additional_height", "_second_column_width", "_third_column_width", "material", "_redefine_lightbox_buttons", "buttons_left", "buttons_right", "getTaskNode", "indx", "broadway", "_lightbox_template", "_config_buttons_left", "_config_buttons_right", "gantt_delete_btn", "gantt_save_btn", "terrace", "meadow", "skyblue", "_get_skin", "skin", "getElementsByTagName", "href", "match", "skinset", "_configure", "resetSkin", "activate", "_cached_functions", "update_if_changed", "active", "cache", "critical_path_mode", "wrap_methods", "methods", "_prefetch_originals", "prefetch", "methodname", "original", "optimizer", "argumentsArray", "args", "get_arguments_hash", "cached_values", "has_cached_value", "get_cached_value", "cache_value", "arguments_hash", "is_date", "getUTCDate", "values", "stringify_argument", "deactivate", "setup", "override_gantt", "gantt_methods", "optimize_render", "deactivTimeout", "_extend_to_optional", "lightbox_block", "optional_time", "section", "mapping", "_resolve_default_mapping", "disable", "val", "enable", "disabled", "update_block", "_lightbox_id", "previousSibling", "button_text", "resizeLightbox", "button_click", "_get_typed_lightbox_config", "form_blocks", "duration_optional", "time_optional", "time", "ParentControl", "_display", "item_id", "getTaskByTime", "allow_root", "root_id", "root_label", "_filter", "map_to", "tmpDom", "newOptions", "onselect", "replaceChild", "DurationControl", "_getStartDate", "_time_format_order", "_getDuration", "getTimePicker", "singleDate", "single_date", "readonly", "lightboxDurationInputAttrString", "duration_val", "inps", "btns", "endspan", "_calc_date", "task_date", "_change_duration", "onclick", "onkeydown", "charCode", "keyCode", "which", "constants", "KEY_CODES", "DOWN", "UP", "calculateDuration", "_fill_lightbox_select", "startDate", "endDate", "RadioControl", "radio", "default_value", "checked", "CheckboxControl", "checkboxes", "entry", "attributes", "_attributes", "getHtmlOption", "_getHtmlContainer", "getHtmlButton", "getHtmlDiv", "getHtmlLabel", "getHtmlInput", "_getHtmlAttributes", "tag", "TimeControl", "auto_end_date", "_update_lightbox_select", "selects", "needSetTime", "_getDate", "mapOffset", "_get_timepicker_step", "_getEndDate", "TextareaControl", "_get_input", "TemplateControl", "ResourcesControl", "getHtmlButtons", "floatRight", "_migrate_buttons", "lightboxButtonAttrString", "getHtmlTimePickerOptions", "settings", "start_year", "end_year", "tdate", "timeFormat", "year_range", "first", "_time_values", "time_picker", "setTime", "getHours", "getMinutes", "_lightbox_methods", "registerProvider", "lightbox", "getLightbox", "_center_lightbox", "showCover", "_fill_lightbox", "lightboxVisibleAttr", "round_dnd_dates", "timeline", "_is_chart_visible", "time_step", "getLabel", "sections", "j", "updateCollection", "list_name", "collection", "serverList", "_lightbox_type", "lightboxDiv", "fullWidth", "classNames", "_lightbox", "_is_lightbox_timepicker", "wide_form", "lightboxAttr", "drag_lightbox", "onmousedown", "_ready_to_dnd", "onselectstart", "cursor", "_init_dnd_events", "_render_sections", "labelBlock", "inputBlock", "inputId", "bindLabelsToInputs", "_init_lightbox_events", "block", "con", "scroll_top", "scroll_left", "view_height", "_cover", "_document_height", "_scroll_height", "lightbox_events", "_save_lightbox", "gantt_cancel_btn", "_cancel_lightbox", "src", "sec", "buttonTarget", "SPACE", "shiftKey", "click", "keys", "edit_save", "edit_cancel", "getLightboxValues", "addTask", "updateTask", "lightboxHiddenAttr", "hideCover", "_custom_lightbox", "_set_lightbox_values", "lightboxHeader", "lightbox_header", "task_time", "substr", "getLightboxSection", "getValue", "setValue", "get_template_control", "control", "get_select_control", "get_textarea_control", "get_time_control", "_move_while_dnd", "_finish_dnd", "_dnd_start_lb", "gantt_unselectable", "lb", "_lb_start", "ariaAttrs", "date_part", "time_format", "getTimeFormat", "limit_time_select", "first_hour", "last_hour", "setHours", "lightboxSelectAttrString", "checkbox", "resources", "ok", "opts", "confirm", "type_value", "oldType", "formData", "updTask", "isUnscheduledTask", "unscheduled", "show_unscheduled", "taskStart", "taskEnd", "getGlobalTaskIndex", "_defaultTaskDate", "parent_id", "getTaskByIndex", "_set_default_task_timing", "createTask", "setParent", "$open", "details_on_create", "selectTask", "showTask", "oldid", "newid", "unselect", "getSelectedId", "_get_task_timing_mode", "task_type", "$no_start", "$no_end", "$rendered_type", "_init_task_timing", "task_mode", "dirty", "resetProjectDates", "taskMode", "_assign_project_dates", "getSubtaskDuration", "taskTiming", "_update_parents", "pid", "has_changed", "oldStart", "oldEnd", "roundDate", "upper", "lower", "colIndex", "steps", "correctTaskWorkTime", "work_time", "correct_work_time", "getClosestWorkTime", "calendarManager", "timeCalculator", "getWorkHours", "setWorkTime", "unsetWorkTime", "_hasDuration", "hasDuration", "createCalendar", "addCalendar", "getCalendar", "getCalendars", "getTaskCalendar", "deleteCalendar", "CalendarDisabledTimeStrategy", "argumentsHelper", "_calculateDuration", "fixedUnits", "createArgumentsHelper", "NoWorkTimeCalendar", "TimeCalculator", "$disabledCalendar", "_getCalendar", "manager", "WorkUnitsCache", "_cache", "getTime", "put", "Cache", "CalendarWorkTimeStrategy", "_workingUnitsCache", "_getUnitOrder", "_timestamp", "timestamp", "UTC", "_checkIfWorkingUnit", "_isWorkTime", "_is_work_day", "_getWorkHours", "_is_work_hour", "_internDatesPull", "_nextDate", "_getWorkUnitsBetweenGeneric", "stepStart", "stepEnd", "next", "checkFirst", "checkLast", "isLastStep", "_getHoursPerDay", "_getWorkHoursForRange", "_getWorkUnitsBetweenHours", "firstDayStart", "firstDayEnd", "day_start", "lastDayStart", "lastDayEnd", "startPart", "endPart", "hourRange", "worktime", "_setCalendar", "_tryChangeCalendarSettings", "payload", "backup", "JSON", "stringify", "_isEmptyCalendar", "datesArray", "isFullWeekSet", "checkFullArray", "getDay", "reset_calendar", "is_work_unit", "mult", "_calculateEndDate", "added", "_getClosestWorkTime", "future_target", "prev_target", "tick", "both_directins", "inc", "unitOrder", "biggerTimeUnit", "biggerTimeUnitSettings", "CalendarWorktimeStrategy", "CalendarManager", "_calendars", "_getDayHoursForMultiple", "calendars", "currPos", "reduce", "acc", "mergeCalendars", "newCalendar", "_convertWorktimeSettings", "parentCalendar", "defaults", "fulltime", "apiCore", "createDefaultCalendars", "calendar_property", "resource_calendars", "resource", "calendarId", "worktimes", "restoreConfigCalendars", "global", "worktimeFacadeFactory", "facade", "load", "url", "_load_url", "cl", "_load_type", "ajax", "on_load", "xmlDoc", "responseText", "resp", "_process_loading", "collections", "_load_collections", "linksStore", "initial_scroll", "firstTask", "collections_loaded", "option", "option_key", "$ignore", "json", "dhx_security", "security_key", "serializeTask", "_copyObject", "serializeLink", "_copyLink", "xml_format", "rawLinks", "getLinks", "xml", "_xmlNodeToJSON", "attrs_only", "nodeType", "nodeValue", "_getCollections", "loader", "xpath", "itms", "attrs", "_getXML", "toptag", "getXMLTopNode", "xmltop", "skey", "evs", "oldxml", "startdate", "est", "enddate", "predecessortasks", "editable_property", "readonly_property", "htmlTags", "extraSpaces", "stripHTMLLite", "htmlText", "singleQuotes", "escapeQuotes", "getAttributeString", "dateString", "aria-label", "_taskCommonAttr", "tooltip_text", "$dataprocessor_class", "isSelectedTask", "drag_move", "taskRowAttr", "order_branch", "$level", "hasChild", "linkAttr", "linkTypes", "toStart", "fromStart", "drag_link", "gridSeparatorAttr", "buttonName", "role", "tabindex", "headerText", "time_option", "aria-valuemin", "multiselect", "gridCellAttrString", "textValue", "gridAddButtonAttrString", "messageButtonAttrString", "buttonLabel", "messageInfoAttr", "messageModalAttr", "quickInfoAttr", "quickInfoHeaderAttrString", "quickInfoHeader", "quickInfoButtonAttrString", "tooltipAttr", "tooltipVisibleAttr", "tooltipHiddenAttr", "wai_aria_attributes", "getGridColumn", "callIfEnabled", "auto_types", "updateParents", "childId", "batchUpdate", "checkParent", "targetType", "getTaskTypeToUpdate", "updateTaskType", "setTaskType", "delTaskParent", "allTypes", "hasChildren", "originalRowDndParent", "originalMoveTaskParent", "isParsingDone", "updateAfterRemoveChild", "sid", "placeholder_task", "insertPlaceholder", "placeholders", "getTaskBy", "afterEdit", "newTask", "dataProcessor", "_silencedPlaceholder", "setUpdated", "ready", "action", "commands", "command", "entity", "createResourceMethods", "resourceTaskCache", "propertyName", "propertyValue", "filterResourceTasks", "getResourceTasks", "resourceIds", "cacheKey", "resourceHash", "resourceValue", "resource_id", "getResourceLoad", "resourceProperty", "$role", "timegrid", "currDate", "timetable", "resource_render_empty_cells", "calculateResourceLoad", "renderBar", "level", "renderConnection", "prevLevel", "nextLevel", "selectAssignments", "resourceId", "resource_property", "owners", "renderLine", "resource_cell_class", "resource_cell_value", "row", "renderHistogram", "capacityMatrix", "maxCapacity", "capacity", "histogram_cell_class", "histogram_cell_label", "fill", "histogram_cell_allocated", "histogram_cell_capacity", "capacityElement", "colStart", "colEnd", "bar", "connection", "renderHistogramLine", "filterTasks", "getResourceAssignments", "assignments", "resourceRow", "resourceHistogram", "resource_store", "dhtmlx", "attaches", "attachGantt", "cmp", "attachObject", "dataType", "dataObj", "that", "vs", "av", "grid", "border", "gridId", "gridObj", "dhtmlXCellObject", "jQuery", "$", "fn", "dhx_gantt", "each", "newgantt", "Gantt", "getGanttInstance", "error", "wbs", "_needRecalc", "_isRecalcNeeded", "_isGroupSort", "_groups", "is_active", "_getWBSCode", "_calcWBS", "$virtual", "$wbs", "_setWBSCode", "getWBSCode", "getByWBSCode", "currentNode", "_isFirst", "_prevSibling", "_wbs", "_parent", "createWbs", "resetCache", "getTaskByWBSCode", "createMethod", "isActive", "disableMethod", "methodName", "dummyMethod", "restoreMethod", "restoreMethods", "batchUpdatePayload", "batch_update", "noRedraw", "dp_mode", "call_dp", "updateMode", "setUpdateMode", "resetProjects", "refreshLink", "methodsHash", "setGanttMode", "sendData", "scrollRange", "scrollStep", "scrollDelay", "scrollSpeed", "interval", "isMove", "delayTimeout", "startPos", "started", "eventPos", "isScrollState", "dragMarker", "isResize", "isLink", "defineDelayTimeout", "speed", "autoscroll_speed", "setInterval", "autoscroll_delay", "defineScrollInterval", "clearInterval", "autoscrollInterval", "isScroll", "autoscroll", "posY", "need_scroll", "scrollState", "currentScrollTop", "scrollOuterHeight", "inner_height", "scrollInnerHeight", "currentScrollLeft", "scrollOuterWidth", "inner_width", "scrollInnerWidth", "autoscroll_step", "boxSize", "startCoord", "serverProcessorURL", "serverProcessor", "action_param", "updatedRows", "autoUpdate", "_tMode", "_headers", "_payload", "post_delim", "_waitMode", "_in_progress", "_invalid", "mandatoryFields", "messages", "updated", "inserted", "deleted", "invalid", "invalid_cell", "enableUTFencoding", "setTransactionMode", "total", "headers", "_tSend", "_endnm", "_serialize_as_json", "escape", "_utf", "encodeURIComponent", "setDataColumns", "_columns", "getSyncState", "enableDataNames", "enablePartialDataSend", "_changed", "dnd", "rowId", "findRow", "existing", "getUserData", "set_invalid", "setUserData", "is_invalid", "_clearUpdateFlag", "markRow", "_methods", "details", "checkBeforeUpdate", "mytype", "_h2", "editStop", "sendAllData", "_beforeSendData", "_getRowData", "_sendData", "_serializeAsJSON", "serialize_one", "stack", "pref", "serialized", "_applyPayload", "urlSeparator", "a1", "queryParams", "ids", "afterUpdate", "a3", "_user", "a4", "method", "query", "_forEachUpdatedRow", "valid", "_getAllData", "stop", "has_one", "setVerificator", "verifFunction", "clearVerificator", "pattern", "defineAction", "_uActions", "afterUpdateCallback", "tid", "btag", "marker", "correct", "soid", "finalizeUpdate", "cleanUpdate", "atag", "anObj", "_dp_init", "setOnAfterUpdate", "enableDebug", "setOnBeforeUpdateHandler", "func", "setAutoUpdate", "user", "_need_update", "_update_busy", "xml_node", "afterAutoUpdate", "fullSync", "loadUpdate", "getUpdates", "_v", "_a", "version", "vers", "upds", "status", "updateCallback", "upd", "objData", "xml_date", "insertCallback", "isExist", "addLink", "deleteCallback", "deleteLink", "dataprocessor", "liveUpdateHooks", "oldAfterUpdate", "dataProcessorHandlers", "dp", "_serverProcessor", "modes", "_ganttMode", "newState", "reqUrl", "filePath", "_change_id", "changeLinkId", "changeTaskId", "_row_style", "row_id", "_delete_task", "_sendTaskOrder", "$drop_target", "clientSideDelete", "clientOnly", "treeHelper", "cascadeDelete", "cascade_delete", "dpMode", "cascade", "itemLinks", "getTaskLinks", "updateLink", "substring", "detachDataProcessor", "userdata", "bindDataStore", "itemRepainter", "getLayers", "render_item", "renderers", "render_items", "skipRepaint", "change_id", "refreshId", "selectedId", "deleteItem", "TreeDataStore", "_branches", "$parentProperty", "parentProperty", "$getRootId", "$openInitially", "openInitially", "eachParent", "_buildTree", "_add_branch", "calculateItemLevel", "_move_branch", "$rendered_parent", "_replace_branch_child", "_traverseBranches", "branch", "items", "source_pid", "tbranch", "parentId", "getSiblings", "siblings", "_setParentInner", "new_pid", "startItem", "parentsHash", "Error", "added_already", "old_parent", "new_parent", "old_id", "new_id", "newbranch", "criteria", "original_criteria", "temp", "getLinkCount", "getTaskCount", "getVisibleTaskCount", "getTaskIndex", "startTask", "calculateTaskLevel", "moveTask", "createTasksFacade", "createLinksFacade", "createDatastoreSelect", "datastoreRender", "getDatastores", "createDatastoreFacade", "createDatastore", "$StoreType", "open_tree_initially", "setService", "storeList", "stores", "refresh_links", "linkId", "_clear_data", "unselectTask", "facadeFactory", "parseDate", "checkLinkedTaskVisibility", "sync_link", "sourceTask", "targetTask", "sync_link_delete", "sync_links", "mapEvents", "conf", "mapFrom", "mapTo", "sourceEvent", "targetEvent", "$index", "oldState", "sourceVisible", "targetVisible", "deletedLinks", "onItemLoading", "onBeforeAdd", "onAfterAdd", "onBeforeUpdate", "onAfterUpdate", "onBeforeDelete", "onAfterDelete", "onIdChange", "onBeforeItemMove", "onAfterItemMove", "onFilterItem", "onItemOpen", "onItemClose", "onBeforeSelect", "onAfterSelect", "onAfterUnselect", "getTimeline", "getGrid", "getVerticalScrollbar", "getHorizontalScrollbar", "DEFAULT_VALUE", "tryCall", "fallback", "getTaskTop", "getTaskPosition", "getTaskHeight", "roundTaskDates", "getLinkNode", "oldH", "oldV", "newV", "newH", "date_x", "scroll_to", "_scroll_state", "x_pos", "y_pos", "x_inner", "y_inner", "scrollVer", "scrollHor", "horState", "visible", "verState", "addTaskLayer", "addLinkLayer", "initializer", "_legacyGridResizerClass", "resizers", "gridResizer", "onCreated", "mainTimeline", "show_chart", "showGrid", "show_grid", "colsWidth", "grid_limits", "original_grid_width", "skinSettings", "_initScrollStateEvents", "_getVerticalScrollbar", "oldPos", "newPos", "$scroll_ver", "$scroll_hor", "_findGridResizer", "gridFirst", "_getSiblings", "_behind", "_front", "onInitialized", "resizeInfo", "initialWidth", "prevCellWidth", "nextCellWidth", "viewCell", "limits", "newBehindSize", "newFrontSize", "oldBackSize", "oldFrontSize", "newBackSize", "oldSize", "onDestroyed", "initLinksDND", "_link_landing", "_link_target_task", "_link_target_task_start", "_link_source_task", "_link_source_task_start", "getDndState", "DnD", "sensitivity", "updates_per_second", "getLinePos", "shift", "isStart", "taskPos", "xEnd", "yEnd", "milestoneWidth", "origWidth", "sqrt", "getVisibleMilestoneWidth", "getMilestonePosition", "isMilestone", "updateMarkedHtml", "drag_link_class", "resetDndState", "coordinateCircleQuarter", "sX", "eX", "sY", "eY", "_dir_start", "dd", "getPosition", "advanceMarker", "landing", "prevTarget", "prevLanding", "prevToStart", "targ", "_dir_end", "targetChanged", "s_x", "s_y", "e_x", "e_y", "_direction", "getDirectionLine", "link_direction_class", "dist", "pow", "tan", "angle", "atan", "PI", "sin", "cos", "ieTransform", "shiftLeft", "shiftTop", "showDirectingLine", "createLinkDND", "createTaskDND", "extend", "round_task_dates", "dragMultiple", "_events", "before_start", "before_finish", "after_finish", "_handlers", "_domEvents", "clear_drag_state", "set_actions", "drag_from_start", "stage", "_move", "_resize", "_resize_progress", "attach", "start_x", "start_y", "coords_x", "_drag_task_coords", "min_duration", "diffValue", "_find_max_shift", "dragItems", "correctShift", "minX", "maxX", "maxShift", "minShift", "new_start", "new_end", "obj_s_x", "obj_e_x", "_mouse_position_change", "_is_number", "isFinite", "_update_on_move", "_update_item_on_move", "curr_date", "drag_project", "initialDrag", "childDrag", "_get_drag_mode", "_fix_dnd_scale_time", "fixStart", "fixEnd", "_fix_working_times", "_finalize_mouse_up", "_fireEvent", "_dhx_changed", "dragProperty", "params", "trigger", "drag_state", "taskDnD", "linkDnD", "_linksDnD", "_tasksDnD", "_attachDomEvents", "_attachStateProvider", "extendDom", "_clearDomEvents", "_clearStateProvider", "_delete_link_handler", "link_description", "coll", "coll_date", "scale_step", "unregisterProvider", "gridToPageCoordinates", "gridPos", "removeLineHighlight", "markerLine", "highlightPosition", "ePos", "gridHeight", "getTaskMarkerPosition", "pointerEvents", "markerFolder", "highlightFolder", "linePos", "indentNode", "indent", "itemTop", "itemHeight", "childCount", "getLineMarkerPosition", "highlightRow", "dropTarget", "targetTaskId", "relTargetPos", "eventTop", "findClosesTarget", "allowedLevel", "targetLevel", "findTargetAbove", "findTargetBelow", "rootLevel", "current", "getLockedLevelTarget", "getMultiLevelTarget", "higlighter", "dnd_sensitivity", "hideQuickInfo", "_hideQuickInfo", "initial_open_state", "outerHTML", "drop_target", "$transparent", "getDropPosition", "getTargetTaskId", "lockLevel", "order_branch_free", "getStore", "lastTaskOfLevel", "last_item", "_getGridPos", "_getTargetY", "_getTaskByY", "dropIndex", "targetY", "over", "nextId", "prevId", "rowDnd", "rowDndMarker", "extendGantt", "ext", "inlineEditors", "_inlineEditors", "createEditors", "initEvents", "clearEvents", "scroll_on_click", "sorting_method", "callHandler", "totalWidth", "aria", "date_grid", "tree", "grid_indent", "grid_open", "grid_folder", "grid_blank", "grid_file", "align", "grid_row_class", "css_template", "drawer", "current_pos", "dirs", "down", "path", "point", "get_lines", "dots", "line_to", "get_path", "line", "_get_line", "get_wrapper_sizes", "wrapper_size", "link_wrapper_width", "get_line_sizes", "line_size", "marginTop", "marginLeft", "render_line", "innerPos", "get_direction", "vect", "path_builder", "point_to", "get_points", "pt", "get_endpoint", "xy", "shiftX", "lineType", "get_line_type", "forward", "sign", "milestoneHeight", "lines", "cssTemplate", "link_class", "isCriticalLink", "endpoint", "line_width", "_render_link_arrow", "borderColor", "show_task_cells", "task_cell_class", "odd", "task_row_class", "defaultRender", "sub_tasks", "PredecessorEditor", "parseInputString", "predecessors", "delimiter", "formatPredecessors", "pred", "getLinksDiff", "predecessorCodes", "selectedLinks", "predecessor", "lag", "getSelectedLinks", "existingLinksSearch", "linksToAdd", "linkKey", "linksToDelete", "remove", "editor", "linksDiff", "autoSchedule", "inputPredecessors", "taskPredecessors", "html5DateFormat", "dateToStr", "strToDate", "DateEditor", "str_to_date", "parsed", "SelectEditor", "optionsHtml", "NumberEditor", "TextEditor", "controller", "onBlurDelay", "keyNav", "keyboardNavigation", "activeCell", "locateCell", "columnName", "editorState", "getEditorConfig", "startEdit", "hasEditor", "keyboard", "preventKeyNav", "ENTER", "ctrlKey", "metaKey", "ESC", "LEFT", "RIGHT", "editorType", "DELETE", "TAB", "editPrevCell", "editNextCell", "onShow", "onHide", "destroy", "keyboard_navigation", "defaultPrevented", "shouldPrevent", "defaultMapping", "keyNavMappings", "setMapping", "getMapping", "keyboard_navigation_cells", "getKeyboardMapping", "textEditorFactory", "numberEditorFactory", "selectEditorFactory", "dateEditorFactory", "predecessorEditorFactory", "initConfigs", "editor_types", "number", "keyboardMapping", "eventBus", "inlineEditController", "_createPlaceholder", "_getEditorPosition", "handlers", "_itemId", "_columnName", "_editor", "_editorType", "_placeholder", "editorConfig", "_getItemValue", "isChanged", "newValue", "oldValue", "_findEditableCell", "nextIndex", "nextColumn", "getNextCell", "getFirstCell", "getLastCell", "canChangeRow", "moveRow", "editNextRow", "editPrevRow", "handlerId", "ScrollbarCell", "_scrollHorizontalHandler", "_scrollVerticalHandler", "_outerScrollVerticalHandler", "_outerScrollHorizontalHandler", "_mouseWheelHandler", "_isHorizontal", "scrollPosition", "_isVertical", "_initVertical", "_initHorizontal", "_initMouseWheel", "_initLinkedViews", "_getRootParent", "_eachView", "eachCell", "_getLinkedViews", "scrollX", "_updateLinkedViews", "scrollHorizontally", "_scrolling", "scrollVertically", "_wheel_time", "_oldLeft", "_getScrollSize", "outerSize", "isHorizontal", "linked", "scrollProperty", "innerSizeProperty", "outerProperty", "_getScrollOffset", "cellScrollSize", "nonScrollableSize", "outerScroll", "innerScroll", "scrollSizes", "_setScrollSize", "toggleVisibility", "_getScaleOffset", "parentLayout", "_oldTop", "_checkWheelTarget", "targetNode", "connectedViews", "ff", "wx", "deltaX", "wheelDeltaX", "wy", "deltaY", "wheelDelta", "oldLeft", "detail", "oldTop", "ViewCell", "childConfig", "$initialized", "unload", "outerX", "outerY", "childSize", "ViewLayout", "$cell", "byMaxSize", "otherCell", "task_area_pulls", "task_area_renderers", "getRenderer", "layer_attribute", "dom", "remove_item", "clear_container", "buffer", "createDocumentFragment", "vis", "replace_item", "newNode", "restore", "clearRenderers", "renderFactoryProvider", "mergeFilters", "filter_methods", "filter_method", "renderFactory", "createGroup", "get_container", "rel_root", "defaultFilters", "renderGroup", "tempCollection", "filters", "_add", "pending", "topmost", "rel", "eachLayer", "createLayerFactory", "previusSiblingContainer", "defaultContainerSibling", "removeTaskLayer", "_getLinkLayers", "removeLinkLayer", "createMouseHandler", "eventHandlers", "doubleclick", "contextMenu", "addEventTarget", "onClick", "findEventHandlers", "callEventHandlers", "onContextMenu", "returnValue", "delegateHandlers", "handlerResult", "details_on_dblclick", "onMouseMove", "_last_move_event", "domEvents", "eventName", "elementHandlers", "ViewSettings", "extendSettings", "parentSettings", "own", "parentView", "parentConfig", "parentTemplates", "configurable", "createFactory", "createdViews", "creator", "configure", "registerView", "viewConstructor", "uiFactory", "createLayers", "Resizer", "Scrollbar", "ResourceGrid", "ResourceTimeline", "ResourceHistogram", "gridEditorsFactory", "renderTaskBar", "renderSplitTaskBar", "renderTaskBg", "renderLink", "gridRenderer", "mainGridInitializer", "mainTimelineInitializer", "mainLayoutInitializer", "attachInitializer", "layersEngine", "layersApi", "layersService", "boxAttribute", "_dhx_msg_cfg", "usercall", "modalBox", "modal_key", "messageBox", "modality", "cover", "buttonAriaAttrs", "getFirstDefined", "_createBox", "cancel", "contentId", "btn", "_boxStructure", "alertPopup", "confirmPopup", "boxPopup", "box_params", "focusable", "timers", "info", "hideAll", "popups", "modalbox", "createScope", "stateProviders", "internal", "provider", "regTemplates", "initial", "template_name", "server_utc", "api_date", "task_unscheduled_time", "grid_date_format", "tooltip_date_format", "copyDomEvent", "altKey", "_obj", "_settings", "inputMethods", "getInputMethods", "_drag_start_timer", "clearDragTimer", "original_target", "dragStart", "traceDragEvents", "domElement", "inputMethod", "mousemove", "dragMove", "dragScroll", "limited_mousemove", "mouseup", "dragEnd", "checkPositionChange", "diff_x", "diff_y", "initDnDMarker", "backupEventTarget", "domEvent", "getEvent", "backup_element", "elementFromPoint", "month_short_hash", "month_full_hash", "old", "hour_start", "time_part", "week_start", "start_on_monday", "month_start", "setDate", "quarter_start", "res_month", "setMonth", "year_start", "setMinutes", "minute_start", "getSeconds", "setSeconds", "getMilliseconds", "setMilliseconds", "_add_days", "ndate", "setYear", "add_quarter", "to_fixed", "num", "format", "utc", "getISOWeek", "getWeek", "splt", "mask", "_getWeekNumber", "isoWeek", "nday", "first_thursday", "year_number", "ordinal_date", "getUTCISOWeek", "convert_to_utc", "getUTCFullYear", "getUTCMonth", "getUTCHours", "getUTCMinutes", "getUTCSeconds", "DOMParser", "parseFromString", "ActiveXObject", "async", "loadXML", "tagname", "xhr", "responseXML", "xpathExp", "docObj", "selectNodes", "ownerDocument", "evaluate", "XPathResult", "ANY_TYPE", "iterateNext", "_call", "onLoad", "getSync", "postData", "del", "post", "postSync", "getLong", "postLong", "longParams", "isQt", "onreadystatechange", "readyState", "setRequestHeader", "toUpperCase", "send", "branch_loading", "branch_loading_property", "show_loading", "dhx_save_btn", "dhx_cancel_btn", "dhx_delete_btn", "project_sections", "milestone_sections", "grid_resizer_column_attribute", "grid_resizer_attribute", "keep_grid_width", "grid_resize", "prevent_default_scroll", "service", "$inject", "templatesLoader", "stateService", "uiApi", "createLayoutFacade", "warnings", "base"],
    "mappings": "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",
    "file": "/project_gantt_view/static/src/js/dhtmlxgantt.js",
    "sourcesContent": [" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 134);\n", "var helpers = require(\"./helpers\");\n\nfunction copy(object) {\n\tvar i, result; // iterator, types array, result\n\n\tif (object && typeof object == \"object\") {\n\n\t\tswitch (true){\n\t\t\tcase (helpers.isDate(object)):\n\t\t\t\tresult = new Date(object);\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isArray(object)):\n\t\t\t\tresult = new Array(object.length);\n\t\t\t\tfor(i = 0; i < object.length; i++){\n\t\t\t\t\tresult[i] = copy(object[i]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isStringObject(object)):\n\t\t\t\tresult = new String(object);\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isNumberObject(object)):\n\t\t\t\tresult = new Number(object);\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isBooleanObject(object)):\n\t\t\t\tresult = new Boolean(object);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult = {};\n\t\t\t\tfor (i in object) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.apply(object, [i]))\n\t\t\t\t\t\tresult[i] = copy(object[i]);\n\t\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result || object;\n}\n\nfunction mixin (target, source, force){\n\tfor (var f in source)\n\t\tif (((target[f] === undefined) || force)) target[f]=source[f];\n\treturn target;\n}\n\nfunction defined(obj) {\n\treturn typeof(obj) != \"undefined\";\n}\n\nvar seed;\nfunction uid() {\n\tif (!seed)\n\t\tseed = (new Date()).valueOf();\n\n\tseed++;\n\treturn seed;\n}\n\n//creates function with specified \"this\" pointer\nfunction bind(functor, object){\n\tif(functor.bind)\n\t\treturn functor.bind(object);\n\telse\n\t\treturn function(){ return functor.apply(object,arguments); };\n}\n\nfunction event(el, event, handler, capture){\n\tif (el.addEventListener)\n\t\tel.addEventListener(event, handler, capture === undefined ? false : capture);\n\n\telse if (el.attachEvent)\n\t\tel.attachEvent(\"on\"+event, handler);\n}\n\nfunction eventRemove(el, event, handler, capture){\n\tif (el.removeEventListener)\n\t\tel.removeEventListener(event, handler, capture === undefined ? false : capture);\n\n\telse if (el.detachEvent)\n\t\tel.detachEvent(\"on\"+event, handler);\n}\n\n\nmodule.exports = {\n\tcopy: copy,\n\tdefined: defined,\n\tmixin: mixin,\n\tuid: uid,\n\tbind: bind,\n\tevent: event,\n\teventRemove: eventRemove\n};", "//returns position of html element on the page\nfunction elementPosition(elem) {\n\tvar top=0, left=0, right=0, bottom=0;\n\tif (elem.getBoundingClientRect) { //HTML5 method\n\t\tvar box = elem.getBoundingClientRect();\n\t\tvar body = document.body;\n\t\tvar docElem = (document.documentElement ||\n\t\t\tdocument.body.parentNode ||\n\t\t\tdocument.body);\n\n\t\tvar scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n\t\tvar scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\t\tvar clientTop = docElem.clientTop || body.clientTop || 0;\n\t\tvar clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\t\ttop  = box.top +  scrollTop - clientTop;\n\t\tleft = box.left + scrollLeft - clientLeft;\n\n\t\tright = document.body.offsetWidth - box.right;\n\t\tbottom = document.body.offsetHeight - box.bottom;\n\t} else { //fallback to naive approach\n\t\twhile(elem) {\n\t\t\ttop = top + parseInt(elem.offsetTop,10);\n\t\t\tleft = left + parseInt(elem.offsetLeft,10);\n\t\t\telem = elem.offsetParent;\n\t\t}\n\n\t\tright = document.body.offsetWidth - elem.offsetWidth - left;\n\t\tbottom = document.body.offsetHeight - elem.offsetHeight - top;\n\t}\n\treturn { y: Math.round(top), x: Math.round(left), width:elem.offsetWidth, height:elem.offsetHeight, right: Math.round(right), bottom: Math.round(bottom) };\n}\n\nfunction isVisible(node){\n\tvar display = false,\n\t\tvisibility = false;\n\tif(window.getComputedStyle){\n\t\tvar style = window.getComputedStyle(node, null);\n\t\tdisplay = style[\"display\"];\n\t\tvisibility = style[\"visibility\"];\n\t}else if(node.currentStyle){\n\t\tdisplay = node.currentStyle[\"display\"];\n\t\tvisibility = node.currentStyle[\"visibility\"];\n\t}\n\treturn (display != \"none\" && visibility != \"hidden\");\n}\n\nfunction hasNonNegativeTabIndex(node){\n\treturn !isNaN(node.getAttribute(\"tabindex\")) && (node.getAttribute(\"tabindex\")*1 >= 0);\n}\n\nfunction hasHref(node){\n\tvar canHaveHref = {\"a\": true, \"area\": true};\n\tif(canHaveHref[node.nodeName.loLowerCase()]){\n\t\treturn !!node.getAttribute(\"href\");\n\t}\n\treturn true;\n}\n\nfunction isEnabled(node){\n\tvar canDisable = {\"input\":true, \"select\":true, \"textarea\":true, \"button\":true, \"object\":true};\n\tif(canDisable[node.nodeName.toLowerCase()]){\n\t\treturn !node.hasAttribute(\"disabled\");\n\t}\n\n\treturn true;\n}\n\nfunction getFocusableNodes(root){\n\tvar nodes = root.querySelectorAll([\n\t\t\"a[href]\",\n\t\t\"area[href]\",\n\t\t\"input\",\n\t\t\"select\",\n\t\t\"textarea\",\n\t\t\"button\",\n\t\t\"iframe\",\n\t\t\"object\",\n\t\t\"embed\",\n\t\t\"[tabindex]\",\n\t\t\"[contenteditable]\"\n\t].join(\", \"));\n\n\tvar nodesArray = Array.prototype.slice.call(nodes, 0);\n\tfor(var i = 0; i < nodesArray.length; i++){\n\t\tvar node = nodesArray[i];\n\t\tvar isValid = (hasNonNegativeTabIndex(node)  || isEnabled(node) || hasHref(node)) && isVisible(node);\n\t\tif(!isValid){\n\t\t\tnodesArray.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n\treturn nodesArray;\n}\n\nfunction getScrollSize(){\n\tvar div = document.createElement(\"div\");\n\tdiv.style.cssText=\"visibility:hidden;position:absolute;left:-1000px;width:100px;padding:0px;margin:0px;height:110px;min-height:100px;overflow-y:scroll;\";\n\n\tdocument.body.appendChild(div);\n\tvar width = div.offsetWidth-div.clientWidth;\n\tdocument.body.removeChild(div);\n\n\treturn width;\n}\n\nfunction getClassName(node){\n\tif(!node) return \"\";\n\n\tvar className = node.className || \"\";\n\tif(className.baseVal)//'className' exist but not a string - IE svg element in DOM\n\t\tclassName = className.baseVal;\n\n\tif(!className.indexOf)\n\t\tclassName = \"\";\n\n\treturn _trimString(className);\n}\n\nfunction addClassName(node, className){\n\tif (className && node.className.indexOf(className) === -1) {\n\t\tnode.className += \" \" + className;\n\t}\n}\n\nfunction removeClassName(node, name) {\n\tname = name.split(\" \");\n\tfor (var i = 0; i < name.length; i++) {\n\t\tvar regEx = new RegExp(\"\\\\s?\\\\b\" + name[i] + \"\\\\b(?![-_.])\", \"\");\n\t\tnode.className = node.className.replace(regEx, \"\");\n\t}\n}\n\nfunction hasClass(element, className){\n\tif ('classList' in element) {\n\t\treturn element.classList.contains(className);\n\t} else { \n\t\treturn new RegExp(\"\\\\b\" + className + \"\\\\b\").test(element.className);\n\t}\n}\n\nfunction toNode(node) {\n\tif (typeof node === \"string\") {\n\t\treturn (document.getElementById(node) || document.querySelector(node) || document.body);\n\t}\n\treturn node || document.body;\n}\n\nvar _slave = document.createElement(\"div\");\nfunction insert(node, newone) {\n\t_slave.innerHTML = newone;\n\tvar child = _slave.firstChild;\n\tnode.appendChild(child);\n\treturn child;\n}\n\nfunction remove(node) {\n\tif (node && node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\nfunction getChildren(node, css) {\n\tvar ch = node.childNodes;\n\tvar len = ch.length;\n\tvar out = [];\n\tfor (var i = 0; i < len; i++) {\n\t\tvar obj = ch[i];\n\t\tif (obj.className && obj.className.indexOf(css) !== -1) {\n\t\t\tout.push(obj);\n\t\t}\n\t}\n\treturn out;\n}\n\nfunction getTargetNode(e){\n\tvar trg;\n\tif (e.tagName)\n\t\ttrg = e;\n\telse {\n\t\te=e||window.event;\n\t\ttrg=e.target||e.srcElement;\n\t}\n\treturn trg;\n}\n\nfunction locateAttribute(e, attribute) {\n\tif(!attribute) return;\n\n\tvar trg = getTargetNode(e);\n\n\twhile (trg){\n\t\tif (trg.getAttribute){\t//text nodes has not getAttribute\n\t\t\tvar test = trg.getAttribute(attribute);\n\t\t\tif (test) return trg;\n\t\t}\n\t\ttrg=trg.parentNode;\n\t}\n\treturn null;\n}\n\nfunction _trimString(str){\n\tvar func = String.prototype.trim || function(){ return this.replace(/^\\s+|\\s+$/g, \"\"); };\n\treturn func.apply(str);\n}\n\nfunction locateClassName(e, classname, strict){\n\tvar trg = getTargetNode(e);\n\tvar css = \"\";\n\n\tif(strict === undefined)\n\t\tstrict = true;\n\n\twhile (trg){\n\t\tcss = getClassName(trg);\n\t\tif(css){\n\t\t\tvar ind = css.indexOf(classname);\n\t\t\tif (ind >= 0){\n\t\t\t\tif (!strict)\n\t\t\t\t\treturn trg;\n\n\t\t\t\t//check that we have exact match\n\t\t\t\tvar left = (ind === 0) || (!_trimString(css.charAt(ind - 1)));\n\t\t\t\tvar right = ((ind + classname.length >= css.length)) || (!_trimString(css.charAt(ind + classname.length)));\n\n\t\t\t\tif (left && right)\n\t\t\t\t\treturn trg;\n\t\t\t}\n\t\t}\n\t\ttrg=trg.parentNode;\n\t}\n\treturn null;\n}\n\n/*\nevent position relatively to DOM element\n */\nfunction getRelativeEventPosition(ev, node){\n\tvar d = document.documentElement;\n\tvar box = elementPosition(node);\n\n\treturn {\n\t\tx: ev.clientX + d.scrollLeft - d.clientLeft - box.x + node.scrollLeft,\n\t\ty: ev.clientY + d.scrollTop - d.clientTop - box.y + node.scrollTop\n\t};\n}\n\n\nfunction isChildOf(child, parent){\n\tif(!child || !parent){\n\t\treturn false;\n\t}\n\n\twhile(child && child != parent) {\n\t\tchild = child.parentNode;\n\t}\n\n\treturn child === parent;\n}\n\nmodule.exports = {\n\tgetNodePosition: elementPosition,\n\tgetFocusableNodes: getFocusableNodes,\n\tgetScrollSize: getScrollSize,\n\tgetClassName: getClassName,\n\taddClassName: addClassName,\n\tremoveClassName: removeClassName,\n\tinsertNode: insert,\n\tremoveNode: remove,\n\tgetChildNodes: getChildren,\n\ttoNode: toNode,\n\tlocateClassName:locateClassName,\n\tlocateAttribute: locateAttribute,\n\tgetTargetNode: getTargetNode,\n\tgetRelativeEventPosition: getRelativeEventPosition,\n\tisChildOf: isChildOf,\n\thasClass: hasClass\n};", "module.exports = function (d, b) {\n\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\tfunction __() { this.constructor = d; }\n\td.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};", "var units = {\n\t\"second\": 1,\n\t\"minute\": 60,\n\t\"hour\": 60 * 60,\n\t\"day\": 60 * 60 * 24,\n\t\"week\": 60 * 60 * 24 * 7,\n\t\"month\": 60 * 60 * 24 * 30,\n\t\"quarter\": 60 * 60 * 24 * 30 * 3,\n\t\"year\": 60 * 60 * 24 * 365\n};\nfunction getSecondsInUnit(unit){\n\treturn units[unit] || units.hour;\n}\n\nfunction forEach(arr, callback) {\n\tif (arr.forEach) {\n\t\tarr.forEach(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tcallback(workArray[i], i);\n\t\t}\n\t}\n}\n\nfunction arrayMap(arr, callback) {\n\tif (arr.map) {\n\t\treturn arr.map(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tvar resArray = [];\n\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tresArray.push(callback(workArray[i], i));\n\t\t}\n\t\treturn resArray;\n\t}\n}\n\n\nfunction arrayFind(arr, callback) {\n\tif (arr.find) {\n\t\treturn arr.find(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// iframe-safe array type check instead of using instanceof\nfunction isArray(obj){\n\tif(Array.isArray){\n\t\treturn Array.isArray(obj);\n\t}else{\n\t\t// close enough\n\t\treturn (obj && obj.length !== undefined && obj.pop && obj.push);\n\t}\n}\n\n// non-primitive string object, e.g. new String(\"abc\")\nfunction isStringObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function String() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Number(5)\nfunction isNumberObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Number() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Boolean(true)\nfunction isBooleanObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Boolean() { [native code] }\";\n}\n\nfunction isDate(obj) {\n\tif (obj && typeof obj === \"object\") {\n\t\treturn !!(obj.getFullYear && obj.getMonth && obj.getDate);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction arrayFilter(arr, callback) {\n\tvar result = [];\n\n\tif (arr.filter) {\n\t\treturn arr.filter(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\tresult[result.length] = arr[i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction hashToArray(hash) {\n\tvar result = [];\n\n\tfor (var key in hash) {\n\t\tif (hash.hasOwnProperty(key)) {\n\t\t\tresult.push(hash[key]);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction arraySome(arr, callback) {\n\tif (arr.length === 0) return false;\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (callback(arr[i], i, arr)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction arrayDifference(arr, callback) {\n\treturn arrayFilter(arr, function(item, i) {\n\t\treturn !callback(item, i);\n\t});\n}\n\nfunction throttle (callback, timeout) {\n\tvar wait = false;\n\n\treturn function () {\n\t\tif (!wait) {\n\t\t\tcallback.apply(null, arguments);\n\t\t\twait = true;\n\t\t\tsetTimeout(function () {\n\t\t\t\twait = false;\n\t\t\t}, timeout);\n\t\t}\n\t};\n}\n\nfunction delay (callback, timeout){\n\tvar timer;\n\treturn function() {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(function(){\n\t\t\tcallback();\n\t\t}, timeout);\n\t};\n}\n\nfunction sortArrayOfHash(arr, field, desc) {\n\tvar compare = function(a, b) {\n\t\treturn a < b;\n\t};\n\n\tarr.sort(function(a, b) {\n\t\tif (a[field] === b[field]) return 0;\n\t\t\n\t\treturn desc ? compare(a[field], b[field]) : compare(b[field], a[field]);\n\t});\n}\n\nmodule.exports = {\n\tgetSecondsInUnit: getSecondsInUnit,\n\tforEach: forEach,\n\tarrayMap: arrayMap,\n\tarrayFind: arrayFind,\n\tarrayFilter: arrayFilter,\n\tarrayDifference: arrayDifference,\n\tarraySome: arraySome,\n\thashToArray: hashToArray,\n\tsortArrayOfHash: sortArrayOfHash,\n\tthrottle: throttle,\n\tisArray: isArray,\n\tisDate: isDate,\n\tisStringObject: isStringObject,\n\tisNumberObject: isNumberObject,\n\tisBooleanObject: isBooleanObject,\n\tdelay: delay\n};", "var EventHost = function(){\n\tthis._connected = [];\n\tthis._silent_mode = false;\n};\n\nEventHost.prototype = {\n\t_silentStart: function() {\n\t\tthis._silent_mode = true;\n\t},\n\t_silentEnd: function() {\n\t\tthis._silent_mode = false;\n\t}\n};\n\nvar\tcreateEventStorage = function(obj) {\n\tvar dhx_catch = [];\n\tvar z = function(){\n\t\tvar res = true;\n\t\tfor (var i = 0; i < dhx_catch.length; i++){\n\t\t\tif (dhx_catch[i]){\n\t\t\t\tvar zr = dhx_catch[i].apply(obj, arguments);\n\t\t\t\tres=res&&zr;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\tz.addEvent=function(ev){\n\t\tif (typeof (ev) == \"function\")\n\t\t\treturn dhx_catch.push(ev)-1;\n\t\treturn false;\n\t};\n\tz.removeEvent=function(id){\n\t\tdhx_catch[id]=null;\n\t};\n\treturn z;\n};\n\nfunction makeEventable(obj){\n\n\tvar eventHost = new EventHost();\n\tobj.attachEvent=function(name, catcher, callObj){\n\t\tname='ev_'+name.toLowerCase();\n\t\tif (!eventHost[name])\n\t\t\teventHost[name] = createEventStorage(callObj||this);\n\n\t\treturn(name+':'+eventHost[name].addEvent(catcher)); //return ID (event name & event ID)\n\t};\n\tobj.attachAll = function(callback, callObj){\n\t\tthis.attachEvent('listen_all', callback, callObj);\n\t};\n\n\tobj.callEvent=function(name, arg0, callObj){\n\t\tif (eventHost._silent_mode) return true;\n\n\t\tvar handlerName = 'ev_'+name.toLowerCase();\n\n\t\tif (eventHost['ev_listen_all']){\n\t\t\teventHost['ev_listen_all'].apply(callObj || this, [name].concat(arg0));\n\t\t}\n\n\t\tif (eventHost[handlerName])\n\t\t\treturn eventHost[handlerName].apply(callObj || this, arg0);\n\t\treturn true;\n\t};\n\tobj.checkEvent=function(name){\n\t\treturn (!!eventHost['ev_'+name.toLowerCase()]);\n\t};\n\tobj.detachEvent=function(id){\n\t\tif (id){\n\t\t\tvar list = id.split(':');           //get EventName and ID\n\t\t\teventHost[list[0]].removeEvent(list[1]); //remove event\n\t\t}\n\t};\n\tobj.detachAllEvents = function(){\n\t\tfor (var name in eventHost){\n\t\t\tif (name.indexOf(\"ev_\") === 0)\n\t\t\t\tdelete eventHost[name];\n\t\t}\n\t};\n\n}\n\nmodule.exports = makeEventable;", "function dummy() {\n\t// eslint-disable-next-line\n\tconsole.log(\"Method is not implemented.\"); \n}\nfunction BaseControl() {\n}\n\n// base methods will be runned in gantt context\nBaseControl.prototype.render = dummy; // arguments: sns\nBaseControl.prototype.set_value = dummy; // arguments: node, value, ev, sns(config)\nBaseControl.prototype.get_value = dummy; // arguments node, ev, sns(config)\nBaseControl.prototype.focus = dummy; // arguments: node\n\nmodule.exports = function(gantt) { // we could send current instance of gantt to module\n\treturn BaseControl;\n};", "module.exports = function (gantt) {\n\n\tvar BaseEditor = function () {\n\t};\n\n\tBaseEditor.prototype = {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t},\n\t\thide: function () {\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = value;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn this.get_input(node).value || \"\";\n\t\t},\n\t\tis_changed: function (value, id, column, node) {\n\t\t\tvar currentValue = this.get_value(id, column, node);\n\t\t\tif (currentValue && value && currentValue.valueOf && value.valueOf) {\n\t\t\t\treturn currentValue.valueOf() != value.valueOf();\n\t\t\t} else {\n\t\t\t\treturn currentValue != value;\n\t\t\t}\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\treturn true;\n\t\t},\n\n\t\tsave: function (id, column, node) {\n\n\t\t},\n\t\tget_input: function (node) {\n\t\t\treturn node.querySelector(\"input\");\n\t\t},\n\t\tfocus: function (node) {\n\t\t\tvar input = this.get_input(node);\n\t\t\tif (!input) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (input.focus) {\n\t\t\t\tinput.focus();\n\t\t\t}\n\n\t\t\tif (input.select) {\n\t\t\t\tinput.select();\n\t\t\t}\n\t\t}\n\t};\n\treturn BaseEditor;\n};", "var utils = require(\"../../../utils/utils\"),\n\teventable = require(\"../../../utils/eventable\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar Cell = (function () {\n\t\"use strict\";\n\n\tfunction Cell(parent, config, factory, gantt) {\n\t\tif (parent) {\n\t\t\tthis.$container = domHelpers.toNode(parent);\n\t\t\tthis.$parent = parent;\n\t\t}\n\t\t// save config\n\t\tthis.$config = utils.mixin(config, {\n\t\t\theaderHeight: 33\n\t\t});\n\t\tthis.$gantt = gantt;\n\t\tthis.$domEvents = gantt._createDomEventScope();\n\t\t// set id\n\t\tthis.$id = config.id || \"c\" + utils.uid();\n\n\t\tthis.$name = \"cell\";\n\t\tthis.$factory = factory;\n\n\t\teventable(this);\n\n\t}\n\n\tCell.prototype.destructor = function () {\n\t\tthis.$parent = this.$container = this.$view = null;\n\t\tvar mouse = this.$gantt.$services.getService(\"mouseEvents\");\n\t\tmouse.detach(\"click\", \"gantt_header_arrow\", this._headerClickHandler);\n\t\tthis.$domEvents.detachAll();\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\t};\n\tCell.prototype.cell = function (id) {\n\t\treturn null;\n\t};\n\n\tCell.prototype.scrollTo = function(left, top){\n\n\t\tif (left*1 == left){\n\t\t\tthis.$view.scrollLeft = left;\n\t\t}\n\t\tif(top*1 == top){\n\t\t\tthis.$view.scrollTop = top;\n\t\t}\n\t};\n\n\tCell.prototype.clear = function(){\n\t\tthis.getNode().innerHTML = \"\";\n\t\tthis.getNode().className = \"gantt_layout_content\";\n\t\tthis.getNode().style.padding = \"0\";\n\t};\n\n\tCell.prototype.resize = function (final) {\n\t\tif (this.$parent) {\n\t\t\treturn this.$parent.resize(final);\n\t\t}\n\n\t\tif(final === false){\n\t\t\tthis.$preResize = true;\n\t\t}\n\n\t\tvar topCont = this.$container;\n\t\tvar x = topCont.offsetWidth;\n\t\tvar y = topCont.offsetHeight;\n\t\tvar topSize = this.getSize();\n\t\tif (topCont === document.body) {\n\t\t\tx = document.body.offsetWidth;\n\t\t\ty = document.body.offsetHeight;\n\t\t}\n\t\tif (x < topSize.minWidth) {\n\t\t\tx = topSize.minWidth;\n\t\t}\n\t\tif (x > topSize.maxWidth) {\n\t\t\tx = topSize.maxWidth;\n\t\t}\n\t\tif (y < topSize.minHeight) {\n\t\t\ty = topSize.minHeight;\n\t\t}\n\t\tif (y > topSize.maxHeight) {\n\t\t\ty = topSize.maxHeight;\n\t\t}\n\t\tthis.setSize(x, y);\n\n\t\tif(!this.$preResize){\n\t\t//\tself.callEvent(\"onResize\", [x, y]);\n\t\t}\n\t\tthis.$preResize = false;\n\t};\n\n\tCell.prototype.hide = function () {\n\t\tthis._hide(true);\n\t\tthis.resize();\n\t};\n\tCell.prototype.show = function (force) {\n\t\tthis._hide(false);\n\t\tif (force && this.$parent) {\n\t\t\tthis.$parent.show();\n\t\t}\n\t\tthis.resize();\n\t};\n\tCell.prototype._hide = function (mode) {\n\t\tif (mode === true && this.$view.parentNode) {\n\t\t\tthis.$view.parentNode.removeChild(this.$view);\n\t\t}\n\t\telse if (mode === false && !this.$view.parentNode) {\n\t\t\tvar index = this.$parent.cellIndex(this.$id);\n\t\t\tthis.$parent.moveView(this, index);\n\t\t}\n\t\tthis.$config.hidden = mode;\n\t};\n\tCell.prototype.$toHTML = function (content, css) {\n\t\tif (content === void 0) { content = \"\"; }\n\t\tcss = [(css || \"\"), (this.$config.css || \"\")].join(\" \");\n\t\tvar obj = this.$config;\n\t\tvar header = \"\";\n\t\tif (obj.raw) {\n\t\t\tcontent = typeof obj.raw === \"string\" ? obj.raw : \"\";\n\t\t}\n\t\telse {\n\t\t\tif (!content) {\n\t\t\t\tcontent = \"<div class='gantt_layout_content' \"+(css ? \" class='\"+css+\"' \" : \"\")+\" >\" + (obj.html || \"\") + \"</div>\";\n\t\t\t}\n\t\t\tif (obj.header) {\n\t\t\t\tvar collapseIcon = obj.canCollapse ? \"<div class='gantt_layout_header_arrow'></div>\" : \"\";\n\t\t\t\theader = \"<div class='gantt_layout_header'>\" + collapseIcon + \"<div class='gantt_layout_header_content'>\" + obj.header + \"</div></div>\";\n\t\t\t}\n\t\t}\n\t\treturn \"<div class='gantt_layout_cell \" + css + \"' data-cell-id='\" + this.$id + \"'>\" + header + content + \"</div>\";\n\t};\n\tCell.prototype.$fill = function (node, parent) {\n\t\tthis.$view = node;\n\t\tthis.$parent = parent;\n\t\tthis.init();\n\t};\n\tCell.prototype.getNode = function () {\n\t\treturn (this.$view.querySelector(\"gantt_layout_cell\") || this.$view);\n\t};\n\tCell.prototype.init = function () {\n\t\t// [NOT-GOOD] code is executed for each component, while it still has only one handler, it is no good\n\n\t\tvar self = this;\n\n\t\tthis._headerClickHandler = function(e){\n\t\t\tvar cellId = domHelpers.locateAttribute(e, \"data-cell-id\");\n\t\t\tif(cellId == self.$id){\n\t\t\t\tself.toggle();\n\t\t\t}\n\t\t};\n\n\t\tvar mouse = this.$gantt.$services.getService(\"mouseEvents\");\n\t\tmouse.delegate(\"click\", \"gantt_header_arrow\", this._headerClickHandler);\n\n\t\tthis.callEvent(\"onReady\", []);\n\t};\n\tCell.prototype.toggle = function () {\n\t\tthis.$config.collapsed = !this.$config.collapsed;\n\t\tthis.resize();\n\t};\n\tCell.prototype.getSize = function () {\n\t\tvar size = {\n\t\t\theight: this.$config.height || 0,\n\t\t\twidth: this.$config.width || 0,\n\t\t\tgravity: this.$config.gravity || 1,\n\t\t\tminHeight: this.$config.minHeight || 0,\n\t\t\tminWidth: this.$config.minWidth || 0,\n\t\t\tmaxHeight: this.$config.maxHeight || 100000,\n\t\t\tmaxWidth: this.$config.maxWidth || 100000\n\t\t};\n\t\tif (this.$config.collapsed) {\n\t\t\tvar mode = this.$config.mode === \"x\";\n\t\t\tsize[mode ? \"width\" : \"height\"] = size[mode ? \"maxWidth\" : \"maxHeight\"] = this.$config.headerHeight;\n\t\t}\n\t\treturn size;\n\t};\n\n\tCell.prototype.getContentSize = function(){\n\n\t\tvar width = this.$lastSize.contentX;\n\t\tif(width !== width*1){\n\t\t\twidth = this.$lastSize.width;\n\t\t}\n\n\t\tvar height = this.$lastSize.contentY;\n\t\tif(height !== height*1){\n\t\t\theight = this.$lastSize.height;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t};\n\n\tCell.prototype._getBorderSizes = function(){\n\t\tvar borders = {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0,\n\t\t\thorizontal: 0,\n\t\t\tvertical: 0\n\t\t};\n\t\tif(this._currentBorders){\n\t\t\tif(this._currentBorders[this._borders.left]){\n\t\t\t\tborders.left = 1;\n\t\t\t\tborders.horizontal++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.right]){\n\t\t\t\tborders.right = 1;\n\t\t\t\tborders.horizontal++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.top]){\n\t\t\t\tborders.top = 1;\n\t\t\t\tborders.vertical++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.bottom]){\n\t\t\t\tborders.bottom = 1;\n\t\t\t\tborders.vertical++;\n\t\t\t}\n\t\t}\n\n\t\treturn borders;\n\n\t};\n\n\tCell.prototype.setSize = function (x, y) {\n\t\tthis.$view.style.width = x + \"px\";\n\t\tthis.$view.style.height = y + \"px\";\n\n\t\tvar borders = this._getBorderSizes();\n\t\tvar contentY = y - borders.vertical;\n\t\tvar contentX = x - borders.horizontal;\n\n\t\tthis.$lastSize = { x: x, y: y, contentX: contentX, contentY: contentY };\n\t\tif (this.$config.header) {\n\t\t\tthis._sizeHeader();\n\t\t}else{\n\t\t\tthis._sizeContent();\n\t\t}\n\t};\n\n\tCell.prototype._borders = {\n\t\t\"left\":\"gantt_layout_cell_border_left\",\n\t\t\"right\":\"gantt_layout_cell_border_right\",\n\t\t\"top\":\"gantt_layout_cell_border_top\",\n\t\t\"bottom\":\"gantt_layout_cell_border_bottom\"\n\t};\n\n\tCell.prototype._setBorders = function(css, view){\n\t\tif(!view) {\n\t\t\tview = this;\n\t\t}\n\t\tvar node = view.$view;\n\n\t\tfor( var i in this._borders){\n\t\t\tdomHelpers.removeClassName(node, this._borders[i]);\n\t\t}\n\n\t\tif(typeof css == \"string\"){\n\t\t\tcss = [css];\n\t\t}\n\n\t\tvar cssHash = {};\n\n\t\tfor(var i = 0; i < css.length; i++){\n\t\t\tdomHelpers.addClassName(node, css[i]);\n\t\t\tcssHash[css[i]] = true;\n\t\t}\n\n\t\tview._currentBorders = cssHash;\n\t};\n\n\n\tCell.prototype._sizeContent = function(){\n\t\tvar content = this.$view.childNodes[0];\n\t\tif(content && content.className == \"gantt_layout_content\"){\n\t\t\tcontent.style.height = this.$lastSize.contentY + \"px\";\n\t\t}\n\t};\n\n\tCell.prototype._sizeHeader = function () {\n\t\tvar size = this.$lastSize;\n\t\tsize.contentY -= this.$config.headerHeight;\n\t\tvar header = this.$view.childNodes[0];\n\t\tvar content = this.$view.childNodes[1];\n\t\tvar xLayout = this.$config.mode === \"x\";\n\t\tif (this.$config.collapsed) {\n\t\t\tcontent.style.display = \"none\";\n\t\t\tif (xLayout) {\n\t\t\t\theader.className = \"gantt_layout_header collapsed_x\";\n\t\t\t\theader.style.width = size.y + \"px\";\n\t\t\t\tvar d = Math.floor(size.y / 2 - size.x / 2);\n\t\t\t\theader.style.transform = \"rotate(90deg) translate(\" + d + \"px, \" + d + \"px)\";\n\t\t\t\tcontent.style.display = \"none\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\theader.className = \"gantt_layout_header collapsed_y\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (xLayout) {\n\t\t\t\theader.className = \"gantt_layout_header\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\theader.className = \"gantt_layout_header vertical\";\n\t\t\t}\n\t\t\theader.style.width = 'auto';\n\t\t\theader.style.transform = '';\n\t\t\tcontent.style.display = \"\";\n\t\t\tcontent.style.height = size.contentY + \"px\";\n\t\t}\n\t\theader.style.height = this.$config.headerHeight + \"px\";\n\t};\n\treturn Cell;\n}());\n\nmodule.exports = Cell;\n", "var __extends = require(\"../../../utils/extends\");\nvar htmlHelpers = require(\"../../../utils/html_helpers\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction SelectControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\t\n\t\treturn self; \n\t}\n\t\n\t__extends(SelectControl, _super);\n\t\n\tSelectControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\thtml += htmlHelpers.getHtmlSelect(sns.options, [{ key: \"style\", value: \"width:100%;\" }]);\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tSelectControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar select = node.firstChild;\n\t\tif (!select._dhx_onchange && sns.onchange) {\n\t\t\tselect.onchange = sns.onchange;\n\t\t\tselect._dhx_onchange = true;\n\t\t}\n\t\tif (typeof value === \"undefined\")\n\t\t\tvalue = (select.options[0] || {}).value;\n\t\tselect.value = value || \"\";\n\t};\n\t\n\tSelectControl.prototype.get_value = function(node) {\n\t\treturn node.firstChild.value;\n\t};\n\t\n\tSelectControl.prototype.focus = function(node) {\n\t\tvar a = node.firstChild;\n\t\tgantt._focus(a, true);\n\t};\n\t\n\treturn SelectControl;\n};", "/**\n * The state object for order branch drag and drop\n */\n\nvar utils = require(\"../../../../utils/utils\");\n\nmodule.exports = {\n\tcreateDropTargetObject: function createDropTargetObject(parent) {\n\t\tvar res = {\n\t\t\ttargetParent: null,\n\t\t\ttargetIndex: 0,\n\t\t\ttargetId: null,\n\t\t\tchild: false,\n\t\t\tnextSibling: false,\n\t\t\tprevSibling: false\n\t\t};\n\n\t\tif (parent) {\n\t\t\tutils.mixin(res, parent, true);\n\t\t}\n\t\treturn res;\n\t},\n\tnextSiblingTarget: function nextSiblingTarget(taskId, store) {\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = taskId;\n\t\tresult.nextSibling = true;\n\t\tresult.targetParent = store.getParent(result.targetId);\n\t\tresult.targetIndex = store.getBranchIndex(result.targetId) + 1;\n\t\treturn result;\n\t},\n\tprevSiblingTarget: function prevSiblingTarget(taskId, store) {\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = taskId;\n\t\tresult.prevSibling = true;\n\t\tresult.targetParent = store.getParent(result.targetId);\n\t\tresult.targetIndex = store.getBranchIndex(result.targetId);\n\t\treturn result;\n\t},\n\tfirstChildTarget: function firstChildTarget(taskId, store) {\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = taskId;\n\t\tresult.targetParent = result.targetId;\n\t\tresult.targetIndex = 0;\n\t\tresult.child = true;\n\t\treturn result;\n\t},\n\tlastChildTarget: function lastChildTarget(taskId, store) {\n\t\tvar children = store.getChildren(taskId);\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = children[children.length - 1];\n\t\tresult.targetParent = taskId;\n\t\tresult.targetIndex = children.length;\n\t\tresult.nextSibling = true;\n\t\treturn result;\n\t}\n};", "function create(gantt){\n\tvar events = [];\n\n\treturn {\n\t\tdelegate:function(event, className, handler, root) {\n\t\t\tevents.push([event, className, handler, root]);\n\n\t\t\tvar helper = gantt.$services.getService(\"mouseEvents\");\n\t\t\thelper.delegate(event, className, handler, root);\n\t\t},\n\t\tdestructor: function(){\n\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\tfor(var i = 0; i < events.length; i++){\n\t\t\t\tvar h = events[i];\n\t\t\t\tmouseEvents.detach(h[0], h[1], h[2], h[3]);\n\t\t\t}\n\t\t\tevents = [];\n\t\t}\n\t};\n}\n\nmodule.exports = create;", "var ScaleHelper = require(\"./scales_ignore\");\nvar eventable = require(\"../../../utils/eventable\");\nvar utils = require(\"../../../utils/utils\");\nvar topPositionMixin = require(\"../row_position_mixin\");\nvar canvasRender = require(\"./tasks_canvas_render\");\n\nvar Timeline = function(parent, config, factory, gantt){\n\tthis.$config = utils.mixin({}, config || {});\n\tthis.$scaleHelper = new ScaleHelper(gantt);\n\tthis.$gantt = gantt;\n\teventable(this);\n};\n\nTimeline.prototype = {\n\tinit: function(container){\n\t\tcontainer.innerHTML += \"<div class='gantt_task' style='width:inherit;height:inherit;'></div>\";\n\t\tthis.$task = container.childNodes[0];\n\n\t\tthis.$task.innerHTML = \"<div class='gantt_task_scale'></div><div class='gantt_data_area'></div>\";\n\t\tthis.$task_scale = this.$task.childNodes[0];\n\n\t\tthis.$task_data = this.$task.childNodes[1];\n\t\tthis.$task_data.innerHTML = \"<div class='gantt_task_bg'></div><div class='gantt_links_area'></div><div class='gantt_bars_area'></div>\";\n\t\tthis.$task_bg = this.$task_data.childNodes[0];\n\t\tthis.$task_links = this.$task_data.childNodes[1];\n\t\tthis.$task_bars = this.$task_data.childNodes[2];\n\n\t\tthis._tasks = {\n\t\t\tcol_width: 0,\n\t\t\twidth: [], // width of each column\n\t\t\tfull_width: 0, // width of all columns\n\t\t\ttrace_x: [],\n\t\t\trendered: {}\n\t\t};\n\n\t\tvar config = this.$getConfig();\n\t\tvar attr = config[this.$config.bind + \"_attribute\"];\n\t\tvar linksAttr = config[this.$config.bindLinks + \"_attribute\"];\n\t\tif(!attr && this.$config.bind){\n\t\t\tattr = this.$config.bind + \"_id\";\n\t\t}\n\t\tif(!linksAttr && this.$config.bindLinks){\n\t\t\tlinksAttr = this.$config.bindLinks + \"_id\";\n\t\t}\n\t\tthis.$config.item_attribute = attr || null;\n\t\tthis.$config.link_attribute = linksAttr || null;\n\n\t\tvar layers = this._createLayerConfig();\n\t\tif(!this.$config.layers){\n\t\t\tthis.$config.layers = layers.tasks;\n\t\t}\n\t\tif(!this.$config.linkLayers){\n\t\t\tthis.$config.linkLayers = layers.links;\n\t\t}\n\n\t\tthis._attachLayers(this.$gantt);\n\t\tthis.callEvent(\"onReady\", []);\n\t\t//this.refresh();\n\t},\n\n\tsetSize: function(width, height){\n\t\tvar config = this.$getConfig();\n\n\t\tif(width*1 === width){\n\t\t\tthis.$config.width = width;\n\t\t}\n\t\tif(height*1 === height){\n\n\t\t\tthis.$config.height = height;\n\t\t\tvar dataHeight = Math.max(this.$config.height - config.scale_height);\n\t\t\tthis.$task_data.style.height = dataHeight + 'px';\n\t\t}\n\n\t\tthis.refresh();\n\t\tthis.$task_bg.style.backgroundImage = \"\";\n\n\t\tif(config.smart_rendering && this.$config.rowStore){\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tthis.$task_bg.style.height = config.row_height * store.countVisible() +\"px\";\n\t\t}else{\n\t\t\tthis.$task_bg.style.height = \"\";\n\t\t}\n\n\t\tvar scale = this._tasks;\n\t\t//timeline area layers\n\t\tvar data_els = this.$task_data.childNodes;\n\t\tfor(var i= 0, len = data_els.length; i < len; i++){\n\t\t\tvar el = data_els[i];\n\t\t\tif(el.hasAttribute(\"data-layer\") && el.style)\n\t\t\t\tel.style.width = scale.full_width + \"px\";\n\t\t}\n\t},\n\n\tisVisible: function(){\n\t\tif(this.$parent && this.$parent.$config){\n\t\t\treturn !this.$parent.$config.hidden;\n\t\t}else{\n\t\t\treturn this.$task.offsetWidth;\n\t\t}\n\t},\n\n\tgetSize: function(){\n\t\tvar config = this.$getConfig();\n\t\tvar store = this.$config.rowStore;\n\n\t\tvar contentHeight = store ? config.row_height * store.countVisible() : 0,\n\t\t\tcontentWidth = this._tasks.full_width;\n\n\t\treturn {\n\t\t\tx: this.$config.width,\n\t\t\ty: this.$config.height,\n\t\t\tcontentX: this.isVisible() ? contentWidth : 0,\n\t\t\tcontentY: this.isVisible() ? (config.scale_height + contentHeight) : 0,\n\t\t\tscrollHeight: this.isVisible() ? contentHeight : 0,\n\t\t\tscrollWidth: this.isVisible() ? contentWidth : 0\n\t\t};\n\t},\n\n\tscrollTo: function(left, top){\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tif(top*1 === top){\n\t\t\tthis.$config.scrollTop = top;\n\t\t\tthis.$task_data.scrollTop = this.$config.scrollTop;\n\t\t}\n\t\tif (left*1 === left){\n\t\t\tthis.$task.scrollLeft = left;\n\t\t\tthis.$config.scrollLeft = this.$task.scrollLeft;\n\t\t\tthis._refreshScales();\n\t\t}\n\t},\n\n\t_refreshScales: function _refreshScales() {\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tvar config = this.$getConfig();\n\t\tif (!config.smart_scales) return;\n\n\t\tvar x = this.$config.scrollLeft;\n\t\tvar width = this.$config.width;\n\n\t\tvar scales = this._scales;\n\t\tthis.$task_scale.innerHTML = this._getScaleChunkHtml(scales, x, x + width);\n\t},\n\t_createLayerConfig: function(){\n\t\tvar self = this;\n\t\tvar taskFilter = function(){\n\t\t\treturn self.isVisible();\n\t\t};\n\n\t\tvar taskLayers = [\n\t\t\t{\n\t\t\t\texpose: true,\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskBar,\n\t\t\t\tcontainer: this.$task_bars,\n\t\t\t\tfilter: [taskFilter]\n\t\t\t},\n\t\t\t{\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskSplitBar,\n\t\t\t\tfilter: [taskFilter],\n\t\t\t\tcontainer: this.$task_bars,\n\t\t\t\tappend: true\n\t\t\t},\n\t\t\t{\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskBg,\n\t\t\t\tcontainer: this.$task_bg,\n\t\t\t\tfilter: [\n\t\t\t\t\tfunction(){\n\t\t\t\t\t\treturn !self.$getConfig().static_background;\n\t\t\t\t\t},\n\t\t\t\t\ttaskFilter\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\t\tvar linkLayers = [\n\t\t\t{\n\t\t\t\texpose: true,\n\t\t\t\trenderer: this.$gantt.$ui.layers.link,\n\t\t\t\tcontainer: this.$task_links,\n\t\t\t\tfilter: [taskFilter]\n\t\t\t}\n\t\t];\n\n\t\treturn {\n\t\t\ttasks: taskLayers,\n\t\t\tlinks: linkLayers\n\t\t};\n\n\t},\n\n\t_attachLayers: function(gantt){\n\t\tthis._taskLayers = [];\n\t\tthis._linkLayers = [];\n\n\t\tvar self = this;\n\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\n\t\tif(this.$config.bind){\n\n\t\t\tself.$config.rowStore = self.$gantt.getDatastore(self.$config.bind);\n\n\t\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\t\tif(!taskRenderer){\n\t\t\t\ttaskRenderer = layers.createDataRender({\n\t\t\t\t\tname: this.$config.bind,\n\t\t\t\t\tdefaultContainer: function(){ return self.$task_data;}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttaskRenderer.container = function(){ return self.$task_data;};\n\n\t\t\tvar taskLayers = this.$config.layers;\n\t\t\tfor(var i = 0; taskLayers && i < taskLayers.length; i++){\n\t\t\t\tvar layer = taskLayers[i];\n\n\t\t\t\tif(typeof layer == \"string\"){\n\t\t\t\t\tlayer = this.$gantt.$ui.layers[layer];\n\t\t\t\t}\n\n\t\t\t\tif(typeof layer == \"function\"){\n\t\t\t\t\tlayer = {renderer: layer};\n\t\t\t\t}\n\n\t\t\t\tlayer.host = this;\n\t\t\t\tvar bar_layer = taskRenderer.addLayer(layer);\n\t\t\t\tthis._taskLayers.push(bar_layer);\n\t\t\t\tif(layer.expose){\n\t\t\t\t\tthis._taskRenderer = taskRenderer.getLayer(bar_layer);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._initStaticBackgroundRender();\n\t\t}\n\n\t\tif(this.$config.bindLinks){\n\t\t\tself.$config.linkStore = self.$gantt.getDatastore(self.$config.bindLinks);\n\n\t\t\tvar linkRenderer = layers.getDataRender(this.$config.bindLinks);\n\n\t\t\tif(!linkRenderer){\n\t\t\t\tlinkRenderer = layers.createDataRender({\n\t\t\t\t\tname: this.$config.bindLinks,\n\t\t\t\t\tdefaultContainer: function(){ return self.$task_data;}\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar linkLayers = this.$config.linkLayers;\n\t\t\tfor(var i = 0; linkLayers && i < linkLayers.length; i++){\n\n\t\t\t\tif(typeof layer == \"string\"){\n\t\t\t\t\tlayer = this.$gantt.$ui.layers[layer];\n\t\t\t\t}\n\n\t\t\t\tvar layer = linkLayers[i];\n\t\t\t\tlayer.host = this;\n\t\t\t\tvar linkLayer = linkRenderer.addLayer(layer);\n\t\t\t\tthis._taskLayers.push(linkLayer);\n\t\t\t\tif(linkLayers[i].expose){\n\t\t\t\t\tthis._linkRenderer = linkRenderer.getLayer(linkLayer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_initStaticBackgroundRender: function(){\n\t\tvar self = this;\n\t\tvar staticRender = canvasRender.create();\n\t\tvar store = self.$config.rowStore;\n\t\tif(!store) return;\n\n\t\tthis._staticBgHandler = store.attachEvent(\"onStoreUpdated\", function(id, item, mode){\n\t\t\tif(id !== null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!self.isVisible())\n\t\t\t\treturn;\n\t\t\tvar config = self.$getConfig();\n\t\t\tif(config.static_background) {\n\t\t\t\tvar store = self.$gantt.getDatastore(self.$config.bind);\n\t\t\t\tif (store) {\n\t\t\t\t\tstaticRender.render(self.$task_bg, config, self.getScale(), config.row_height * store.countVisible());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._initStaticBackgroundRender = function(){};//init once\n\t},\n\n\t_clearLayers: function(gantt){\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\t\tvar linkRenderer = layers.getDataRender(this.$config.bindLinks);\n\n\t\tif (this._taskLayers) {\n\t\t\tfor(var i = 0; i < this._taskLayers.length; i++){\n\t\t\t\ttaskRenderer.removeLayer(this._taskLayers[i]);\n\t\t\t}\n\t\t}\n\t\tif (this._linkLayers) {\n\t\t\tfor(var i = 0; i < this._linkLayers.length; i++){\n\t\t\t\tlinkRenderer.removeLayer(this._linkLayers[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis._linkLayers = [];\n\t\tthis._taskLayers = [];\n\t},\n\n\t_render_tasks_scales: function _render_tasks_scales() {\n\t\tvar config = this.$getConfig();\n\n\t\tvar scales_html = \"\",\n\t\t\touter_width = 0,\n\t\t\tscale_height = 0;\n\n\t\tvar state = this.$gantt.getState();\n\n\t\tif (this.isVisible()) {\n\t\t\tvar helpers = this.$scaleHelper;\n\t\t\tvar scales = this._getScales();\n\t\t\tscale_height = config.scale_height;\n\n\t\t\tvar availWidth = this.$config.width;\n\t\t\tif(config.autosize == \"x\" || config.autosize == \"xy\"){\n\t\t\t\tavailWidth = Math.max(config.autosize_min_width, 0);\n\t\t\t}\n\n\t\t\tvar cfgs = helpers.prepareConfigs(scales, config.min_column_width, availWidth, scale_height - 1, state.min_date, state.max_date, config.rtl);\n\t\t\tvar cfg = this._tasks = cfgs[cfgs.length - 1];\n\t\t\tthis._scales = cfgs;\n\n\t\t\tscales_html = this._getScaleChunkHtml(cfgs, 0, this.$config.width);\n\n\t\t\touter_width = cfg.full_width + \"px\";//cfg.full_width + (this._scroll_sizes().y ? scrollSizes.scroll_size : 0) + \"px\";\n\t\t\tscale_height += \"px\";\n\t\t}\n\n\t\tthis.$task_scale.style.height = scale_height;\n\n\t\tthis.$task_data.style.width =\n\t\t\tthis.$task_scale.style.width = outer_width;\n\n\t\tthis.$task_scale.innerHTML = scales_html;\n\n\t},\n\n\t_getScaleChunkHtml: function _get_scale_chunk_html (scales, fromPos, toPos) {\n\t\tvar templates = this.$gantt.$services.templates();\n\t\tvar html = [];\n\n\t\tvar css = templates.scale_row_class;\n\t\tfor (var i = 0; i < scales.length; i++) {\n\t\t\tvar cssClass = \"gantt_scale_line\";\n\t\t\tvar tplClass = css(scales[i]);\n\t\t\tif (tplClass) {\n\t\t\t\tcssClass += \" \" + tplClass;\n\t\t\t}\n\n\t\t\thtml.push(\"<div class=\\\"\" + cssClass + \"\\\" style=\\\"height:\" + (scales[i].height) +\n\t\t\t\t\"px;position:relative;line-height:\" + (scales[i].height) + \"px\\\">\" + this._prepareScaleHtml(scales[i], fromPos, toPos) + \"</div>\");\n\t\t}\n\n\t\treturn html.join(\"\");\n\t},\n\t_prepareScaleHtml: function _prepare_scale_html(config, fromPos, toPos) {\n\t\tvar globalConfig = this.$getConfig();\n\t\tvar globalTemplates = this.$gantt.$services.templates();\n\n\t\tvar cells = [];\n\t\tvar date = null, content = null, css = null;\n\n\t\tif (config.template || config.date) {\n\t\t\tcontent = config.template || this.$gantt.date.date_to_str(config.date);\n\t\t}\n\n\t\tvar startIndex = 0,\n\t\t\tendIndex = config.count;\n\n\t\tif (globalConfig.smart_scales && (!isNaN(fromPos) && !isNaN(toPos))) {\n\t\t\tstartIndex = _findBinary(config.left, fromPos);\n\t\t\tendIndex = _findBinary(config.left, toPos) + 1;\n\t\t}\n\n\t\tcss = config.css || function () {\n\t\t\t};\n\t\tif (!config.css && globalConfig.inherit_scale_class) {\n\t\t\tcss = globalTemplates.scale_cell_class;\n\t\t}\n\n\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\tif (!config.trace_x[i]) break;\n\n\t\t\tdate = new Date(config.trace_x[i]);\n\t\t\tvar value = content.call(this, date),\n\t\t\t\twidth = config.width[i],\n\t\t\t\theight = config.height,\n\t\t\t\tleft = config.left[i],\n\t\t\t\tstyle = \"\",\n\t\t\t\ttemplate = \"\",\n\t\t\t\tcssclass = \"\";\n\n\t\t\tif (width) {\n\t\t\t\tvar position = globalConfig.smart_scales ? (\"position:absolute;left:\" + left + \"px\") : \"\";\n\n\t\t\t\tstyle = \"width:\" + (width) + \"px;height:\" + height + \"px;\" + position;\n\t\t\t\tcssclass = \"gantt_scale_cell\" + (i == config.count - 1 ? \" gantt_last_cell\" : \"\");\n\n\t\t\t\ttemplate = css.call(this, date);\n\t\t\t\tif (template) cssclass += \" \" + template;\n\n\t\t\t\tvar ariaAttr = this.$gantt._waiAria.getTimelineCellAttr(value);\n\t\t\t\tvar cell = \"<div class='\" + cssclass + \"'\" + ariaAttr + \" style='\" + style + \"'>\" + value + \"</div>\";\n\t\t\t\tcells.push(cell);\n\t\t\t} else {\n\t\t\t\t//do not render ignored cells\n\t\t\t}\n\n\t\t}\n\t\treturn cells.join(\"\");\n\t},\n\tdateFromPos: function dateFromPos(x) {\n\t\tvar scale = this._tasks;\n\t\tif (x < 0 || x > scale.full_width || !scale.full_width) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar ind = _findBinary(this._tasks.left, x);\n\t\tvar summ = this._tasks.left[ind];\n\n\t\tvar col_width = scale.width[ind] || scale.col_width;\n\t\tvar part = 0;\n\t\tif (col_width) {\n\t\t\tpart = (x - summ) / col_width;\n\t\t\tif(scale.rtl){\n\t\t\t\tpart = 1 - part;\n\t\t\t}\n\n\t\t}\n\n\t\tvar unit = 0;\n\t\tif (part) {\n\t\t\tunit = this._getColumnDuration(scale, scale.trace_x[ind]);\n\t\t}\n\n\t\tvar date = new Date(scale.trace_x[ind].valueOf() + Math.round(part * unit));\n\t\treturn date;\n\t},\n\tposFromDate: function posFromDate(date) {\n\t\tif (!this.isVisible())\n\t\t\treturn 0;\n\n\t\tvar ind = this.columnIndexByDate(date);\n\t\tthis.$gantt.assert(ind >= 0, \"Invalid day index\");\n\n\t\tvar wholeCells = Math.floor(ind);\n\t\tvar partCell = ind % 1;\n\n\t\tvar pos = this._tasks.left[Math.min(wholeCells, this._tasks.width.length - 1)];\n\t\tif (wholeCells == this._tasks.width.length)\n\t\t\tpos += this._tasks.width[this._tasks.width.length - 1];\n\t\t//for(var i=1; i <= wholeCells; i++)\n\t\t//\tpos += gantt._tasks.width[i-1];\n\n\t\tif (partCell) {\n\t\t\tif (wholeCells < this._tasks.width.length) {\n\t\t\t\tpos += this._tasks.width[wholeCells] * (partCell % 1);\n\t\t\t} else {\n\t\t\t\tpos += 1;\n\t\t\t}\n\n\t\t}\n\t\treturn Math.round(pos);\n\t},\n\tcolumnIndexByDate: function columnIndexByDate(date) {\n\t\tvar pos = new Date(date).valueOf();\n\t\tvar days = this._tasks.trace_x_ascending,\n\t\t\tignores = this._tasks.ignore_x;\n\n\t\tvar state = this.$gantt.getState();\n\n\t\tif (pos <= state.min_date) {\n\t\t\tif(this._tasks.rtl){\n\t\t\t\treturn days.length;\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t}\n\n\t\tif (pos >= state.max_date) {\n\t\t\tif(this._tasks.rtl){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn days.length;\n\t\t\t}\n\t\t}\n\n\t\t/*var day = null;\n\t\t for (var xind = 0, length = days.length-1; xind < length; xind++) {\n\t\t // | 8:00, 8:30 | 8:15 should be checked against 8:30\n\t\t // clicking at the most left part of the cell, say 8:30 should create event in that cell, not previous one\n\t\t day = +days[xind+1];\n\t\t if (pos < day && !ignores[day])\n\t\t break;\n\t\t }*/\n\n\t\tvar day_ind = _findBinary(days, pos);\n\t\tvar day = +days[day_ind];\n\t\twhile (ignores[day]) {\n\t\t\tday = +days[++day_ind];\n\t\t}\n\n\t\tvar transition = this._tasks.trace_index_transition;\n\t\tvar index = day_ind;\n\t\tif(!day){\n\t\t\tif(transition){\n\t\t\t\treturn transition[0];\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tvar part = ((date - days[day_ind]) / this._getColumnDuration(this._tasks, days[day_ind]));\n\t\tif(transition){\n\t\t\treturn transition[index] + (1 - part);\n\t\t}else{\n\t\t\treturn index + part;\n\t\t}\n\n\t\t//return day_ind + ((date - days[day_ind]) / this._getColumnDuration(this._tasks, days[day_ind]));\n\t},\n\tgetItemPosition:function (task, start_date, end_date) {\n\t\tvar xLeft, xRight, width;\n\t\tif(this._tasks.rtl){\n\t\t\txRight = this.posFromDate(start_date || task.start_date);\n\t\t\txLeft = this.posFromDate(end_date || task.end_date);\n\t\t}else{\n\t\t\txLeft = this.posFromDate(start_date || task.start_date);\n\t\t\txRight = this.posFromDate(end_date || task.end_date);\n\t\t}\n\t\twidth =  Math.max((xRight - xLeft), 0);\n\n\t\tvar y = this.getItemTop(task.id);\n\t\tvar height = this.getItemHeight();\n\t\treturn {\n\t\t\tleft: xLeft,\n\t\t\ttop: y,\n\t\t\theight: height,\n\t\t\twidth: width\n\t\t};\n\t},\n\n\tgetItemHeight: function(){\n\t\tvar config = this.$getConfig();\n\n\t\t// height of the bar item\n\t\tvar height = config.task_height;\n\n\t\tif (height == \"full\") {\n\t\t\tvar offset = config.task_height_offset || 5;\n\t\t\theight = config.row_height - offset;\n\t\t}\n\t\t//item height cannot be bigger than row height\n\t\theight = Math.min(height, config.row_height);\n\t\treturn Math.max(height, 0);\n\t},\n\n\tgetScale: function(){\n\t\treturn this._tasks;\n\t},\n\n\t_getScales: function _get_scales() {\n\t\tvar config = this.$getConfig();\n\t\tvar helpers = this.$scaleHelper;\n\t\tvar scales = [helpers.primaryScale()].concat(config.subscales);\n\n\t\thelpers.sortScales(scales);\n\t\treturn scales;\n\t},\n\n\t_getColumnDuration: function _get_coll_duration(scale, date) {\n\t\treturn this.$gantt.date.add(date, scale.step, scale.unit) - date;\n\t},\n\n\trefresh: function(){\n\t\tif(this.$config.bind) {\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\t\t}\n\n\t\tif(this.$config.bindLinks) {\n\t\t\tthis.$config.linkStore = this.$gantt.getDatastore(this.$config.bindLinks);\n\t\t}\n\n\t\tthis._initStaticBackgroundRender();\n\t\tthis._render_tasks_scales();\n\t},\n\n\tdestructor: function(){\n\t\tvar gantt = this.$gantt;\n\t\tthis._clearLayers(gantt);\n\n\t\tthis.$task = null;\n\t\tthis.$task_scale = null;\n\t\tthis.$task_data = null;\n\t\tthis.$task_bg = null;\n\t\tthis.$task_links = null;\n\t\tthis.$task_bars = null;\n\n\t\tthis.$gantt = null;\n\n\t\tif(this.$config.rowStore){\n\t\t\tthis.$config.rowStore.detachEvent(this._staticBgHandler);\n\t\t\tthis.$config.rowStore = null;\n\t\t}\n\t\tif(this.$config.linkStore){\n\t\t\tthis.$config.linkStore = null;\n\t\t}\n\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\n\t}\n};\n\nutils.mixin(Timeline.prototype, topPositionMixin());\n\nmodule.exports = Timeline;\n\nfunction _findBinary(array, target) {\n\t// modified binary search, target value not exactly match array elements, looking for closest one\n\n\tvar low = 0, high = array.length - 1, i, item, prev;\n\twhile (low <= high) {\n\n\t\ti = Math.floor((low + high) / 2);\n\t\titem = +array[i];\n\t\tprev = +array[i - 1];\n\t\tif (item < target) {\n\t\t\tlow = i + 1;\n\t\t\tcontinue;\n\t\t}\n\t\tif (item > target) {\n\t\t\tif (!(!isNaN(prev) && prev < target)) {\n\t\t\t\thigh = i - 1;\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\t// if target is between 'i' and 'i-1' return 'i - 1'\n\t\t\t\treturn i - 1;\n\t\t\t}\n\n\t\t}\n\t\twhile (+array[i] == +array[i + 1]) i++;\n\n\t\treturn i;\n\t}\n\treturn array.length - 1;\n}\n\n", "var env = {\n\tisIE: (navigator.userAgent.indexOf(\"MSIE\") >= 0 || navigator.userAgent.indexOf(\"Trident\") >= 0),\n\tisIE6: (!window.XMLHttpRequest && navigator.userAgent.indexOf(\"MSIE\") >= 0),\n\tisIE7: (navigator.userAgent.indexOf(\"MSIE 7.0\") >= 0 && navigator.userAgent.indexOf(\"Trident\") < 0),\n\tisIE8: (navigator.userAgent.indexOf(\"MSIE 8.0\") >= 0 && navigator.userAgent.indexOf(\"Trident\") >= 0),\n\tisOpera: (navigator.userAgent.indexOf(\"Opera\") >= 0),\n\tisChrome: (navigator.userAgent.indexOf(\"Chrome\") >= 0),\n\tisKHTML: (navigator.userAgent.indexOf(\"Safari\") >= 0 || navigator.userAgent.indexOf(\"Konqueror\") >= 0),\n\tisFF: (navigator.userAgent.indexOf(\"Firefox\") >= 0),\n\tisIPad: (navigator.userAgent.search(/iPad/gi) >= 0),\n\tisEdge: (navigator.userAgent.indexOf(\"Edge\")!=-1)\n};\n\nmodule.exports = env;", "module.exports = function(gantt) {\n\tgantt.locale = {\n\t\tdate: {\n\t\t\tmonth_full: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t\t\tmonth_short: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\t\t\tday_full: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t\t\tday_short: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\t\t},\n\t\tlabels: {\n\t\t\tnew_task: \"New task\",\n\t\t\ticon_save: \"Save\",\n\t\t\ticon_cancel: \"Cancel\",\n\t\t\ticon_details: \"Details\",\n\t\t\ticon_edit: \"Edit\",\n\t\t\ticon_delete: \"Delete\",\n\t\t\tconfirm_closing: \"\",//Your changes will be lost, are you sure?\n\t\t\tconfirm_deleting: \"Task will be deleted permanently, are you sure?\",\n\t\t\tsection_description: \"Description\",\n\t\t\tsection_time: \"Time period\",\n\t\t\tsection_type: \"Type\",\n\n\t\t\t/* grid columns */\n\t\t\tcolumn_wbs: \"WBS\",\n\t\t\tcolumn_text: \"Task name\",\n\t\t\tcolumn_start_date: \"Start time\",\n\t\t\tcolumn_duration: \"Duration\",\n\t\t\tcolumn_add: \"\",\n\n\t\t\t/* link confirmation */\n\t\t\tlink: \"Link\",\n\t\t\tconfirm_link_deleting: \"will be deleted\",\n\t\t\tlink_start: \" (start)\",\n\t\t\tlink_end: \" (end)\",\n\n\t\t\ttype_task: \"Task\",\n\t\t\ttype_project: \"Project\",\n\t\t\ttype_milestone: \"Milestone\",\n\n\t\t\tminutes: \"Minutes\",\n\t\t\thours: \"Hours\",\n\t\t\tdays: \"Days\",\n\t\t\tweeks: \"Week\",\n\t\t\tmonths: \"Months\",\n\t\t\tyears: \"Years\",\n\n\t\t\t/* message popup */\n\t\t\tmessage_ok: \"OK\",\n\t\t\tmessage_cancel: \"Cancel\"\n\n\t\t}\n\t};\n};\n\n", "var utils = require(\"../../utils/utils\");\nvar helpers = require(\"../../utils/helpers\");\n\n\nfunction IsWorkTimeArgument(date, unit, task, id, calendar){\n\tthis.date = date;\n\tthis.unit = unit;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction ClosestWorkTimeArgument(date, dir, unit, task, id, calendar){\n\tthis.date = date;\n\tthis.dir = dir;\n\tthis.unit = unit;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction CalculateEndDateArgument(start_date, duration, unit, step, task, id, calendar){\n\tthis.start_date = start_date;\n\tthis.duration = duration;\n\tthis.unit = unit;\n\tthis.step = step;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction GetDurationArgument(start, end, task, calendar) {\n\tthis.start_date = start;\n\tthis.end_date = end;\n\tthis.task = task;\n\tthis.calendar = calendar;\n\tthis.unit = null;\n\tthis.step = null;\n\treturn this;\n}\n\nvar calendarArgumentsHelper = function(gantt){\n\treturn {\n\t\tgetWorkHoursArguments: function () {\n\t\t\tvar config = arguments[0];\n\t\t\tif (helpers.isDate(config)) {\n\t\t\t\tconfig = {\n\t\t\t\t\tdate: config\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconfig = utils.mixin({}, config);\n\t\t\t}\n\t\t\treturn config;\n\t\t},\n\t\tsetWorkTimeArguments: function () {\n\t\t\treturn arguments[0];\n\t\t},\n\t\tunsetWorkTimeArguments: function () {\n\t\t\treturn arguments[0];\n\t\t},\n\t\tisWorkTimeArguments: function () {\n\t\t\tvar config = arguments[0];\n\t\t\tif(config instanceof IsWorkTimeArgument){\n\t\t\t\treturn config;\n\t\t\t}\n\n\t\t\tvar processedConfig;\n\t\t\tif (!config.date) {\n\t\t\t\t//IsWorkTimeArgument(date, unit, task, id, calendar)\n\t\t\t\tprocessedConfig = new IsWorkTimeArgument(arguments[0], arguments[1], arguments[2], null, arguments[3]);\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new IsWorkTimeArgument(config.date, config.unit, config.task, null, config.calendar);\n\t\t\t}\n\n\t\t\tprocessedConfig.unit = processedConfig.unit || gantt.config.duration_unit;\n\n\t\t\treturn processedConfig;\n\t\t},\n\t\tgetClosestWorkTimeArguments: function (arg) {\n\t\t\tvar config = arguments[0];\n\t\t\tif (config instanceof ClosestWorkTimeArgument)\n\t\t\t\treturn config;\n\n\t\t\tvar processedConfig;\n\t\t\tif (helpers.isDate(config)) {\n\t\t\t\tprocessedConfig = new ClosestWorkTimeArgument(config);\n\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new ClosestWorkTimeArgument(\n\t\t\t\t\tconfig.date,\n\t\t\t\t\tconfig.dir,\n\t\t\t\t\tconfig.unit,\n\t\t\t\t\tconfig.task,\n\t\t\t\t\tnull,//config.id,\n\t\t\t\t\tconfig.calendar\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif(config.id){\n\t\t\t\tprocessedConfig.task = config;\n\t\t\t}\n\t\t\tprocessedConfig.dir = config.dir || 'any';\n\t\t\tprocessedConfig.unit = config.unit || gantt.config.duration_unit;\n\n\t\t\treturn processedConfig;\n\t\t},\n\n\t\t_getStartEndConfig: function (param) {\n\t\t\tvar argumentType = GetDurationArgument;\n\t\t\tvar config;\n\t\t\tif (param instanceof argumentType)\n\t\t\t\treturn param;\n\n\t\t\tif (helpers.isDate(param)) {\n\t\t\t\tconfig = new argumentType(arguments[0], arguments[1], arguments[2], arguments[3]);\n\t\t\t} else {\n\t\t\t\tconfig = new argumentType(param.start_date, param.end_date, param.task);\n\t\t\t\tif (param.id) {\n\t\t\t\t\tconfig.task = param;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconfig.unit = config.unit || gantt.config.duration_unit;\n\t\t\tconfig.step = config.step || gantt.config.duration_step;\n\t\t\tconfig.start_date = config.start_date || config.start || config.date;\n\n\t\t\treturn config;\n\t\t},\n\n\t\tgetDurationArguments: function (start, end, unit, step) {\n\t\t\treturn this._getStartEndConfig.apply(this, arguments);\n\t\t},\n\n\t\thasDurationArguments: function (start, end, unit, step) {\n\t\t\treturn this._getStartEndConfig.apply(this, arguments);\n\t\t},\n\n\t\tcalculateEndDateArguments: function (start, duration, unit, step) {\n\t\t\tvar config = arguments[0];\n\t\t\tif (config instanceof CalculateEndDateArgument)\n\t\t\t\treturn config;\n\n\t\t\tvar processedConfig;\n\t\t\t//CalculateEndDateArgument(start_date, duration, unit, step, task, id, calendar)\n\t\t\tif (helpers.isDate(config)) {\n\t\t\t\tprocessedConfig = new CalculateEndDateArgument(\n\t\t\t\t\targuments[0],\n\t\t\t\t\targuments[1],\n\t\t\t\t\targuments[2],\n\t\t\t\t\tundefined,\n\t\t\t\t\targuments[3],\n\t\t\t\t\tundefined,\n\t\t\t\t\targuments[4]\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new CalculateEndDateArgument(\n\t\t\t\t\tconfig.start_date,\n\t\t\t\t\tconfig.duration,\n\t\t\t\t\tconfig.unit,\n\t\t\t\t\tconfig.step,\n\t\t\t\t\tconfig.task,\n\t\t\t\t\tnull,//config.id,\n\t\t\t\t\tconfig.calendar\n\t\t\t\t);\n\t\t\t}\n\t\t\tif(config.id){\n\t\t\t\tprocessedConfig.task = config;\n\t\t\t}\n\n\t\t\tprocessedConfig.unit = processedConfig.unit || gantt.config.duration_unit;\n\t\t\tprocessedConfig.step = processedConfig.step || gantt.config.duration_step;\n\n\t\t\treturn processedConfig;\n\t\t}\n\t};\n};\n\n\nmodule.exports = calendarArgumentsHelper;", "function copyLinkIdsArray(gantt, linkIds, targetHash){\n\tfor(var i = 0; i < linkIds.length; i++) {\n\t\tif(gantt.isLinkExists(linkIds[i])){\n\t\t\ttargetHash[linkIds[i]] = gantt.getLink(linkIds[i]);\n\t\t}\n\t}\n}\n\nfunction copyLinkIds(gantt, task, targetHash){\n\tcopyLinkIdsArray(gantt, task.$source, targetHash);\n\tcopyLinkIdsArray(gantt, task.$target, targetHash);\n}\n\nfunction getSubtreeLinks(gantt, rootId){\n\tvar res = {};\n\n\tif(gantt.isTaskExists(rootId)){\n\t\tcopyLinkIds(gantt, gantt.getTask(rootId), res);\n\t}\n\n\tgantt.eachTask(function(child){\n\t\tcopyLinkIds(gantt, child, res);\n\t}, rootId);\n\n\treturn res;\n}\n\nfunction getSubtreeTasks(gantt, rootId){\n\tvar res = {};\n\n\tgantt.eachTask(function(child){\n\t\tres[child.id] = child;\n\t}, rootId);\n\n\treturn res;\n}\n\nmodule.exports = {\n\tgetSubtreeLinks: getSubtreeLinks,\n\tgetSubtreeTasks: getSubtreeTasks\n};", "var ScaleHelper = require(\"./ui/timeline/scales_ignore\");\n\n\nfunction dateRangeResolver(gantt){\n\t//reset project timing\n\t//_get_tasks_data(gantt);\n\treturn gantt.getSubtaskDates();\n}\n\nfunction defaultRangeResolver(){\n\treturn {\n\t\tstart_date: new Date(),\n\t\tend_date: new Date()\n\t};\n}\n\nfunction resolveConfigRange(unit, gantt){\n\tvar range = {\n\t\tstart_date:null,\n\t\tend_date:null\n\t};\n\n\tif (gantt.config.start_date && gantt.config.end_date) {\n\t\trange.start_date = gantt.date[unit + \"_start\"](new Date(gantt.config.start_date));\n\n\t\tvar end = new Date(gantt.config.end_date);\n\t\tvar start_interval = gantt.date[unit + \"_start\"](new Date(end));\n\t\tif (+end != +start_interval) {\n\t\t\tend = gantt.date.add(start_interval, 1, unit);\n\t\t} else {\n\t\t\tend = start_interval;\n\t\t}\n\n\t\trange.end_date = end;\n\t}\n\treturn range;\n}\n\nfunction _scale_range_unit(gantt) {\n\tvar unit = gantt.config.scale_unit;\n\tvar step = gantt.config.step;\n\tif (gantt.config.scale_offset_minimal) {\n\n\t\tvar helper = new ScaleHelper(gantt);\n\t\tvar scales = [helper.primaryScale()].concat(gantt.config.subscales);\n\n\t\thelper.sortScales(scales);\n\t\tunit = scales[scales.length - 1].unit;\n\t\tstep = scales[scales.length - 1].step || 1;\n\t}\n\treturn { unit:unit, step:step };\n}\n\nfunction _init_tasks_range(gantt) {\n\tvar cfg = _scale_range_unit(gantt);\n\tvar unit = cfg.unit,\n\t\tstep = cfg.step;\n\tvar range = resolveConfigRange(unit, gantt);\n\n\tif(!(range.start_date && range.end_date)){\n\t\trange = dateRangeResolver(gantt);\n\t\tif(!range.start_date || !range.end_date){\n\t\t\trange = defaultRangeResolver(gantt);\n\t\t}\n\n\t\trange.start_date = gantt.date[unit + \"_start\"](range.start_date);\n\t\trange.start_date = gantt.calculateEndDate({\n\t\t\tstart_date: gantt.date[unit + \"_start\"](range.start_date),\n\t\t\tduration: -1,\n\t\t\tunit: unit,\n\t\t\tstep:step\n\t\t});//one free column before first task\n\n\t\trange.end_date = gantt.date[unit + \"_start\"](range.end_date);\n\t\trange.end_date = gantt.calculateEndDate({start_date: range.end_date, duration: 2, unit: unit, step:step});//one free column after last task\n\t}\n\n\tgantt._min_date = range.start_date;\n\tgantt._max_date = range.end_date;\n}\n\nfunction _adjust_scales(gantt) {\n\tif (gantt.config.fit_tasks) {\n\t\tvar old_min = +gantt._min_date,\n\t\t\told_max = +gantt._max_date;\n\t\t//this._init_tasks_range();\n\t\tif (+gantt._min_date != old_min || +gantt._max_date != old_max) {\n\t\t\tgantt.render();\n\n\t\t\tgantt.callEvent(\"onScaleAdjusted\", []);\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nmodule.exports = function updateTasksRange(gantt){\n\t_init_tasks_range(gantt);\n\t_adjust_scales(gantt);\n};\n", "var utils = require(\"../../utils/utils\");\n\nvar $powerArray  = {\n\t$create: function(array){\n\t\treturn utils.mixin(array || [], this);\n\t},\n\t//remove element at specified position\n\t$removeAt:function(pos,len){\n\t\tif (pos>=0) this.splice(pos,(len||1));\n\t},\n\t//find element in collection and remove it\n\t$remove:function(value){\n\t\tthis.$removeAt(this.$find(value));\n\t},\n\t//add element to collection at specific position\n\t$insertAt:function(data,pos){\n\t\tif (!pos && pos!==0) \t//add to the end by default\n\t\t\tthis.push(data);\n\t\telse {\n\t\t\tvar b = this.splice(pos,(this.length-pos));\n\t\t\tthis[pos] = data;\n\t\t\tthis.push.apply(this,b); //reconstruct array without loosing this pointer\n\t\t}\n\t},\n\t//return index of element, -1 if it doesn't exists\n\t$find:function(data){\n\t\tfor (var i=0; i<this.length; i++)\n\t\t\tif (data==this[i]) return i;\n\t\treturn -1;\n\t},\n\t//execute some method for each element of array\n\t$each:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tfunctor.call((master||this),this[i]);\n\t},\n\t//create new array from source, by using results of functor\n\t$map:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tthis[i]=functor.call((master||this),this[i]);\n\t\treturn this;\n\t},\n\t$filter:function(functor, master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tif (!functor.call((master||this),this[i])){\n\t\t\t\tthis.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\treturn this;\n\t}\n};\n\nmodule.exports = $powerArray;", "var powerArray = require(\"./power_array\");\nvar utils = require(\"../../utils/utils\");\nvar eventable = require(\"../../utils/eventable\");\n\nvar DataStore = function(config){\n\tthis.pull = {};\n\tthis.$initItem = config.initItem;\n\tthis.visibleOrder = powerArray.$create();\n\tthis.fullOrder = powerArray.$create();\n\tthis._skip_refresh = false;\n\tthis._filterRule = null;\n\tthis._searchVisibleOrder = {};\n\tthis.$config = config;\n\teventable(this);\n\treturn this;\n};\nDataStore.prototype = {\n\n\t_parseInner: function(data){\n\t\tvar item = null,\n\t\t\tloaded = [];\n\t\tfor(var i = 0, len = data.length; i< len; i++){\n\t\t\titem = data[i];\n\t\t\tif(this.$initItem){\n\t\t\t\titem = this.$initItem(item);\n\t\t\t}\n\t\t\tif(this.callEvent(\"onItemLoading\", [item])){\n\t\t\t\tif (!this.pull.hasOwnProperty(item.id)) {\n\t\t\t\t\tthis.fullOrder.push(item.id);\n\t\t\t\t\tloaded.push(item);\n\t\t\t\t}\n\t\t\t\tthis.pull[item.id] = item;\n\t\t\t}\n\t\t}\n\t\treturn loaded;\n\t},\n\tparse: function(data){\n\t\tthis.callEvent(\"onBeforeParse\", [data]);\n\t\tvar loaded = this._parseInner(data);\n\t\tthis.refresh();\n\t\tthis.callEvent(\"onParse\", [loaded]);\n\t},\n\tgetItem: function(id){\n\t\treturn this.pull[id];\n\t},\n\n\t_updateOrder: function(code){\n\t\tcode.call(this.visibleOrder);\n\t\tcode.call(this.fullOrder);\n\t},\n\tupdateItem: function(id, item){\n\t\tif (!utils.defined(item)) item = this.getItem(id);\n\n\t\tif (!this._skip_refresh) {\n\t\t\tif (this.callEvent(\"onBeforeUpdate\", [item.id, item]) === false) return false;\n\t\t}\n\t\tthis.pull[id]=item;\n\t\tif (!this._skip_refresh) {\n\t\t\tthis.callEvent(\"onAfterUpdate\", [item.id, item]);\n\t\t\tthis.callEvent(\"onStoreUpdated\", [item.id, item, \"update\"]);\n\t\t}\n\t},\n\n\t_removeItemInner: function(id){\n\t\t//clear from collections\n\t\t//this.visibleOrder.$remove(id);\n\t\tthis._updateOrder(function(){ this.$remove(id);});\n\t\tdelete this.pull[id];\n\t},\n\n\tremoveItem: function(id){\n\t\t//utils.assert(this.exists(id), \"Not existing ID in remove command\"+id);\n\n\t\tvar obj = this.getItem(id);\t//save for later event\n\t\tif (!this._skip_refresh) {\n\t\t\tif (this.callEvent(\"onBeforeDelete\", [obj.id, obj]) === false) return false;\n\t\t}\n\n\t\tthis._removeItemInner(id);\n\n\t\tif (!this._skip_refresh) {\n\t\t\tthis.filter();\n\t\t\tthis.callEvent(\"onAfterDelete\", [obj.id, obj]);\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"delete\"]);\n\t\t}\n\t},\n\n\t_addItemInner: function(item, index){\n\t\t//in case of treetable order is sent as 3rd parameter\n\t\t//var order = index;\n\n\t\tif(this.exists(item.id)){\n\t\t\tthis.silent(function(){this.updateItem(item.id, item);});\n\t\t}else{\n\t\t\tvar order = this.visibleOrder;\n\n\t\t\t//by default item is added to the end of the list\n\t\t\tvar data_size = order.length;\n\n\t\t\tif (!utils.defined(index) || index < 0)\n\t\t\t\tindex = data_size;\n\t\t\t//check to prevent too big indexes\n\t\t\tif (index > data_size){\n\t\t\t\t//dhx.log(\"Warning\",\"DataStore:add\",\"Index of out of bounds\");\n\t\t\t\tindex = Math.min(order.length,index);\n\t\t\t}\n\t\t}\n\n\n\t\t//gantt.assert(!this.exists(id), \"Not unique ID\");\n\n\t\tthis.pull[item.id]=item;\n\t\tif (!this._skip_refresh){\n\t\t\tthis._updateOrder(function(){\n\t\t\t\tif(this.$find(item.id) === -1)\n\t\t\t\t\tthis.$insertAt(item.id,index);\n\t\t\t});\n\t\t}\n\t\tthis.filter();\n\t\t//order.$insertAt(item.id,index);\n\t},\n\n\n\tisVisible: function(id){\n\t\treturn this.visibleOrder.$find(id) > -1;\n\t},\n\tgetVisibleItems: function(){\n\t\treturn this.getIndexRange();\n\t},\n\n\taddItem: function(item, index){\n\t\tif (!utils.defined(item.id))\n\t\t\titem.id = utils.uid();\n\n\t\tif(this.$initItem){\n\t\t\titem = this.$initItem(item);\n\t\t}\n\n\t\tif (!this._skip_refresh){\n\t\t\tif (this.callEvent(\"onBeforeAdd\", [item.id, item]) === false) return false;\n\t\t}\n\n\n\t\tthis._addItemInner(item, index);\n\n\t\tif (!this._skip_refresh){\n\t\t\tthis.callEvent(\"onAfterAdd\",[item.id, item]);\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\",[item.id,item,\"add\"]);\n\t\t}\n\t\treturn item.id;\n\t},\n\n\t_changeIdInner: function(oldId, newId){\n\t\tif(this.pull[oldId])\n\t\t\tthis.pull[newId] = this.pull[oldId];\n\n\t\tvar visibleOrder = this._searchVisibleOrder[oldId];\n\t\tthis.pull[newId].id = newId;\n\t\tthis._updateOrder(function(){\n\t\t\tthis[this.$find(oldId)] = newId;\n\t\t});\n\t\tthis._searchVisibleOrder[newId] = visibleOrder;\n\t\tdelete this._searchVisibleOrder[oldId];\n\n\t\t//this.visibleOrder[this.visibleOrder.$find(oldId)]=newId;\n\t\tdelete this.pull[oldId];\n\t},\n\tchangeId: function(oldId, newId){\n\t\tthis._changeIdInner(oldId, newId);\n\n\t\tthis.callEvent(\"onIdChange\", [oldId, newId]);\n\n\t},\n\texists: function(id){\n\t\treturn !!(this.pull[id]);\n\t},\n\n\t_moveInner: function(sindex, tindex){\n\t\tvar id = this.getIdByIndex(sindex);\n\n\t\tthis._updateOrder(function(){\n\t\t\tthis.$removeAt(sindex);\n\t\t\tthis.$insertAt(id,Math.min(this.length, tindex));\n\t\t});\n\t\t//this.visibleOrder.$removeAt(sindex);\t//remove at old position\n\t\t//if (sindex<tindex) tindex--;\t//correct shift, caused by element removing\n\t\t//this.visibleOrder.$insertAt(id,Math.min(this.visibleOrder.length, tindex));\t//insert at new position\n\t},\n\n\tmove: function(sindex, tindex){\n\t\t//gantt.assert(sindex>=0 && tindex>=0, \"DataStore::move\",\"Incorrect indexes\");\n\n\t\tvar id = this.getIdByIndex(sindex);\n\t\tvar obj = this.getItem(id);\n\t\tthis._moveInner(sindex, tindex);\n\n\n\t\tif (!this._skip_refresh) {\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"move\"]);\n\t\t}\n\t},\n\tclearAll: function(){\n\t\tthis.pull = {};\n\t\tthis.visibleOrder = powerArray.$create();\n\t\tthis.fullOrder = powerArray.$create();\n\t\tif (this._skip_refresh) return;\n\t\tthis.callEvent(\"onClearAll\",[]);\n\t\tthis.refresh();\n\t},\n\n\tsilent:function(code, master){\n\t\tthis._skip_refresh = true;\n\t\tcode.call(master||this);\n\t\tthis._skip_refresh = false;\n\t},\n\n\tarraysEqual: function (arr1, arr2) {\n\t\tif(arr1.length !== arr2.length)\n\t\t\treturn false;\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif(arr1[i] !== arr2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\trefresh: function(id, quick){\n\t\tif (this._skip_refresh) return;\n\n\t\tif(id){\n\t\t\t// if item changes visible order (e.g. expand-collapse branch) - do a complete repaint\n\t\t\tif(!quick){\n\t\t\t\tvar oldOrder = this.visibleOrder;\n\t\t\t\tthis.filter();\n\t\t\t\tif(!this.arraysEqual(oldOrder, this.visibleOrder)){\n\t\t\t\t\tid = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}else{\n\t\t\tthis.filter();\n\t\t}\n\n\t\tif (id)\n\t\t\tthis.callEvent(\"onStoreUpdated\",[id, this.pull[id], \"paint\"]);\n\t\telse\n\t\t\tthis.callEvent(\"onStoreUpdated\",[null,null,null]);\n\t},\n\n\tcount: function(){\n\t\treturn this.fullOrder.length;\n\t},\n\tcountVisible: function(){\n\t\treturn this.visibleOrder.length;\n\t},\n\n\tsort: function(sort){},\n\n\tserialize: function(){},\n\n\teachItem: function(code){\n\t\tfor (var i=0; i<this.fullOrder.length; i++) {\n\t\t\tvar item = this.pull[this.fullOrder[i]];\n\t\t\tcode.call(this, item);\n\t\t}\n\t},\n\t\n\tfilter: function(rule){\n\t\tvar filteredOrder = powerArray.$create();\n\t\tthis.eachItem(function(item){\n\t\t\tif(this.callEvent(\"onFilterItem\", [item.id, item])){\n\t\t\t\tfilteredOrder.push(item.id);\n\t\t\t}\n\t\t});\n\n\t\tthis.visibleOrder = filteredOrder;\n\t\tthis._searchVisibleOrder = {};\n\t\tfor(var i = 0; i < this.visibleOrder.length; i++){\n\t\t\tthis._searchVisibleOrder[this.visibleOrder[i]] = i;\n\t\t}\n\t},\n\n\tgetIndexRange: function(from, to){\n\t\tto=Math.min((to||Infinity),this.countVisible()-1);\n\n\t\tvar ret= [];\n\t\tfor (var i=(from||0); i <= to; i++)\n\t\t\tret.push(this.getItem(this.visibleOrder[i]));\n\t\treturn ret;\n\t},\n\tgetItems: function(){\n\t\tvar res = [];\n\t\tfor(var i in this.pull){\n\t\t\tres.push(this.pull[i]);\n\t\t}\n\t/*\tfor(var i = 0; i < this.fullOrder.length; i++){\n\n\t\t}*/\n\t\treturn res;\n\t},\n\n\tgetIdByIndex: function(index){\n\t\treturn this.visibleOrder[index];\n\t},\n\tgetIndexById: function(id){\n\t\tvar res = this._searchVisibleOrder[id];\n\t\tif(res === undefined){\n\t\t\tres = -1;\n\t\t}\n\t\treturn res;\n\t},\n\t_getNullIfUndefined: function(value){\n\t\tif(value === undefined){\n\t\t\treturn null;\n\t\t}else{\n\t\t\treturn value;\n\t\t}\n\t},\n\tgetFirst: function(){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[0]);\n\t},\n\tgetLast: function(){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.visibleOrder.length-1]);\n\t},\n\tgetNext: function(id){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.getIndexById(id) + 1]);\n\t},\n\tgetPrev: function(id){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.getIndexById(id) - 1]);\n\t},\n\tdestructor: function(){\n\t\tthis.detachAllEvents();\n\t\tthis.pull = null;\n\t\tthis.$initItem = null;\n\t\tthis.visibleOrder = null;\n\t\tthis.fullOrder = null;\n\t\tthis._skip_refresh = null;\n\t\tthis._filterRule = null;\n\t\tthis._searchVisibleOrder = null;\n\t}\n};\n\nmodule.exports = DataStore;", "function createTaskRenderer(gantt){\n\n\tfunction _render_task_element(task, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar painters = config.type_renderers;\n\t\tvar renderer = painters[gantt.getTaskType(task.type)],\n\t\t\tdefaultRenderer = _task_default_render;\n\n\t\tif (!renderer) {\n\t\t\treturn defaultRenderer.call(gantt, task, view);\n\t\t}else{\n\t\t\treturn renderer.call(gantt, task, function(task){ return defaultRenderer.call(gantt, task, view);}, view);\n\t\t}\n\t}\n\n\tfunction _task_default_render(task, view) {\n\t\tif (gantt._isAllowedUnscheduledTask(task))\n\t\t\treturn;\n\n\n\t\tvar pos = view.getItemPosition(task);\n\n\t\tvar cfg = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\t\tvar height = view.getItemHeight();\n\n\t\tvar taskType = gantt.getTaskType(task.type);\n\n\t\tvar padd = Math.floor((gantt.config.row_height - height) / 2);\n\t\tif (taskType == cfg.types.milestone && cfg.link_line_width > 1) {\n\t\t\t//little adjust milestone position, so horisontal corners would match link arrow when thickness of link line is more than 1px\n\t\t\tpadd += 1;\n\t\t}\n\n\t\tif (taskType == cfg.types.milestone){\n\t\t\tpos.left -= Math.round(height / 2);\n\t\t\tpos.width = height;\n\t\t}\n\n\t\tvar div = document.createElement(\"div\");\n\n\t\tvar width = Math.round(pos.width);\n\n\t\tif(view.$config.item_attribute){\n\t\t\tdiv.setAttribute(view.$config.item_attribute, task.id);\n\t\t}\n\n\t\tif (cfg.show_progress && taskType != cfg.types.milestone) {\n\t\t\t_render_task_progress(task, div, width, cfg, templates);\n\t\t}\n\n\t\t//use separate div to display content above progress bar\n\t\tvar content = _render_task_content(task, width, templates);\n\t\tif (task.textColor) {\n\t\t\tcontent.style.color = task.textColor;\n\t\t}\n\t\tdiv.appendChild(content);\n\n\t\tvar css = _combine_item_class(\"gantt_task_line\",\n\t\t\ttemplates.task_class(task.start_date, task.end_date, task),\n\t\t\ttask.id,\n\t\t\tview);\n\t\tif (task.color || task.progressColor || task.textColor) {\n\t\t\tcss += \" gantt_task_inline_color\";\n\t\t}\n\t\tdiv.className = css;\n\n\t\tvar styles = [\n\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\"top:\" + (padd + pos.top) + 'px',\n\t\t\t\"height:\" + height + 'px',\n\t\t\t\"line-height:\" + (Math.max(height < 30 ? height - 2 : height, 0)) + 'px',\n\t\t\t\"width:\" + width + 'px'\n\t\t];\n\t\tif (task.color) {\n\t\t\tstyles.push(\"background-color:\" + task.color);\n\t\t}\n\t\tif (task.textColor) {\n\t\t\tstyles.push(\"color:\" + task.textColor);\n\t\t}\n\n\t\tdiv.style.cssText = styles.join(\";\");\n\t\tvar side = _render_leftside_content(task, cfg, templates);\n\t\tif (side) div.appendChild(side);\n\n\t\tside = _render_rightside_content(task, cfg, templates);\n\t\tif (side) div.appendChild(side);\n\n\t\tgantt._waiAria.setTaskBarAttr(task, div);\n\n\t\tvar state = gantt.getState();\n\n\t\tif (!gantt.isReadonly(task)) {\n\t\t\tif (cfg.drag_resize && !gantt.isSummaryTask(task) && taskType != cfg.types.milestone) {\n\t\t\t\t_render_pair(div, \"gantt_task_drag\", task, function (css) {\n\t\t\t\t\tvar el = document.createElement(\"div\");\n\t\t\t\t\tel.className = css;\n\t\t\t\t\treturn el;\n\t\t\t\t}, cfg);\n\t\t\t}\n\t\t\tif (cfg.drag_links && cfg.show_links) {\n\t\t\t\t_render_pair(div, \"gantt_link_control\", task, function (css) {\n\t\t\t\t\tvar outer = document.createElement(\"div\");\n\t\t\t\t\touter.className = css;\n\t\t\t\t\touter.style.cssText = [\n\t\t\t\t\t\t\"height:\" + height + 'px',\n\t\t\t\t\t\t\"line-height:\" + height + 'px'\n\t\t\t\t\t].join(\";\");\n\t\t\t\t\tvar inner = document.createElement(\"div\");\n\t\t\t\t\tinner.className = \"gantt_link_point\";\n\n\t\t\t\t\tvar showLinkPoints = false;\n\t\t\t\t\tif(state.link_source_id && cfg.touch){\n\t\t\t\t\t\tshowLinkPoints = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tinner.style.display = showLinkPoints ? \"block\" : \"\";\n\t\t\t\t\touter.appendChild(inner);\n\t\t\t\t\treturn outer;\n\t\t\t\t}, cfg);\n\t\t\t}\n\t\t}\n\t\treturn div;\n\t}\n\n\tfunction _render_side_content(task, template, cssClass) {\n\t\tif (!template) return null;\n\n\t\tvar text = template(task.start_date, task.end_date, task);\n\t\tif (!text) return null;\n\t\tvar content = document.createElement(\"div\");\n\t\tcontent.className = \"gantt_side_content \" + cssClass;\n\t\tcontent.innerHTML = text;\n\t\treturn content;\n\t}\n\n\tfunction _render_leftside_content(task, cfg, templates) {\n\t\tvar css = \"gantt_left \" + _get_link_crossing_css(!cfg.rtl ? true : false, task, cfg);\n\t\treturn _render_side_content(task, templates.leftside_text, css);\n\t}\n\n\tfunction _render_rightside_content(task, cfg, templates) {\n\t\tvar css = \"gantt_right \" + _get_link_crossing_css(!cfg.rtl ? false : true, task, cfg);\n\t\treturn _render_side_content(task, templates.rightside_text, css);\n\t}\n\n\tfunction _get_link_crossing_css(left, task) {\n\t\tvar cond = _get_conditions(left);\n\n\t\tfor (var i in cond) {\n\t\t\tvar links = task[i];\n\t\t\tfor (var ln = 0; ln < links.length; ln++) {\n\t\t\t\tvar link = gantt.getLink(links[ln]);\n\n\t\t\t\tfor (var tp = 0; tp < cond[i].length; tp++) {\n\t\t\t\t\tif (link.type == cond[i][tp]) {\n\t\t\t\t\t\treturn \"gantt_link_crossing\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t}\n\n\n\tfunction _render_task_content(task, width, templates) {\n\t\tvar content = document.createElement(\"div\");\n\t\tif (gantt.getTaskType(task.type) != gantt.config.types.milestone)\n\t\t\tcontent.innerHTML = templates.task_text(task.start_date, task.end_date, task);\n\t\tcontent.className = \"gantt_task_content\";\n\t\t//content.style.width = width + 'px';\n\t\treturn content;\n\t}\n\n\tfunction _render_task_progress(task, element, maxWidth, cfg, templates) {\n\t\tvar done = task.progress * 1 || 0;\n\n\t\tmaxWidth = Math.max(maxWidth - 2, 0);//2px for borders\n\t\tvar pr = document.createElement(\"div\");\n\t\tvar width = Math.round(maxWidth * done);\n\n\t\twidth = Math.min(maxWidth, width);\n\t\tif (task.progressColor) {\n\t\t\tpr.style.backgroundColor = task.progressColor;\n\t\t\tpr.style.opacity = 1;\n\t\t}\n\t\tpr.style.width = width + 'px';\n\t\tpr.className = \"gantt_task_progress\";\n\t\tpr.innerHTML = templates.progress_text(task.start_date, task.end_date, task);\n\n\t\tif(cfg.rtl){\n\t\t\tpr.style.position = \"absolute\";\n\t\t\tpr.style.right = \"0px\";\n\t\t}\n\n\t\tvar wrapper = document.createElement(\"div\");\n\t\twrapper.className = \"gantt_task_progress_wrapper\";\n\t\twrapper.appendChild(pr);\n\t\telement.appendChild(wrapper);\n\n\t\tif (gantt.config.drag_progress && !gantt.isReadonly(task)) {\n\t\t\tvar drag = document.createElement(\"div\");\n\n\t\t\tvar markerPos = width;\n\t\t\tif(cfg.rtl){\n\t\t\t\tmarkerPos = maxWidth - width;\n\t\t\t}\n\n\t\t\tdrag.style.left = markerPos + 'px';\n\t\t\tdrag.className = \"gantt_task_progress_drag\";\n\t\t\tpr.appendChild(drag);\n\t\t\telement.appendChild(drag);\n\t\t}\n\t}\n\n\tfunction _get_conditions(leftside) {\n\t\tif (leftside) {\n\t\t\treturn {\n\t\t\t\t$source: [\n\t\t\t\t\tgantt.config.links.start_to_start\n\t\t\t\t],\n\t\t\t\t$target: [\n\t\t\t\t\tgantt.config.links.start_to_start,\n\t\t\t\t\tgantt.config.links.finish_to_start\n\t\t\t\t]\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\t$source: [\n\t\t\t\t\tgantt.config.links.finish_to_start,\n\t\t\t\t\tgantt.config.links.finish_to_finish\n\t\t\t\t],\n\t\t\t\t$target: [\n\t\t\t\t\tgantt.config.links.finish_to_finish\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction _combine_item_class(basic, template, itemId, view) {\n\t\tvar cfg = view.$getConfig();\n\t\tvar css = [basic];\n\t\tif (template)\n\t\t\tcss.push(template);\n\n\t\tvar state = gantt.getState();\n\n\t\tvar task = gantt.getTask(itemId);\n\n\t\tif (gantt.getTaskType(task.type) == cfg.types.milestone) {\n\t\t\tcss.push(\"gantt_milestone\");\n\t\t}else if (gantt.getTaskType(task.type) == cfg.types.project) {\n\t\t\tcss.push(\"gantt_project\");\n\t\t}\n\n\t\tcss.push(\"gantt_bar_\" + gantt.getTaskType(task.type));\n\n\n\t\tif (gantt.isSummaryTask(task))\n\t\t\tcss.push(\"gantt_dependent_task\");\n\n\t\tif (gantt.isSplitTask(task)) {\n\t\t\tcss.push(\"gantt_split_parent\");\n\t\t}\n\n\t\tif (cfg.select_task && itemId == state.selected_task)\n\t\t\tcss.push(\"gantt_selected\");\n\n\t\tif (itemId == state.drag_id) {\n\t\t\tcss.push(\"gantt_drag_\" + state.drag_mode);\n\t\t\tif (state.touch_drag) {\n\t\t\t\tcss.push(\"gantt_touch_\" + state.drag_mode);\n\t\t\t}\n\t\t}\n\n\t\tif (state.link_source_id == itemId)\n\t\t\tcss.push(\"gantt_link_source\");\n\n\t\tif (state.link_target_id == itemId)\n\t\t\tcss.push(\"gantt_link_target\");\n\n\n\t\tif (cfg.highlight_critical_path && gantt.isCriticalTask) {\n\t\t\tif (gantt.isCriticalTask(task))\n\t\t\t\tcss.push(\"gantt_critical_task\");\n\t\t}\n\n\t\tif (state.link_landing_area &&\n\t\t\t(state.link_target_id && state.link_source_id) &&\n\t\t\t(state.link_target_id != state.link_source_id)) {\n\n\t\t\tvar from_id = state.link_source_id;\n\t\t\tvar from_start = state.link_from_start;\n\t\t\tvar to_start = state.link_to_start;\n\n\t\t\tvar allowDrag = gantt.isLinkAllowed(from_id, itemId, from_start, to_start);\n\n\t\t\tvar dragClass = \"\";\n\t\t\tif (allowDrag) {\n\t\t\t\tif (to_start)\n\t\t\t\t\tdragClass = \"link_start_allow\";\n\t\t\t\telse\n\t\t\t\t\tdragClass = \"link_finish_allow\";\n\t\t\t} else {\n\t\t\t\tif (to_start)\n\t\t\t\t\tdragClass = \"link_start_deny\";\n\t\t\t\telse\n\t\t\t\t\tdragClass = \"link_finish_deny\";\n\t\t\t}\n\t\t\tcss.push(dragClass);\n\t\t}\n\t\treturn css.join(\" \");\n\t}\n\n\tfunction _render_pair(parent, css, task, content, config) {\n\t\tvar state = gantt.getState();\n\t\tvar className, element;\n\t\tif (+task.start_date >= +state.min_date) {\n\t\t\tclassName = [css, config.rtl ? \"task_right\" : \"task_left\", \"task_start_date\"];\n\t\t\telement = content(className.join(\" \"));\n\t\t\telement.setAttribute(\"data-bind-property\", \"start_date\");\n\t\t\tparent.appendChild(element);\n\t\t}\n\n\t\tif (+task.end_date <= +state.max_date){\n\t\t\tclassName = [css, config.rtl ? \"task_left\" : \"task_right\", \"task_end_date\"];\n\t\t\telement = content(className.join(\" \"));\n\t\t\telement.setAttribute(\"data-bind-property\", \"end_date\");\n\t\t\tparent.appendChild(element);\n\t\t}\n\n\t}\n\n\treturn _render_task_element;\n}\n\nmodule.exports = createTaskRenderer;", "var domHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\teventable = require(\"../../../utils/eventable\"),\n\tgridResize = require(\"./grid_resize\"),\n\ttopPositionMixin = require(\"../row_position_mixin\");\n\nvar Grid = function(parent, config, factory, gantt){\n\tthis.$config = utils.mixin({}, config || {});\n\tthis.$gantt = gantt;\n\tthis.$parent = parent;\n\teventable(this);\n\tthis.$state = {};\n};\n\n\nGrid.prototype = {\n\tinit: function(container){\n\t\tvar gantt = this.$gantt;\n\t\tvar gridAriaAttr = gantt._waiAria.gridAttrString();\n\t\tvar gridDataAriaAttr = gantt._waiAria.gridDataAttrString();\n\n\n\t\tcontainer.innerHTML = \"<div class='gantt_grid' style='height:inherit;width:inherit;' \"+gridAriaAttr+\"></div>\";\n\t\tthis.$grid = container.childNodes[0];\n\n\t\tthis.$grid.innerHTML = \"<div class='gantt_grid_scale' \"+\n\t\t\tgantt._waiAria.gridScaleRowAttrString()+\"></div><div class='gantt_grid_data' \"+gridDataAriaAttr+\"></div>\";\n\n\t\tthis.$grid_scale = this.$grid.childNodes[0];\n\t\tthis.$grid_data = this.$grid.childNodes[1];\n\n\t\tvar attr = this.$getConfig()[this.$config.bind + \"_attribute\"];\n\t\tif(!attr && this.$config.bind){\n\t\t\tattr = this.$config.bind + \"_id\";\n\t\t}\n\t\tthis.$config.item_attribute = attr || null;\n\n\t\tif(!this.$config.layers){\n\t\t\tvar layers = this._createLayerConfig();\n\t\t\tthis.$config.layers = layers;\n\t\t}\n\n\t\tvar resizer = gridResize(gantt, this);\n\t\tresizer.init();\n\t\tthis._renderHeaderResizers = resizer.doOnRender;\n\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\n\t\tthis._addLayers(this.$gantt);\n\t\tthis._initEvents();\n\t\tthis.callEvent(\"onReady\", []);\n\t\t//this.refresh();\n\t},\n\n\t_validateColumnWidth: function(column, property){\n\t\t// user can set {name:\"text\", width:\"200\",...} for some reason,\n\t\t// check and convert it to number when possible\n\t\tvar value = column[property];\n\t\tif (value && value != \"*\") {\n\t\t\tvar gantt = this.$gantt;\n\t\t\tvar numericWidth = value*1;\n\t\t\tif(isNaN(numericWidth)){\n\t\t\t\tgantt.assert(false, \"Wrong \" + property + \" value of column \" + column.name);\n\t\t\t}else{\n\t\t\t\tcolumn[property] = numericWidth;\n\t\t\t}\n\t\t}\n\t},\n\n\tsetSize: function(width, height){\n\t\tthis.$config.width = this.$state.width = width;\n\t\tthis.$state.height = height;\n\n\t\t// TODO: maybe inherit and override in a subclass instead of extending here\n\n\t\tvar columns = this.getGridColumns(),\n\t\t\tinnerWidth = 0;\n\n\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\tthis._validateColumnWidth(columns[i], \"min_width\");\n\t\t\tthis._validateColumnWidth(columns[i], \"max_width\");\n\t\t\tthis._validateColumnWidth(columns[i], \"width\");\n\t\t\n\t\t\tinnerWidth += columns[i].width*1;\n\t\t}\n\n\t\tvar outerWidth;\n\t\tif(isNaN(innerWidth) || !this.$config.scrollable){\n\t\t\touterWidth = this._setColumnsWidth(width + 1);\n\t\t\tinnerWidth = outerWidth;\n\t\t}\n\n\t\tif(this.$config.scrollable){\n\t\t\tthis.$grid_scale.style.width = innerWidth + \"px\";\n\t\t\tthis.$grid_data.style.width = innerWidth + \"px\";\n\t\t}else{\n\t\t\tthis.$grid_scale.style.width = \"inherit\";\n\t\t\tthis.$grid_data.style.width = \"inherit\";\n\t\t}\n\t\tthis.$config.width -= 1;\n\n\t\tvar config = this.$getConfig();\n\t\tif(outerWidth !== width){\n\t\t\tconfig.grid_width = outerWidth;\n\t\t\tthis.$config.width = outerWidth - 1;\n\t\t}\n\n\t\tvar dataHeight = Math.max(this.$state.height - config.scale_height, 0);\n\t\tthis.$grid_data.style.height = dataHeight + \"px\";\n\t\tthis.refresh();\n\t},\n\tgetSize: function(){\n\n\t\tvar config = this.$getConfig();\n\n\t\tvar store = this.$config.rowStore;\n\n\t\tvar contentHeight = store ? config.row_height * store.countVisible() : 0,\n\t\t\tcontentWidth = this._getGridWidth();\n\n\t\tvar size = {\n\t\t\tx: this.$state.width,\n\t\t\ty: this.$state.height,\n\t\t\tcontentX: this.isVisible() ? contentWidth: 0,\n\t\t\tcontentY: this.isVisible() ? (config.scale_height + contentHeight) : 0,\n\t\t\tscrollHeight: this.isVisible() ? contentHeight: 0,\n\t\t\tscrollWidth: this.isVisible() ? contentWidth : 0\n\t\t};\n\n\t\treturn size;\n\t},\n\trefresh: function(){\n\n\t\tif(this.$config.bind)\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\n\t\tthis._initSmartRenderingPlaceholder();\n\n\t\tthis._calculateGridWidth();\n\t\tthis._renderGridHeader();\n\t},\n\tscrollTo: function(left, top){\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tif (left*1 == left){\n\t\t\tthis.$state.scrollLeft = this.$grid.scrollLeft = left;\n\t\t}\n\n\t\t// var config = this.$getConfig();\n\t\tif(top*1 == top){\n\t\t\tthis.$state.scrollTop = this.$grid_data.scrollTop = top;\n\t\t}\n\t},\n\n\tgetColumnIndex: function(name){\n\t\tvar columns = this.$getConfig().columns;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tif (columns[i].name == name) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetColumn: function(name){\n\t\tvar index = this.getColumnIndex(name);\n\t\tif(index === null){\n\t\t\treturn null;\n\t\t}\n\t\treturn this.$getConfig().columns[index];\n\t},\n\n\tgetGridColumns: function(){\n\t\tvar config = this.$getConfig();\n\t\treturn config.columns.slice();\n\t},\n\tisVisible: function(){\n\t\tif(this.$parent && this.$parent.$config){\n\t\t\treturn !this.$parent.$config.hidden;\n\t\t}else{\n\t\t\treturn this.$grid.offsetWidth;\n\t\t}\n\t},\n\n\tgetItemHeight: function(){\n\t\tvar config = this.$getConfig();\n\t\treturn config.row_height;\n\t},\n\n\t_createLayerConfig: function(){\n\t\tvar gantt = this.$gantt;\n\t\tvar self = this;\n\t\tvar layers = [\n\t\t\t{\n\t\t\t\trenderer: gantt.$ui.layers.gridLine,\n\t\t\t\tcontainer: this.$grid_data,\n\t\t\t\tfilter: [function(){\n\t\t\t\t\treturn self.isVisible();\n\t\t\t\t}]\n\t\t\t}\n\t\t];\n\t\treturn layers;\n\t},\n\n\t_addLayers: function(gantt){\n\t\tif(!this.$config.bind)\n\t\t\treturn;\n\n\t\tthis._taskLayers = [];\n\n\t\tvar self = this;\n\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\tif(!taskRenderer){\n\t\t\ttaskRenderer = layers.createDataRender({\n\t\t\t\tname: this.$config.bind,\n\t\t\t\tdefaultContainer: function(){ return self.$grid_data;}\n\t\t\t});\n\t\t}\n\n\t\tvar taskLayers = this.$config.layers;\n\t\tfor(var i = 0; taskLayers && i < taskLayers.length; i++){\n\t\t\tvar layer = taskLayers[i];\n\t\t\tlayer.host = this;\n\t\t\tvar bar_layer = taskRenderer.addLayer(layer);\n\t\t\tthis._taskLayers.push(bar_layer);\n\t\t}\n\n\t\tif(this.$config.bind)\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\n\t\tthis._initSmartRenderingPlaceholder();\n\t},\n\n\t_refreshPlaceholderOnStoreUpdate: function(id){\n\t\tvar config = this.$getConfig(),\n\t\t\tstore = this.$config.rowStore;\n\n\t\tif(!store || id !== null || !this.isVisible() || !config.smart_rendering) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar contentHeight;\n\t\tif(this.$config.scrollY) {\n\t\t\tvar scroll = this.$gantt.$ui.getView(this.$config.scrollY);\n\t\t\tif(scroll)\n\t\t\t\tcontentHeight = scroll.getScrollState().scrollSize;\n\t\t}\n\n\t\tif(!contentHeight){\n\t\t\tcontentHeight = store ? config.row_height * store.countVisible() : 0;\n\t\t}\n\n\t\tif(contentHeight){\n\t\t\tif(this.$rowsPlaceholder && this.$rowsPlaceholder.parentNode){\n\t\t\t\tthis.$rowsPlaceholder.parentNode.removeChild(this.$rowsPlaceholder);\n\t\t\t}\n\n\t\t\tvar placeholder = this.$rowsPlaceholder = document.createElement(\"div\");\n\t\t\tplaceholder.style.visibility = \"hidden\";\n\t\t\tplaceholder.style.height = contentHeight + \"px\";\n\t\t\tplaceholder.style.width = \"1px\";\n\t\t\tthis.$grid_data.appendChild(placeholder);\n\t\t}\n\t},\n\n\t_initSmartRenderingPlaceholder: function(){\n\t\tvar store = this.$config.rowStore;\n\t\tif(!store){\n\t\t\treturn;\n\t\t}else{\n\t\t\tthis._initSmartRenderingPlaceholder = function(){};\n\t\t}\n\t\tthis._staticBgHandler = store.attachEvent(\"onStoreUpdated\", utils.bind(this._refreshPlaceholderOnStoreUpdate, this));\n\t},\n\n\t_initEvents: function(){\n\t\tvar gantt = this.$gantt;\n\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_close\", gantt.bind(function (e, id, trg) {\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tif(!store) return true;\n\n\t\t\tvar target = domHelpers.locateAttribute(e, this.$config.item_attribute);\n\t\t\tif(target){\n\t\t\t\tstore.close(target.getAttribute(this.$config.item_attribute));\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}, this), this.$grid);\n\n\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_open\", gantt.bind(function (e, id, trg) {\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tif(!store) return true;\n\n\t\t\tvar target = domHelpers.locateAttribute(e, this.$config.item_attribute);\n\t\t\tif(target){\n\t\t\t\tstore.open(target.getAttribute(this.$config.item_attribute));\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}, this), this.$grid);\n\t},\n\n\t_clearLayers: function(gantt){\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\tif (this._taskLayers) {\n\t\t\tfor(var i = 0; i < this._taskLayers.length; i++){\n\t\t\t\ttaskRenderer.removeLayer(this._taskLayers[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis._taskLayers = [];\n\t},\n\n\t_getColumnWidth: function(column, config, width) {\n\t\tvar min_width = column.min_width || config.min_grid_column_width;\n\t\tvar new_width = Math.max(width, min_width || 10);\n\t\tif (column.max_width)\n\t\t\tnew_width = Math.min(new_width, column.max_width);\n\t\treturn new_width;\n\t},\n\t// return min and max possible grid width according to restricts\n\t_getGridWidthLimits: function() {\n\t\tvar config = this.$getConfig(),\n\t\t\tcolumns = this.getGridColumns(),\n\t\t\tmin_limit = 0,\n\t\t\tmax_limit = 0;\n\n\t\t\tfor (var i=0; i<columns.length; i++) {\n\t\t\t\tmin_limit += columns[i].min_width ? columns[i].min_width : config.min_grid_column_width;\n\t\t\t\tif (max_limit !== undefined) {\n\t\t\t\t\tmax_limit = columns[i].max_width ? (max_limit + columns[i].max_width) : undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [min_limit, max_limit];\n\t},\n\t// resize columns to get total newWidth, starting from columns[start_index]  \n\t_setColumnsWidth: function(newWidth, start_index) {\n\t\tvar config = this.$getConfig();\n\t\tvar columns = this.getGridColumns(),\n\t\t\tcolumns_width = 0,\n\t\t\tfinal_width = newWidth;\n\n\t\tstart_index = !window.isNaN(start_index) ? start_index : -1;\n\n\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\tcolumns_width += columns[i].width*1;\n\t\t}\n\n\t\tif (window.isNaN(columns_width)) {\n\t\t\tthis._calculateGridWidth(); \n\t\t\tcolumns_width = 0;\n\t\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\t\tcolumns_width += columns[i].width*1;\n\t\t\t}\n\t\t}\n\n\t\tvar extra_width = final_width - columns_width;\n\n\t\tvar start_width = 0;\n\t\tfor (var i=0; i<start_index+1; i++) {\n\t\t\tstart_width += columns[i].width;\n\t\t}\n\n\t\tcolumns_width -= start_width;\n\n\t\tfor (var i=start_index+1; i<columns.length; i++) {\n\n\t\t\tvar col = columns[i];\n\t\t\tvar\tshare = Math.round(extra_width * (col.width / columns_width));\n\n\t\t\t// columns have 2 additional restrict fields - min_width & max_width that are set by user\n\t\t\tif (extra_width < 0) {\n\t\t\t\tif (col.min_width && col.width+share < col.min_width)\n\t\t\t\t\tshare = col.min_width - col.width;\n\t\t\t\telse if (!col.min_width && config.min_grid_column_width && col.width+share < config.min_grid_column_width)\n\t\t\t\t\tshare = config.min_grid_column_width - col.width;\n\t\t\t} else if (col.max_width && col.width+share > col.max_width)\n\t\t\t\tshare = col.max_width - col.width;\n\n\t\t\tcolumns_width -= col.width;\n\t\t\tcol.width += share;\n\t\t\textra_width -= share;\n\n\t\t}\n\n\t\tvar iterator = extra_width > 0 ? 1 : -1;\n\t\twhile ((extra_width > 0 && iterator === 1) || (extra_width < 0 && iterator === -1)) {\n\t\t\tvar curExtra = extra_width;\n\t\t\tfor (i = start_index+1; i<columns.length; i++) {\n\t\t\t\tvar new_width = columns[i].width + iterator;\n\n\t\t\t\tif (new_width == this._getColumnWidth(columns[i], config, new_width)) {\n\t\t\t\t\textra_width -= iterator;\n\t\t\t\t\tcolumns[i].width = new_width;\n\t\t\t\t}\n\n\t\t\t\tif (!extra_width)\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif (curExtra == extra_width)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// if impossible to resize the right-side columns, resize the start column\n\t\tif (extra_width && start_index > -1) {\n\t\t\tvar new_width = columns[start_index].width + extra_width;\n\t\t\tif (new_width == this._getColumnWidth(columns[start_index], config, new_width))\n\t\t\t\tcolumns[start_index].width = new_width;\n\t\t}\n\n\t\t//if (this.callEvent(\"onGridResizeEnd\", [config.grid_width, final_width]) === false)\n\t\t//\treturn;\n\n\t\treturn this._getColsTotalWidth();\n\t},\n\n\t_getColsTotalWidth: function(){\n\t\tvar columns = this.getGridColumns();\n\t\tvar cols_width = 0;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar v = parseFloat(columns[i].width);\n\t\t\tif (window.isNaN(v)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcols_width += v;\n\t\t}\n\t\treturn cols_width;\n\t},\n\t_calculateGridWidth: function() {\n\t\tvar config = this.$getConfig();\n\t\tvar columns = this.getGridColumns();\n\t\tvar cols_width = 0;\n\t\tvar unknown = [];\n\t\tvar width = [];\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar v = parseFloat(columns[i].width);\n\t\t\tif (window.isNaN(v)) {\n\t\t\t\tv = config.min_grid_column_width || 10;\n\t\t\t\tunknown.push(i);\n\t\t\t}\n\t\t\twidth[i] = v;\n\t\t\tcols_width += v;\n\t\t}\n\t\tvar gridWidth = this._getGridWidth() + 1;\n\t\tif (config.autofit || unknown.length) {\n\t\t\tvar diff = gridWidth - cols_width;\n\t\t\t// TODO: logic may be improved for proportional changing of width\n\t\t\tif (config.autofit) {\n\t\t\t\t// delta must be added for all columns\n\t\t\t\tfor (var i = 0; i < width.length; i++) {\n\t\t\t\t\tvar delta = Math.round(diff / (width.length-i));\n\t\t\t\t\twidth[i] += delta;\n\t\t\t\t\tvar new_width = this._getColumnWidth(columns[i], config, width[i]);\n\n\t\t\t\t\tif (new_width != width[i]) {\n\t\t\t\t\t\tdelta = new_width - width[i];\n\t\t\t\t\t\twidth[i] = new_width;\n\t\t\t\t\t}\n\t\t\t\t\tdiff -= delta;\n\t\t\t\t}\n\t\t\t} else if (unknown.length) {\n\t\t\t\t// there are several columns with undefined width\n\t\t\t\tfor (var i = 0; i < unknown.length; i++) {\n\t\t\t\t\tvar delta = Math.round(diff / (unknown.length-i)); // no float values, just integer\n\t\t\t\t\tvar index = unknown[i];\n\t\t\t\t\twidth[index] += delta;\n\t\t\t\t\tvar new_width = this._getColumnWidth(columns[index], config, width[index]);\n\t\t\t\t\tif (new_width != width[index]) {\n\t\t\t\t\t\tdelta = new_width - width[index];\n\t\t\t\t\t\twidth[index] = new_width;\n\t\t\t\t\t}\n\t\t\t\t\tdiff -= delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < width.length; i++) {\n\t\t\t\tcolumns[i].width = width[i];\n\t\t\t}\n\t\t} else {\n\t\t\tvar changed = (gridWidth != cols_width);\n\t\t\tthis.$config.width = cols_width - 1;\n\t\t\tconfig.grid_width = cols_width;\n\t\t\tif(changed){\n\t\t\t\tthis.$parent._setContentSize(this.$config.width, this.$config.height);\n//\t\t\t\tthis.$parent.$config.width = cols_width;\n\t\t\t}\n\t\t}\n\n\t},\n\n\t_renderGridHeader: function(){\n\t\tvar gantt = this.$gantt;\n\t\tvar config = this.$getConfig();\n\t\tvar locale = this.$gantt.locale;\n\t\tvar templates = this.$gantt.templates;\n\n\t\tvar columns = this.getGridColumns();\n\t\tif(config.rtl){\n\t\t\tcolumns = columns.reverse();\n\t\t}\n\t\tvar cells = [];\n\t\tvar width = 0,\n\t\t\tlabels = locale.labels;\n\n\t\tvar lineHeigth = config.scale_height - 1;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar last = i == columns.length - 1;\n\t\t\tvar col = columns[i];\n\n\t\t\t// ensure columns have non-empty names\n\t\t\tif (!col.name) {\n\t\t\t\tcol.name = gantt.uid() + \"\";\n\t\t\t}\n\n\t\t\tvar colWidth = col.width * 1;\n\n\t\t\tvar gridWidth = this._getGridWidth();\n\t\t\tif (last && gridWidth > width + colWidth)\n\t\t\t\tcol.width = colWidth = gridWidth - width;\n\t\t\twidth += colWidth;\n\t\t\tvar sort = (gantt._sort && col.name == gantt._sort.name) ? (\"<div class='gantt_sort gantt_\" + gantt._sort.direction + \"'></div>\") : \"\";\n\t\t\tvar cssClass = [\"gantt_grid_head_cell\",\n\t\t\t\t(\"gantt_grid_head_\" + col.name),\n\t\t\t\t(last ? \"gantt_last_cell\" : \"\"),\n\t\t\t\ttemplates.grid_header_class(col.name, col)].join(\" \");\n\n\t\t\tvar style = \"width:\" + (colWidth - (last ? 1 : 0)) + \"px;\";\n\t\t\tvar label = (col.label || labels[\"column_\" + col.name]);\n\t\t\tlabel = label || \"\";\n\n\t\t\tvar ariaAttrs = gantt._waiAria.gridScaleCellAttrString(col, label);\n\n\t\t\tvar cell = \"<div class='\" + cssClass + \"' style='\" + style + \"' \" + ariaAttrs + \" data-column-id='\" + col.name + \"' column_id='\" + col.name + \"'>\" + label + sort + \"</div>\";\n\t\t\tcells.push(cell);\n\t\t}\n\t\tthis.$grid_scale.style.height = (config.scale_height) + \"px\";\n\t\tthis.$grid_scale.style.lineHeight = lineHeigth + \"px\";\n\t\t//this.$grid_scale.style.width = \"inherit\";\n\t\tthis.$grid_scale.innerHTML = cells.join(\"\");\n\n\t\tif(this._renderHeaderResizers){\n\t\t\tthis._renderHeaderResizers();\n\t\t}\n\t},\n\n\t_getGridWidth: function(){\n\t\t// TODO: refactor/remove/comment some of _getGridWidth/this.$config.width/this.$state.width, it's not clear what they do\n\t\treturn this.$config.width;\n\t},\n\n\tdestructor: function(){\n\t\tthis._clearLayers(this.$gantt);\n\t\tif(this._mouseDelegates){\n\t\t\tthis._mouseDelegates.destructor();\n\t\t\tthis._mouseDelegates = null;\n\t\t}\n\t\tthis.$grid = null;\n\t\tthis.$grid_scale = null;\n\t\tthis.$grid_data = null;\n\t\tthis.$gantt = null;\n\n\t\tif(this.$config.rowStore){\n\t\t\tthis.$config.rowStore.detachEvent(this._staticBgHandler);\n\t\t\tthis.$config.rowStore = null;\n\t\t}\n\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\t}\n};\n\nutils.mixin(Grid.prototype, topPositionMixin());\n\nmodule.exports = Grid;\n", "function createMixin(){\n\treturn {\n\t\t/**\n\t\t * Get top coordinate by row index (order)\n\t\t * @param {number} index \n\t\t */\n\t\tgetRowTop: function(index){\n\t\t\treturn index * this.$getConfig().row_height;\n\t\t},\n\n\t\t/**\n\t\t * Get top coordinate by item id\n\t\t * @param {*} task_id \n\t\t */\n\t\tgetItemTop: function (task_id) {\n\t\t\tif(this.$config.rowStore){\n\t\t\t\tvar store = this.$config.rowStore;\n\t\t\t\tif(!store) return 0;\n\n\t\t\t\tif(store.getParent && store.exists(task_id) && store.exists(store.getParent(task_id))){\n\t\t\t\t\tvar parent = store.getItem(store.getParent(task_id));\n\t\t\t\t\tif(this.$gantt.isSplitTask(parent)){\n\t\t\t\t\t\treturn this.getRowTop(store.getIndexById(parent.id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.getRowTop(store.getIndexById(task_id));\n\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t}\n\t};\n}\n\nmodule.exports = createMixin;", "var utils = require(\"../../../utils/utils\");\n\nfunction ScaleHelper(gantt){\n\tvar dateHelper = gantt.date;\n\tvar services = gantt.$services;\n\n\treturn {\n\t\tgetSum: function (sizes, from, to) {\n\t\t\tif (to === undefined)\n\t\t\t\tto = sizes.length - 1;\n\t\t\tif (from === undefined)\n\t\t\t\tfrom = 0;\n\n\t\t\tvar summ = 0;\n\t\t\tfor (var i = from; i <= to; i++)\n\t\t\t\tsumm += sizes[i];\n\n\t\t\treturn summ;\n\t\t},\n\t\tsetSumWidth: function (sum_width, scale, from, to) {\n\t\t\tvar parts = scale.width;\n\n\t\t\tif (to === undefined)\n\t\t\t\tto = parts.length - 1;\n\t\t\tif (from === undefined)\n\t\t\t\tfrom = 0;\n\t\t\tvar length = to - from + 1;\n\n\t\t\tif (from > parts.length - 1 || length <= 0 || to > parts.length - 1)\n\t\t\t\treturn;\n\n\t\t\tvar oldWidth = this.getSum(parts, from, to);\n\n\t\t\tvar diff = sum_width - oldWidth;\n\n\t\t\tthis.adjustSize(diff, parts, from, to);\n\t\t\tthis.adjustSize(-diff, parts, to + 1);\n\n\t\t\tscale.full_width = this.getSum(parts);\n\t\t},\n\t\tsplitSize: function (width, count) {\n\t\t\tvar arr = [];\n\t\t\tfor (var i = 0; i < count; i++) arr[i] = 0;\n\n\t\t\tthis.adjustSize(width, arr);\n\t\t\treturn arr;\n\n\t\t},\n\t\tadjustSize: function (width, parts, from, to) {\n\t\t\tif (!from)\n\t\t\t\tfrom = 0;\n\t\t\tif (to === undefined)\n\t\t\t\tto = parts.length - 1;\n\n\t\t\tvar length = to - from + 1;\n\n\t\t\tvar full = this.getSum(parts, from, to);\n\n\t\t\tfor (var i = from; i <= to; i++) {\n\t\t\t\tvar share = Math.floor(width * (full ? (parts[i] / full) : (1 / length)));\n\n\t\t\t\tfull -= parts[i];\n\t\t\t\twidth -= share;\n\t\t\t\tlength--;\n\n\t\t\t\tparts[i] += share;\n\t\t\t}\n\t\t\tparts[parts.length - 1] += width;\n\t\t},\n\t\tsortScales: function (scales) {\n\t\t\tfunction cellSize(unit, step) {\n\t\t\t\tvar d = new Date(1970, 0, 1);\n\t\t\t\treturn dateHelper.add(d, step, unit) - d;\n\t\t\t}\n\n\t\t\tscales.sort(function (a, b) {\n\t\t\t\tif (cellSize(a.unit, a.step) < cellSize(b.unit, b.step)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (cellSize(a.unit, a.step) > cellSize(b.unit, b.step)) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (var i = 0; i < scales.length; i++) {\n\t\t\t\tscales[i].index = i;\n\t\t\t}\n\t\t},\n\t\tprimaryScale: function () {\n\n\t\t\tvar config = services.getService(\"templateLoader\");\n\t\t\tconfig.initTemplate(\"date_scale\", undefined, undefined, services.config(), services.templates());\n\n\t\t\treturn {\n\t\t\t\tunit: services.config().scale_unit,\n\t\t\t\tstep: services.config().step,\n\t\t\t\ttemplate: services.templates().date_scale,\n\t\t\t\tdate: services.config().date_scale,\n\t\t\t\tcss: services.templates().scale_cell_class\n\t\t\t};\n\t\t},\n\n\t\tprepareConfigs: function (scales, min_coll_width, container_width, scale_height, minDate, maxDate, rtl) {\n\t\t\tvar heights = this.splitSize(scale_height, scales.length);\n\t\t\tvar full_width = container_width;\n\n\t\t\tvar configs = [];\n\t\t\tfor (var i = scales.length - 1; i >= 0; i--) {\n\t\t\t\tvar main_scale = (i == scales.length - 1);\n\t\t\t\tvar cfg = this.initScaleConfig(scales[i], minDate, maxDate);\n\t\t\t\tif (main_scale) {\n\t\t\t\t\tthis.processIgnores(cfg);\n\t\t\t\t}\n\n\t\t\t\tthis.initColSizes(cfg, min_coll_width, full_width, heights[i]);\n\t\t\t\tthis.limitVisibleRange(cfg);\n\n\t\t\t\tif (main_scale) {\n\t\t\t\t\tfull_width = cfg.full_width;\n\t\t\t\t}\n\n\t\t\t\tconfigs.unshift(cfg);\n\t\t\t}\n\n\n\t\t\tfor (var i = 0; i < configs.length - 1; i++) {\n\t\t\t\tthis.alineScaleColumns(configs[configs.length - 1], configs[i]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < configs.length; i++) {\n\n\t\t\t\tif(rtl){\n\t\t\t\t\tthis.reverseScale(configs[i]);\n\t\t\t\t}\n\t\t\t\tthis.setPosSettings(configs[i]);\n\t\t\t}\n\t\t\treturn configs;\n\n\t\t},\n\n\t\treverseScale: function(scale){\n\t\t\tscale.width = scale.width.reverse();\n\t\t\tscale.trace_x = scale.trace_x.reverse();\n\n\t\t\tvar indexes = scale.trace_indexes;\n\t\t\tscale.trace_indexes = {};\n\t\t\tscale.trace_index_transition = {};\n\t\t\tscale.rtl = true;\n\t\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\t\tscale.trace_indexes[scale.trace_x[i].valueOf()] = i;\n\t\t\t\tscale.trace_index_transition[indexes[scale.trace_x[i].valueOf()]] = i;\n\t\t\t}\n\t\t\treturn scale;\n\t\t},\n\n\t\tsetPosSettings: function (config) {\n\t\t\tfor (var i = 0, len = config.trace_x.length; i < len; i++) {\n\t\t\t\tconfig.left.push((config.width[i - 1] || 0) + (config.left[i - 1] || 0));\n\t\t\t}\n\t\t},\n\n\t\t_ignore_time_config: function (date, scale) {\n\n\t\t\tif (services.config().skip_off_time) {\n\t\t\t\tvar skip = true;\n\t\t\t\tvar probe = date;\n\n\t\t\t\t// check dates in case custom scale unit, e.g. {unit: \"month\", step: 3}\n\t\t\t\tfor (var i = 0; i < scale.step; i++) {\n\t\t\t\t\tif (i) {\n\t\t\t\t\t\tprobe = dateHelper.add(date, i, scale.unit);\n\t\t\t\t\t}\n\n\t\t\t\t\tskip = skip && !this.isWorkTime(probe, scale.unit);\n\t\t\t\t}\n\n\t\t\t\treturn skip;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t//defined in an extension\n\t\tprocessIgnores: function (config) {\n\t\t\tconfig.ignore_x = {};\n\t\t\tconfig.display_count = config.count;\n\t\t},\n\t\tinitColSizes: function (config, min_col_width, full_width, line_height) {\n\t\t\tvar cont_width = full_width;\n\n\t\t\tconfig.height = line_height;\n\n\t\t\tvar column_count = config.display_count === undefined ? config.count : config.display_count;\n\n\t\t\tif (!column_count)\n\t\t\t\tcolumn_count = 1;\n\n\t\t\tconfig.col_width = Math.floor(cont_width / column_count);\n\n\t\t\tif (min_col_width) {\n\t\t\t\tif (config.col_width < min_col_width) {\n\t\t\t\t\tconfig.col_width = min_col_width;\n\t\t\t\t\tcont_width = config.col_width * column_count;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconfig.width = [];\n\t\t\tvar ignores = config.ignore_x || {};\n\t\t\tfor (var i = 0; i < config.trace_x.length; i++) {\n\t\t\t\tif (ignores[config.trace_x[i].valueOf()] || (config.display_count == config.count)) {\n\t\t\t\t\tconfig.width[i] = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// width of month columns should be proportional month duration\n\t\t\t\t\tvar width = 1;\n\t\t\t\t\tif (config.unit == \"month\") {\n\t\t\t\t\t\tvar days = Math.round((dateHelper.add(config.trace_x[i], config.step, config.unit) - config.trace_x[i]) / (1000 * 60 * 60 * 24));\n\t\t\t\t\t\twidth = days;\n\t\t\t\t\t}\n\t\t\t\t\tconfig.width[i] = width;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.adjustSize(cont_width - this.getSum(config.width)/* 1 width per column from the code above */, config.width);\n\t\t\tconfig.full_width = this.getSum(config.width);\n\t\t},\n\t\tinitScaleConfig: function (config, min_date, max_date) {\n\t\t\tvar cfg = utils.mixin({\n\t\t\t\tcount: 0,\n\t\t\t\tcol_width: 0,\n\t\t\t\tfull_width: 0,\n\t\t\t\theight: 0,\n\t\t\t\twidth: [],\n\t\t\t\tleft: [],\n\t\t\t\ttrace_x: [],\n\t\t\t\ttrace_indexes: {},\n\t\t\t\tmin_date: new Date(min_date),\n\t\t\t\tmax_date: new Date(max_date)\n\t\t\t}, config);\n\n\t\t\tthis.eachColumn(config.unit, config.step, min_date, max_date, function (date) {\n\t\t\t\tcfg.count++;\n\t\t\t\tcfg.trace_x.push(new Date(date));\n\t\t\t\tcfg.trace_indexes[date.valueOf()] = cfg.trace_x.length - 1;\n\t\t\t});\n\n\t\t\tcfg.trace_x_ascending = cfg.trace_x.slice();\n\t\t\treturn cfg;\n\t\t},\n\t\titerateScales: function (lower_scale, upper_scale, from, to, callback) {\n\t\t\tvar upper_dates = upper_scale.trace_x;\n\t\t\tvar lower_dates = lower_scale.trace_x;\n\n\t\t\tvar prev = from || 0;\n\t\t\tvar end = to || (lower_dates.length - 1);\n\t\t\tvar prevUpper = 0;\n\n\n\t\t\tfor (var up = 1; up < upper_dates.length; up++) {\n\t\t\t\tvar target_index = (lower_scale.trace_indexes[+upper_dates[up]]);\n\t\t\t\tif (target_index !== undefined && target_index <= end) {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback.apply(this, [prevUpper, up, prev, target_index]);\n\t\t\t\t\t}\n\t\t\t\t\tprev = target_index;\n\t\t\t\t\tprevUpper = up;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\talineScaleColumns: function (lower_scale, upper_scale, from, to) {\n\t\t\tthis.iterateScales(lower_scale, upper_scale, from, to, function (upper_start, upper_end, lower_start, lower_end) {\n\t\t\t\tvar targetWidth = this.getSum(lower_scale.width, lower_start, lower_end - 1);\n\t\t\t\tvar actualWidth = this.getSum(upper_scale.width, upper_start, upper_end - 1);\n\t\t\t\tif (actualWidth != targetWidth) {\n\t\t\t\t\tthis.setSumWidth(targetWidth, upper_scale, upper_start, upper_end - 1);\n\t\t\t\t}\n\n\t\t\t});\n\t\t},\n\n\t\teachColumn: function (unit, step, min_date, max_date, callback) {\n\t\t\tvar start = new Date(min_date),\n\t\t\t\tend = new Date(max_date);\n\t\t\tif (dateHelper[unit + \"_start\"]) {\n\t\t\t\tstart = dateHelper[unit + \"_start\"](start);\n\t\t\t}\n\n\t\t\tvar curr = new Date(start);\n\t\t\tif (+curr >= +end) {\n\t\t\t\tend = dateHelper.add(curr, step, unit);\n\t\t\t}\n\t\t\twhile (+curr < +end) {\n\t\t\t\tcallback.call(this, new Date(curr));\n\t\t\t\tvar tzOffset = curr.getTimezoneOffset();\n\t\t\t\tcurr = dateHelper.add(curr, step, unit);\n\t\t\t\tcurr = gantt._correct_dst_change(curr, tzOffset, step, unit);\n\t\t\t\tif (dateHelper[unit + '_start'])\n\t\t\t\t\tcurr = dateHelper[unit + \"_start\"](curr);\n\t\t\t}\n\t\t},\n\t\tlimitVisibleRange: function (cfg) {\n\t\t\tvar dates = cfg.trace_x;\n\n\t\t\tvar left = 0, right = cfg.width.length - 1;\n\t\t\tvar diff = 0;\n\t\t\tif (+dates[0] < +cfg.min_date && left != right) {\n\t\t\t\tvar width = Math.floor(cfg.width[0] * ((dates[1] - cfg.min_date) / (dates[1] - dates[0])));\n\t\t\t\tdiff += cfg.width[0] - width;\n\t\t\t\tcfg.width[0] = width;\n\n\t\t\t\tdates[0] = new Date(cfg.min_date);\n\t\t\t}\n\n\t\t\tvar last = dates.length - 1;\n\t\t\tvar lastDate = dates[last];\n\t\t\tvar outDate = dateHelper.add(lastDate, cfg.step, cfg.unit);\n\t\t\tif (+outDate > +cfg.max_date && last > 0) {\n\t\t\t\tvar width = cfg.width[last] - Math.floor(cfg.width[last] * ((outDate - cfg.max_date) / (outDate - lastDate)));\n\t\t\t\tdiff += cfg.width[last] - width;\n\t\t\t\tcfg.width[last] = width;\n\t\t\t}\n\n\t\t\tif (diff) {\n\t\t\t\tvar full = this.getSum(cfg.width);\n\t\t\t\tvar shared = 0;\n\t\t\t\tfor (var i = 0; i < cfg.width.length; i++) {\n\t\t\t\t\tvar share = Math.floor(diff * (cfg.width[i] / full));\n\t\t\t\t\tcfg.width[i] += share;\n\t\t\t\t\tshared += share;\n\t\t\t\t}\n\t\t\t\tthis.adjustSize(diff - shared, cfg.width);\n\t\t\t}\n\n\t\t}\n\t};\n}\n\nmodule.exports = ScaleHelper;\n", "var __extends = require(\"../../../utils/extends\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\"),\n\tCell = require(\"./cell\");\n\nvar Layout = (function (_super) {\n\t\"use strict\";\n\n\t__extends(Layout, _super);\n\tfunction Layout(parent, config, factory) {\n\t\tvar _this = _super.apply(this, arguments) || this;\n\n\t\tif(parent)\n\t\t\t_this.$root = true;\n\n\t\t_this._parseConfig(config);\n\t\t_this.$name = \"layout\";\n\t\treturn _this;\n\t}\n\n\tLayout.prototype.destructor = function () {\n\t\tif (this.$container && this.$view) {\n\t\t\tdomHelpers.removeNode(this.$view);\n\t\t}\n\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tvar child = this.$cells[i];\n\t\t\tchild.destructor();\n\t\t}\n\t\tthis.$cells = [];\n\n\t\t_super.prototype.destructor.call(this);\n\t};\n\n\tLayout.prototype._resizeScrollbars = function(autosize, scrollbars){\n\t\tvar scrollChanged = false;\n\t\tvar visibleScrollbars = [],\n\t\t\thiddenSrollbars = [];\n\n\t\tfunction showScrollbar(scrollbar){\n\t\t\tscrollbar.$parent.show();\n\t\t\tscrollChanged = true;\n\t\t\tvisibleScrollbars.push(scrollbar);\n\t\t}\n\t\tfunction hideScrollbar(scrollbar){\n\t\t\tscrollbar.$parent.hide();\n\t\t\tscrollChanged = true;\n\t\t\thiddenSrollbars.push(scrollbar);\n\t\t}\n\n\t\tvar scrollbar;\n\t\tfor(var i = 0; i < scrollbars.length; i++){\n\t\t\tscrollbar = scrollbars[i];\n\n\t\t\tif(autosize[scrollbar.$config.scroll]) {\n\t\t\t\thideScrollbar(scrollbar);\n\t\t\t}else if(scrollbar.shouldHide()){\n\t\t\t\thideScrollbar(scrollbar);\n\t\t\t}else if(scrollbar.shouldShow()){\n\t\t\t\tshowScrollbar(scrollbar);\n\t\t\t}else{\n\t\t\t\tif(scrollbar.isVisible()){\n\t\t\t\t\tvisibleScrollbars.push(scrollbar);\n\t\t\t\t}else{\n\t\t\t\t\thiddenSrollbars.push(scrollbar);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar visibleGroups = {};\n\t\tfor(var i = 0; i < visibleScrollbars.length; i++){\n\t\t\tif(visibleScrollbars[i].$config.group){\n\t\t\t\tvisibleGroups[visibleScrollbars[i].$config.group] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor(var i = 0; i < hiddenSrollbars.length; i++){\n\t\t\tscrollbar = hiddenSrollbars[i];\n\n\t\t\tif(scrollbar.$config.group && visibleGroups[scrollbar.$config.group]){\n\t\t\t\tshowScrollbar(scrollbar);\n\t\t\t}\n\t\t}\n\n\t\treturn scrollChanged;\n\t};\n\n\tLayout.prototype._syncCellSizes = function(groupName, newSize){\n\t\tif(!groupName)\n\t\t\treturn;\n\n\t\tvar groups = {};\n\n\t\tthis._eachChild(function(cell){\n\t\t\tif(cell.$config.group && cell.$name != \"scrollbar\" && cell.$name != \"resizer\"){\n\t\t\t\tif(!groups[cell.$config.group]){\n\t\t\t\t\tgroups[cell.$config.group] = [];\n\t\t\t\t}\n\t\t\t\tgroups[cell.$config.group].push(cell);\n\t\t\t}\n\t\t});\n\n\t\tif(groups[groupName]){\n\t\t\tthis._syncGroupSize(groups[groupName], newSize);\n\t\t}\n\t\treturn groups[groupName];\n\t};\n\n\tLayout.prototype._syncGroupSize = function(cells, newSize){\n\t\tif(!cells.length) return;\n\n\t\tvar property = cells[0].$parent._xLayout ? \"width\" : \"height\";\n\t\tvar direction = cells[0].$parent.getNextSibling(cells[0].$id) ? 1 : -1;\n\n\t\tfor(var i = 0; i < cells.length; i++){\n\t\t\tvar ownSize = cells[i].getSize();\n\n\t\t\tvar resizeSibling = direction > 0 ? cells[i].$parent.getNextSibling(cells[i].$id) : cells[i].$parent.getPrevSibling(cells[i].$id);\n\t\t\tif(resizeSibling.$name == \"resizer\"){\n\t\t\t\tresizeSibling = direction > 0 ? resizeSibling.$parent.getNextSibling(resizeSibling.$id) : resizeSibling.$parent.getPrevSibling(resizeSibling.$id);\n\t\t\t}\n\t\t\tvar siblingSize = resizeSibling.getSize();\n\n\t\t\tif(resizeSibling[property]){\n\t\t\t\tvar totalGravity = ownSize.gravity + siblingSize.gravity;\n\t\t\t\tvar totalSize = ownSize[property] + siblingSize[property];\n\t\t\t\tvar k = totalGravity / totalSize;\n\t\t\t\tcells[i].$config.gravity = k * newSize;\n\n\t\t\t\tresizeSibling.$config[property] = totalSize - newSize;\n\t\t\t\tresizeSibling.$config.gravity = totalGravity - k * newSize;\n\t\t\t}else{\n\n\n\t\t\t\tcells[i].$config[property] = newSize;\n\t\t\t}\n\n\t\t\tvar mainGrid = this.$gantt.$ui.getView(\"grid\");\n\t\t\tif(mainGrid && cells[i].$content === mainGrid && !mainGrid.$config.scrollable){\n\t\t\t\tthis.$gantt.config.grid_width = newSize;\n\t\t\t}\n\t\t}\n\t};\n\n\tLayout.prototype.resize = function(startStage){\n\t\tvar mainCall = false;\n\t\tif(this.$root && !this._resizeInProgress){\n\t\t\tthis.callEvent(\"onBeforeResize\", []);\n\t\t\tmainCall = true;\n\t\t\tthis._resizeInProgress = true;\n\t\t}\n\n\t\t_super.prototype.resize.call(this, true);\n\t\t_super.prototype.resize.call(this, false);\n\n\t\tif(mainCall){\n\n\t\t\tvar contentViews = [];\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"viewCell\"));\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"viewLayout\"));\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"hostCell\"));\n\n\t\t\tvar scrollbars = this.getCellsByType(\"scroller\");\n\n\t\t\tfor(var i = 0; i < contentViews.length; i++){\n\t\t\t\tif(!contentViews[i].$config.hidden)\n\t\t\t\t\tcontentViews[i].setContentSize();\n\t\t\t}\n\n\t\t\tvar autosize = this._getAutosizeMode(this.$config.autosize);\n\n\t\t\tvar scrollChanged = this._resizeScrollbars(autosize, scrollbars);\n\n\t\t\tif(this.$config.autosize){\n\t\t\t\tthis.autosize(this.$config.autosize);\n\t\t\t\tscrollChanged = true;\n\t\t\t}\n\n\t\t\tif(scrollChanged){\n\t\t\t\tthis.resize();\n\t\t\t\tfor(var i = 0; i < contentViews.length; i++){\n\t\t\t\t\tif(!contentViews[i].$config.hidden)\n\t\t\t\t\t\tcontentViews[i].setContentSize();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onResize\", []);\n\t\t}\n\t\tif(mainCall){\n\t\t\tthis._resizeInProgress = false;\n\t\t}\n\t};\n\n\tLayout.prototype._eachChild = function(code, cell){\n\t\tcell = cell || this;\n\t\tcode(cell);\n\t\tif(cell.$cells){\n\t\t\tfor(var i = 0; i < cell.$cells.length; i++){\n\t\t\t\tthis._eachChild(code, cell.$cells[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\tLayout.prototype.isChild = function(view){\n\t\tvar res = false;\n\t\tthis._eachChild(function(child){\n\t\t\tif(child === view || child.$content === view){\n\t\t\t\tres = true;\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t};\n\n\tLayout.prototype.getCellsByType = function(type){\n\t\tvar res = [];\n\t\tif(type === this.$name){\n\t\t\tres.push(this);\n\t\t}\n\n\t\tif(this.$content && this.$content.$name == type){\n\t\t\tres.push(this.$content);\n\t\t}\n\n\t\tif(this.$cells){\n\t\t\tfor(var i = 0; i < this.$cells.length; i++){\n\t\t\t\tvar children = Layout.prototype.getCellsByType.call(this.$cells[i], type);\n\t\t\t\tif(children.length){\n\t\t\t\t\tres.push.apply(res, children);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\n\tLayout.prototype.getNextSibling = function(cellId){\n\t\tvar index = this.cellIndex(cellId);\n\t\tif(index >= 0 && this.$cells[index + 1]){\n\t\t\treturn this.$cells[index + 1];\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tLayout.prototype.getPrevSibling = function(cellId){\n\t\tvar index = this.cellIndex(cellId);\n\t\tif(index >= 0 && this.$cells[index - 1]){\n\t\t\treturn this.$cells[index - 1];\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\n\tLayout.prototype.cell = function (id) {\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tvar child = this.$cells[i];\n\t\t\tif (child.$id === id) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\tvar sub = child.cell(id);\n\t\t\tif (sub) {\n\t\t\t\treturn sub;\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.cellIndex = function (id) {\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tif (this.$cells[i].$id === id) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\tLayout.prototype.moveView = function (view, ind) {\n\t\tif (this.$cells[ind] !== view) {\n\t\t\treturn window.alert(\"Not implemented\");\n\t\t}\n\t\telse {\n\t\t\tind += this.$config.header ? 1 : 0;\n\t\t\tvar node = this.$view;\n\t\t\tif (ind >= node.childNodes.length) {\n\t\t\t\tnode.appendChild(view.$view);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode.insertBefore(view.$view, node.childNodes[ind]);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype._parseConfig = function (config) {\n\t\tthis.$cells = [];\n\t\tthis._xLayout = !config.rows;\n\t\tvar cells = config.rows || config.cols || config.views;\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tvar cell = cells[i];\n\t\t\tcell.mode = this._xLayout ? \"x\" : \"y\";\n\t\t\tvar $content = this.$factory.initUI(cell, this);\n\t\t\tif(!$content){\n\t\t\t\tcells.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}else{\n\t\t\t\t$content.$parent = this;\n\t\t\t\tthis.$cells.push($content);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.getCells = function () {\n\t\treturn this.$cells;\n\t};\n\tLayout.prototype.render = function () {\n\t\tvar view = domHelpers.insertNode(this.$container, this.$toHTML());\n\t\tthis.$fill(view, null);\n\t\tthis.callEvent(\"onReady\", []);\n\t\tthis.resize();\n\n\t\t// do simple repaint after the first call\n\t\tthis.render = this.resize;\n\t};\n\tLayout.prototype.$fill = function (node, parent) {\n\t\tthis.$view = node;\n\t\tthis.$parent = parent;\n\t\tvar cells = domHelpers.getChildNodes(node, \"gantt_layout_cell\");\n\t\tfor (var i = cells.length - 1; i >= 0; i--) {\n\t\t\tvar sub = this.$cells[i];\n\t\t\tsub.$fill(cells[i], this);\n\t\t\t// initially hidden cell\n\t\t\tif (sub.$config.hidden) {\n\t\t\t\tsub.$view.parentNode.removeChild(sub.$view);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.$toHTML = function () {\n\t\tvar mode = this._xLayout ? \"x\" : \"y\";\n\t\tvar html = [];\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\thtml.push(this.$cells[i].$toHTML());\n\t\t}\n\t\treturn _super.prototype.$toHTML.call(this, html.join(\"\"), (this.$root ? \"gantt_layout_root \" : \"\") + \"gantt_layout gantt_layout_\" + mode);\n\t};\n\n\tLayout.prototype.getContentSize = function(mode){\n\t\tvar contentWidth = 0,\n\t\t\tcontentHeight = 0;\n\n\t\tvar cellSize, cell, borders;\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tcell = this.$cells[i];\n\t\t\tif(cell.$config.hidden)\n\t\t\t\tcontinue;\n\n\t\t\tcellSize = cell.getContentSize(mode);\n\n\t\t\tif(cell.$config.view === \"scrollbar\" && mode[cell.$config.scroll]){\n\t\t\t\tcellSize.height = 0;\n\t\t\t\tcellSize.width = 0;\n\t\t\t}\n\n\t\t\tif(cell.$config.resizer){\n\t\t\t\tif(this._xLayout){\n\t\t\t\t\tcellSize.height = 0;\n\t\t\t\t}else{\n\t\t\t\t\tcellSize.width = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tborders = cell._getBorderSizes();\n\n\t\t\tif(this._xLayout){\n\t\t\t\tcontentWidth += (cellSize.width + borders.horizontal);\n\t\t\t\tcontentHeight = Math.max(contentHeight, (cellSize.height + borders.vertical));\n\t\t\t}else{\n\t\t\t\tcontentWidth = Math.max(contentWidth, cellSize.width + borders.horizontal);\n\t\t\t\tcontentHeight += cellSize.height + borders.vertical;\n\t\t\t}\n\t\t}\n\n\t\tborders = this._getBorderSizes();\n\t\tcontentWidth += borders.horizontal;\n\t\tcontentHeight += borders.vertical;\n\n\t\tif(this.$root){\n\t\t\tcontentWidth += 1;\n\t\t\tcontentHeight += 1;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: contentWidth,\n\t\t\theight: contentHeight\n\t\t};\n\t};\n\n\tLayout.prototype._cleanElSize = function(value){\n\t\treturn ((value || \"\").toString().replace(\"px\", \"\") * 1 || 0);\n\t};\n\tLayout.prototype._getBoxStyles = function(div){\n\t\tvar computed = null;\n\t\tif(window.getComputedStyle){\n\t\t\tcomputed = window.getComputedStyle(div, null);\n\t\t}else{\n\t\t\t//IE with elem.currentStyle does not calculate sizes from %, so will use the default approach\n\t\t\tcomputed = {\n\t\t\t\t\"width\":div.clientWidth,\n\t\t\t\t\"height\":div.clientHeight\n\t\t\t};\n\t\t}\n\t\tvar properties = [\n\t\t\t\"width\",\n\t\t\t\"height\",\n\n\t\t\t\"paddingTop\",\n\t\t\t\"paddingBottom\",\n\t\t\t\"paddingLeft\",\n\t\t\t\"paddingRight\",\n\n\t\t\t\"borderLeftWidth\",\n\t\t\t\"borderRightWidth\",\n\t\t\t\"borderTopWidth\",\n\t\t\t\"borderBottomWidth\"\n\t\t];\n\t\tvar styles = {\n\t\t\tboxSizing:(computed.boxSizing == \"border-box\")\n\t\t};\n\n\t\tif(computed.MozBoxSizing){\n\t\t\tstyles.boxSizing = (computed.MozBoxSizing == \"border-box\");\n\t\t}\n\t\tfor(var i =0; i < properties.length; i++){\n\t\t\tstyles[properties[i]] = computed[properties[i]] ? this._cleanElSize(computed[properties[i]]) : 0;\n\t\t}\n\n\n\t\tvar box = {\n\t\t\thorPaddings : (styles.paddingLeft + styles.paddingRight + styles.borderLeftWidth + styles.borderRightWidth),\n\t\t\tvertPaddings : (styles.paddingTop + styles.paddingBottom + styles.borderTopWidth + styles.borderBottomWidth),\n\t\t\tborderBox: styles.boxSizing,\n\t\t\tinnerWidth : styles.width,\n\t\t\tinnerHeight : styles.height,\n\t\t\touterWidth : styles.width,\n\t\t\touterHeight : styles.height\n\t\t};\n\n\n\t\tif(box.borderBox){\n\t\t\tbox.innerWidth -= box.horPaddings;\n\t\t\tbox.innerHeight -= box.vertPaddings;\n\t\t}else{\n\t\t\tbox.outerWidth += box.horPaddings;\n\t\t\tbox.outerHeight += box.vertPaddings;\n\t\t}\n\n\t\treturn box;\n\t};\n\n\tLayout.prototype._getAutosizeMode = function(config){\n\t\tvar res = {x:false, y:false};\n\t\tif(config === \"xy\"){\n\t\t\tres.x = res.y = true;\n\t\t}else if(config === \"y\" || config === true){\n\t\t\tres.y = true;\n\t\t}else if(config === \"x\"){\n\t\t\tres.x = true;\n\t\t}\n\t\treturn res;\n\t};\n\n\tLayout.prototype.autosize = function(mode) {\n\t\tvar res = this._getAutosizeMode(mode);\n\t\tvar boxSizes = this._getBoxStyles(this.$container);\n\t\tvar contentSizes = this.getContentSize(mode);\n\n\t\tvar node = this.$container;\n\t\tif(res.x){\n\t\t\tif(boxSizes.borderBox){\n\t\t\t\tcontentSizes.width += boxSizes.horPaddings;\n\t\t\t}\n\t\t\tnode.style.width = contentSizes.width + \"px\";\n\t\t}\n\t\tif(res.y){\n\t\t\tif(boxSizes.borderBox){\n\t\t\t\tcontentSizes.height += boxSizes.vertPaddings;\n\t\t\t}\n\t\t\tnode.style.height = contentSizes.height + \"px\";\n\t\t}\n\t};\n\n\tLayout.prototype.getSize = function () {\n\t\tthis._sizes = [];\n\t\tvar width = 0;\n\t\tvar minWidth = 0;\n\t\tvar maxWidth = 100000;\n\t\tvar height = 0;\n\t\tvar maxHeight = 100000;\n\t\tvar minHeight = 0;\n\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\n\t\t\tvar size = this._sizes[i] = this.$cells[i].getSize();\n\t\t\tif (this.$cells[i].$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._xLayout) {\n\t\t\t\tif (!size.width && size.minWidth) {\n\t\t\t\t\twidth += size.minWidth;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twidth += size.width;\n\t\t\t\t}\n\t\t\t\tmaxWidth += size.maxWidth;\n\t\t\t\tminWidth += size.minWidth;\n\t\t\t\theight = Math.max(height, size.height);\n\t\t\t\tmaxHeight = Math.min(maxHeight, size.maxHeight); // min of maxHeight\n\t\t\t\tminHeight = Math.max(minHeight, size.minHeight); // max of minHeight\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!size.height && size.minHeight) {\n\t\t\t\t\theight += size.minHeight;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\theight += size.height;\n\t\t\t\t}\n\t\t\t\tmaxHeight += size.maxHeight;\n\t\t\t\tminHeight += size.minHeight;\n\t\t\t\twidth = Math.max(width, size.width);\n\t\t\t\tmaxWidth = Math.min(maxWidth, size.maxWidth); // min of maxWidth\n\t\t\t\tminWidth = Math.max(minWidth, size.minWidth); // max of minWidth\n\t\t\t}\n\t\t}\n\t\tvar self = _super.prototype.getSize.call(this);\n\t\t// maxWidth\n\t\tif (self.maxWidth >= 100000) {\n\t\t\tself.maxWidth = maxWidth;\n\t\t}\n\t\t// maxHeight\n\t\tif (self.maxHeight >= 100000) {\n\t\t\tself.maxHeight = maxHeight;\n\t\t}\n\t\t// minWidth\n\t\tself.minWidth = self.minWidth !== self.minWidth ? 0 : self.minWidth;// || self.width || Math.max(minWidth, width);\n\t\t// minHeight\n\t\tself.minHeight = self.minHeight !== self.minHeight ? 0 : self.minHeight;//self.minHeight || self.height || Math.max(minHeight, height);\n\t\t// sizes with paddings and margins\n\t\tif (this._xLayout) {\n\t\t\tself.minWidth += this.$config.margin * (this.$cells.length) || 0;\n\t\t\tself.minWidth += this.$config.padding * 2 || 0;\n\t\t\tself.minHeight += (this.$config.padding * 2) || 0;\n\t\t}\n\t\telse {\n\t\t\tself.minHeight += this.$config.margin * (this.$cells.length) || 0;\n\t\t\tself.minHeight += (this.$config.padding * 2) || 0;\n\t\t}\n\t\t\n\t\treturn self;\n\t};\n\t// calc total gravity and free space\n\tLayout.prototype._calcFreeSpace = function (s, cell, xLayout) {\n\t\tvar min = xLayout ? cell.minWidth : cell.minHeight;\n\t\tvar max = xLayout ? cell.maxWidth : cell.maxWidth;\n\t\tvar side = s;\n\t\tif (!side) {\n\t\t\tside = Math.floor(this._free / this._gravity * cell.gravity);\n\t\t\tif (side > max) {\n\t\t\t\tside = max;\n\t\t\t\tthis._free -= side;\n\t\t\t\tthis._gravity -= cell.gravity;\n\t\t\t}\n\t\t\tif (side < min) {\n\t\t\t\tside = min;\n\t\t\t\tthis._free -= side;\n\t\t\t\tthis._gravity -= cell.gravity;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (side > max) {\n\t\t\t\tside = max;\n\t\t\t}\n\t\t\tif (side < min) {\n\t\t\t\tside = min;\n\t\t\t}\n\t\t\tthis._free -= side;\n\t\t}\n\t\treturn side;\n\t};\n\tLayout.prototype._calcSize = function (s, size, xLayout) {\n\t\tvar side = s;\n\t\tvar min = xLayout ? size.minWidth : size.minHeight;\n\t\tvar max = xLayout ? size.maxWidth : size.maxHeight;\n\t\tif (!side) {\n\t\t\tside = Math.floor(this._free / this._gravity * size.gravity);\n\t\t}\n\t\tif (side > max) {\n\t\t\tside = max;\n\t\t}\n\t\tif (side < min) {\n\t\t\tside = min;\n\t\t}\n\t\treturn side;\n\t};\n\n\tLayout.prototype._configureBorders = function(){\n\t\tif(this.$root){\n\t\t\tthis._setBorders([\n\t\t\t\tthis._borders.left,\n\t\t\t\tthis._borders.top,\n\t\t\t\tthis._borders.right,\n\t\t\t\tthis._borders.bottom\n\t\t\t],\n\t\t\tthis);\n\t\t}\n\n\t\tvar borderClass = this._xLayout ? this._borders.right : this._borders.bottom;\n\n\t\tvar cells = this.$cells;\n\n\t\tvar lastVisibleIndex = cells.length - 1;\n\t\tfor(var i = lastVisibleIndex; i >= 0; i--){\n\t\t\tif (!cells[i].$config.hidden) {\n\t\t\t\tlastVisibleIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tif (cells[i].$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar lastCell = i >= lastVisibleIndex;\n\t\t\tvar borderColorClass = \"\";\n\t\t\tif(!lastCell && cells[i + 1]){\n\t\t\t\tif(cells[i + 1].$config.view == \"scrollbar\"){\n\t\t\t\t\tif(this._xLayout){\n\t\t\t\t\t\tlastCell = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tborderColorClass = \"gantt_layout_cell_border_transparent\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tthis._setBorders(lastCell ? [] : [borderClass, borderColorClass], cells[i]);\n\t\t}\n\t};\n\n\tLayout.prototype._updateCellVisibility = function(){\n\t\tvar oldVisibleCells = this._visibleCells || {};\n\t\tvar firstCall = !this._visibleCells;\n\t\tvar visibleCells = {};\n\t\tvar cell;\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (!firstCall && cell.$config.hidden && oldVisibleCells[cell.$id]) {\n\t\t\t\tcell._hide(true);\n\t\t\t}else if(!cell.$config.hidden && !oldVisibleCells[cell.$id]){\n\t\t\t\tcell._hide(false);\n\t\t\t}\n\n\t\t\tif(!cell.$config.hidden){\n\t\t\t\tvisibleCells[cell.$id] = true;\n\t\t\t}\n\t\t}\n\t\tthis._visibleCells = visibleCells;\n\t};\n\n\tLayout.prototype.setSize = function (x, y) {\n\t\tthis._configureBorders();\n\t\t_super.prototype.setSize.call(this, x, y);\n\t\ty = this.$lastSize.contentY;\n\t\tx = this.$lastSize.contentX;\n\n\t\tvar padding = (this.$config.padding || 0);\n\t\tthis.$view.style.padding = padding + \"px\";\n\t\tthis._gravity = 0;\n\t\tthis._free = this._xLayout ? x : y;\n\t\tthis._free -= padding * 2;\n\t\t// calc all gravity\n\n\t\tvar cell,\n\t\t\tsize;\n\n\t\tthis._updateCellVisibility();\n\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar margin = (this.$config.margin || 0);\n\t\t\tif(cell.$name == \"resizer\" && !margin){\n\t\t\t\tmargin = -1;\n\t\t\t}\n\n\t\t\t// set margins to child cell\n\t\t\tvar cellView = cell.$view;\n\n\t\t\tvar marginSide = this._xLayout ? \"marginRight\" : \"marginBottom\";\n\t\t\tif (i !== this.$cells.length - 1) {\n\t\t\t\tcellView.style[marginSide] = margin + \"px\";\n\t\t\t\tthis._free -= margin; // calc free space without margin\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tif (this._xLayout) {\n\t\t\t\tif (!size.width) {\n\t\t\t\t\tthis._gravity += size.gravity;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!size.height) {\n\t\t\t\t\tthis._gravity += size.gravity;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\t\t\tif (this._xLayout) {\n\t\t\t\tthis._calcFreeSpace(width, size, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._calcFreeSpace(height, size, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tvar dx = void 0;\n\t\t\tvar dy = void 0;\n\t\t\tif (this._xLayout) {\n\t\t\t\tdx = this._calcSize(size.width, size, true);\n\t\t\t\tdy = y - padding * 2; // layout height without paddings\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdx = x - padding * 2; // layout width without paddings\n\t\t\t\tdy = this._calcSize(size.height, size, false);\n\t\t\t}\n\n\t\t\tcell.setSize(dx, dy);\n\t\t}\n\n\t};\n\n\treturn Layout;\n}(Cell));\n\nmodule.exports = Layout;", "function checkTimeout(host, updPerSecond){\n\tif (!updPerSecond)\n\t\treturn true;\n\t\n\tif (host._on_timeout)\n\t\treturn false;\n\t\n\tvar timeout = Math.ceil(1000/updPerSecond);\n\tif (timeout < 2) return true;\n\n\tsetTimeout(function(){\n\t\tdelete host._on_timeout;\n\t}, timeout);\n\n\thost._on_timeout = true;\n\treturn true;\n}\n\nmodule.exports = checkTimeout;", "function extend(gantt){\n\n\tgantt.destructor = function(){\n\t\tgantt.callEvent(\"onDestroy\", []);\n\n\t\tthis.clearAll();\n\t\tthis.detachAllEvents();\n\n\t\tif(this.$root){\n\t\t\tdelete this.$root.gantt;\n\t\t}\n\n\t\tthis._eventRemoveAll();\n\t\tif(this.$layout){\n\t\t\tthis.$layout.destructor();\n\t\t}\n\n\t\tthis.resetLightbox();\n\n\t\tif(this._dp && this._dp.destructor){\n\t\t\tthis._dp.destructor();\n\t\t}\n\n\t\tthis.$services.destructor();\n\n\t\tfor(var i in this){\n\t\t\tif(i.indexOf(\"$\") === 0){\n\t\t\t\tdelete this[i];\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = extend;\n", "/*\n \tasserts will be removed in final code, so you can place them anythere\n\twithout caring about performance impacts\n*/\n\nmodule.exports = function(gantt){\n\treturn function assert(check, message){\n\t\tif (!check){\n\t\t\tif(gantt.config.show_errors && gantt.callEvent(\"onError\",[message]) !== false) {\n\t\t\t\tgantt.message({type: \"error\", text: message, expire: -1});\n\n\t\t\t\t// eslint-disable-next-line no-debugger\n\t\t\t\tdebugger;\n\t\t\t}\n\t\t}\n\t};\n};", "var domHelpers = require(\"../utils/dom_helpers\"),\n\thelpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt){\n\tvar calculateScaleRange = require(\"./gantt_data_range\");\n\n\tgantt.assert = require(\"./common/assert\")(gantt);\n\n//initial initialization\n\tgantt.init = function(node, from, to){\n\t\tif(from && to){\n\t\t\tthis.config.start_date = this._min_date = new Date(from);\n\t\t\tthis.config.end_date = this._max_date = new Date(to);\n\t\t}\n\t\tthis.date.init();\n\n\t\tif (!this.config.scroll_size)\n\t\t\tthis.config.scroll_size = domHelpers.getScrollSize() || 1;\n\n\t\t//can be called only once\n\t\tthis.init = function(node){\n\t\t\tif (this.$container && this.$container.parentNode){\n\t\t\t\tthis.$container.parentNode.removeChild(this.$container);\n\t\t\t\tthis.$container = null;\n\t\t\t}\n\n\t\t\tif(this.$layout){\n\t\t\t\tthis.$layout.clear();\n\t\t\t}\n\t\t\tthis._reinit(node);\n\t\t};\n\n\t\tthis._reinit(node);\n\t};\n\n\tgantt._reinit = function(node){\n\t\tthis.callEvent(\"onBeforeGanttReady\", []);\n\t\t//this._init_tasks_range();\n\t\tthis.resetLightbox();\n\t\tthis._update_flags();\n\n\n\t\tvar config = this.$services.getService(\"templateLoader\");\n\t\tconfig.initTemplates(this);\n\n\t\tthis._clearTaskLayers();\n\t\tthis._clearLinkLayers();\n\n\t\t//this.clear\n\t\tif(this.$layout){\n\t\t\tthis.$layout.destructor();\n\t\t\tthis.$ui.reset();\n\t\t}\n\n\t\tthis.$root = domHelpers.toNode(node);\n\t\tif(this.$root){\n\t\t\tthis.$root.innerHTML = \"\";\n\t\t}\n\t\tthis.$root.gantt = this;\n\t\tcalculateScaleRange(this);\n\t\tthis.config.layout.id = \"main\";\n\t\tthis.$layout = this.$ui.createView(\"layout\", node, this.config.layout);\n\n\t\tthis.$layout.attachEvent(\"onBeforeResize\", function(){\n\t\t\tvar storeNames = gantt.$services.getService(\"datastores\");\n\t\t\tfor(var i = 0; i < storeNames.length; i++){\n\t\t\t\tgantt.getDatastore(storeNames[i]).filter();\n\t\t\t}\n\t\t});\n\n\t\tthis.$layout.attachEvent(\"onResize\", function(){\n\t\t\tgantt.refreshData();\n\t\t});\n\n\t\tthis.callEvent(\"onGanttLayoutReady\", []);\n\t\tthis.$layout.render();\n\n\t\tgantt.$container = this.$layout.$container.firstChild;\n\n\t\taddResizeListener(gantt);\n\n\t\tthis.callEvent(\"onTemplatesReady\",[]);\n\t\tthis.$mouseEvents.reset(this.$root);\n\t\tthis.callEvent(\"onGanttReady\", []);\n\n\t\tthis.render();\n\t};\n\n\tfunction addResizeListener(gantt){\n\t\tvar resizeDelay;\n\n\t\tvar containerStyles = window.getComputedStyle(gantt.$root);\n\t\tif(containerStyles.getPropertyValue(\"position\") == \"static\"){\n\t\t\tgantt.$root.style.position = \"relative\";\n\t\t}\n\n\t\tvar resizeWatcher = document.createElement('iframe');\n\t\tresizeWatcher.className = \"gantt_container_resize_watcher\";\n\t\tresizeWatcher.tabIndex = -1;\n\n\t\tgantt.$root.appendChild(resizeWatcher);\n\t\tresizeWatcher.contentWindow.addEventListener('resize', function(){ \n\t\t\tclearTimeout(resizeDelay);\n\t\t\tresizeDelay = setTimeout(function(){\n\t\t\t\tgantt.render();\n\t\t\t}, 300);\t\t\n\t\t});\n\t}\n\n\tgantt.$click={\n\t\tbuttons:{\n\t\t\t\"edit\":function(id){\n\t\t\t\tgantt.showLightbox(id);\n\t\t\t},\n\t\t\t\"delete\":function(id){\n\t\t\t\tvar question = gantt.locale.labels.confirm_deleting;\n\t\t\t\tvar title = gantt.locale.labels.confirm_deleting_title;\n\n\t\t\t\tgantt._dhtmlx_confirm(question, title, function(){\n\t\t\t\t\tif(!gantt.isTaskExists(id)){\n\t\t\t\t\t\tgantt.hideLightbox();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar task = gantt.getTask(id);\n\t\t\t\t\tif(task.$new){\n\t\t\t\t\t\tgantt.silent(function(){\n\t\t\t\t\t\t\tgantt.deleteTask(id, true);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tgantt.refreshData();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tgantt.deleteTask(id);\n\t\t\t\t\t}\n\n\t\t\t\t\tgantt.hideLightbox();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n//renders self\n\tgantt.render = function(){\n\t\tthis.callEvent(\"onBeforeGanttRender\", []);\n\n\t\tif (!this.config.sort && this._sort) {\n\t\t\tthis._sort = undefined;\n\t\t}\n\n\t\tvar pos = this.getScrollState();\n\t\tvar posX = pos ? pos.x : 0;\n\t\tif(this._getHorizontalScrollbar()){\n\t\t\tvar scrollbar = this._getHorizontalScrollbar();\n\t\t\tposX = scrollbar.$config.codeScrollLeft || posX || 0;\n\t\t}\n\n\n\t\tvar visible_date = null;\n\t\tif(posX){\n\t\t\tvisible_date = gantt.dateFromPos(posX + this.config.task_scroll_offset);\n\t\t}\n\t\tcalculateScaleRange(this);\n\n\t\tthis.$layout.$config.autosize = this.config.autosize;\n\t\tthis.$layout.resize();\n\n\t\tif(this.config.preserve_scroll && pos){\n\n\t\t\tif(posX){\n\t\t\t\tvar new_pos = gantt.getScrollState();\n\t\t\t\tvar new_date = gantt.dateFromPos(new_pos.x);\n\t\t\t\tif(!(+visible_date == +new_date && new_pos.y == pos.y)){\n\t\t\t\t\tif(visible_date){\n\t\t\t\t\t\tthis.showDate(visible_date);\n\t\t\t\t\t}\n\t\t\t\t\tif(pos.y)\n\t\t\t\t\t\tgantt.scrollTo(undefined, pos.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onGanttRender\", []);\n\t};\n\n\t//TODO: add layout.resize method that wouldn't trigger data repaint\n\tgantt.setSizes = gantt.render;\n\n\tgantt.locate = function(e) {\n\t\tvar trg = domHelpers.getTargetNode(e);\n\n\t\t//ignore empty cells\n\t\tvar className = domHelpers.getClassName(trg);\n\t\tif ((className || \"\").indexOf(\"gantt_task_cell\") >= 0) return null;\n\n\t\tvar targetAttribute = arguments[1] || this.config.task_attribute;\n\n\t\tvar node = domHelpers.locateAttribute(trg, targetAttribute);\n\t\tif(node){\n\t\t\treturn node.getAttribute(targetAttribute);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tgantt._locate_css = function(e, classname, strict){\n\t\treturn domHelpers.locateClassName(e, classname, strict);\n\t};\n\n\tgantt._locateHTML = function(e, attribute) {\n\t\treturn domHelpers.locateAttribute(e, attribute || this.config.task_attribute);\n\t};\n\n\tgantt.getTaskRowNode = function(id) {\n\t\tvar els = this.$grid_data.childNodes;\n\t\tvar attribute = this.config.task_attribute;\n\t\tfor (var i = 0; i < els.length; i++) {\n\t\t\tif (els[i].getAttribute) {\n\t\t\t\tvar value = els[i].getAttribute(attribute);\n\t\t\t\tif (value == id) return els[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tgantt.changeLightboxType = function(type){\n\t\tif(this.getLightboxType() == type)\n\t\t\treturn true;\n\t\tgantt._silent_redraw_lightbox(type);\n\t};\n\n\n\tgantt._get_link_type = function (from_start, to_start) {\n\t\tvar type = null;\n\t\tif (from_start && to_start) {\n\t\t\ttype = gantt.config.links.start_to_start;\n\t\t} else if (!from_start && to_start) {\n\t\t\ttype = gantt.config.links.finish_to_start;\n\t\t} else if (!from_start && !to_start) {\n\t\t\ttype = gantt.config.links.finish_to_finish;\n\t\t} else if (from_start && !to_start) {\n\t\t\ttype = gantt.config.links.start_to_finish;\n\t\t}\n\t\treturn type;\n\t};\n\n\tgantt.isLinkAllowed = function (from, to, from_start, to_start) {\n\t\tvar link = null;\n\t\tif (typeof(from) == \"object\") {\n\t\t\tlink = from;\n\t\t} else {\n\t\t\tlink = {source: from, target: to, type: this._get_link_type(from_start, to_start)};\n\t\t}\n\n\t\tif (!link) return false;\n\t\tif (!(link.source && link.target && link.type)) return false;\n\t\tif (link.source == link.target) return false;\n\n\t\tvar res = true;\n\t\t//any custom rules\n\t\tif (this.checkEvent(\"onLinkValidation\"))\n\t\t\tres = this.callEvent(\"onLinkValidation\", [link]);\n\n\t\treturn res;\n\t};\n\n\n\tgantt._correct_dst_change = function(date, prevOffset, step, unit){\n\t\tvar time_unit = helpers.getSecondsInUnit(unit) * step;\n\t\tif(time_unit > 60*60 && time_unit < 60*60*24){\n\t\t\t//correct dst change only if current unit is more than one hour and less than day (days have own checking), e.g. 12h\n\t\t\tvar offsetChanged = date.getTimezoneOffset() - prevOffset;\n\t\t\tif(offsetChanged){\n\t\t\t\tdate = gantt.date.add(date, offsetChanged, \"minute\");\n\t\t\t}\n\t\t}\n\t\treturn date;\n\t};\n\n\tgantt.isSplitTask = function(task){\n\t\tgantt.assert(task && task instanceof Object, \"Invalid argument <b>task</b>=\"+task+\" of gantt.isSplitTask. Task object was expected\");\n\t\treturn this.$data.tasksStore._isSplitItem(task);\n\t};\n\n\tgantt._is_icon_open_click = function(e) {\n\t\tif (!e)\n\t\t\treturn false;\n\t\tvar target = e.target || e.srcElement;\n\t\tif (!(target && target.className))\n\t\t\treturn false;\n\t\tvar className = domHelpers.getClassName(target);\n\t\tif (className.indexOf(\"gantt_tree_icon\") !== -1 && (className.indexOf(\"gantt_close\") !== -1 || className.indexOf(\"gantt_open\") !== -1))\n\t\t\treturn true;\n\t\treturn false;\n\t};\n\n};", "module.exports = function(gantt) {\n\n\tgantt.config.touch_drag = 500; //nearly immediate dnd\n\tgantt.config.touch = true;\n\tgantt.config.touch_feedback = true;\n\tgantt.config.touch_feedback_duration = 1;\n\tgantt._prevent_touch_scroll = false;\n\n\n\tgantt._touch_feedback = function () {\n\t\tif (gantt.config.touch_feedback) {\n\t\t\tif (navigator.vibrate)\n\t\t\t\tnavigator.vibrate(gantt.config.touch_feedback_duration);\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onGanttReady\", gantt.bind(function(){\n\t\tif (this.config.touch != \"force\")\n\t\t\tthis.config.touch = this.config.touch &&\n\t\t\t\t((navigator.userAgent.indexOf(\"Mobile\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"iPad\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"Android\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"Touch\") != -1));\n\n\t\tif (this.config.touch) {\n\n\t\t\tvar touchEventsSupported = true;\n\t\t\ttry {\n\t\t\t\tdocument.createEvent(\"TouchEvent\");\n\t\t\t} catch (e) {\n\t\t\t\ttouchEventsSupported = false;\n\t\t\t}\n\n\t\t\tif (touchEventsSupported) {\n\t\t\t\tthis._touch_events([\"touchmove\", \"touchstart\", \"touchend\"], function (ev) {\n\t\t\t\t\tif (ev.touches && ev.touches.length > 1) return null;\n\t\t\t\t\tif (ev.touches[0])\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\tpageX: ev.touches[0].pageX,\n\t\t\t\t\t\t\tpageY: ev.touches[0].pageY,\n\t\t\t\t\t\t\tclientX: ev.touches[0].clientX,\n\t\t\t\t\t\t\tclientY: ev.touches[0].clientY\n\t\t\t\t\t\t};\n\t\t\t\t\telse\n\t\t\t\t\t\treturn ev;\n\t\t\t\t}, function () {\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t} else if (window.navigator.pointerEnabled) {\n\t\t\t\tthis._touch_events([\"pointermove\", \"pointerdown\", \"pointerup\"], function (ev) {\n\t\t\t\t\tif (ev.pointerType == \"mouse\") return null;\n\t\t\t\t\treturn ev;\n\t\t\t\t}, function (ev) {\n\t\t\t\t\treturn (!ev || (ev.pointerType == \"mouse\" ));\n\t\t\t\t});\n\t\t\t} else if (window.navigator.msPointerEnabled) {\n\t\t\t\tthis._touch_events([\"MSPointerMove\", \"MSPointerDown\", \"MSPointerUp\"], function (ev) {\n\t\t\t\t\tif (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE) return null;\n\t\t\t\t\treturn ev;\n\t\t\t\t}, function (ev) {\n\t\t\t\t\treturn (!ev || ev.pointerType == ev.MSPOINTER_TYPE_MOUSE);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}, gantt));\n\n\n\tfunction getTaskDND(){\n\t\tvar _tasks_dnd;\n\t\tif(gantt.$ui.getView(\"timeline\")){\n\t\t\t_tasks_dnd = gantt.$ui.getView(\"timeline\")._tasks_dnd;\n\t\t}\n\t\treturn _tasks_dnd;\n\t}\n\n\tvar touchHandlers = [];\n\n//we can't use native scrolling, as we need to sync momentum between different parts\n//so we will block native scroll and use the custom one\n//in future we can add custom momentum\n\tgantt._touch_events = function (names, accessor, ignore) {\n\t\t//webkit on android need to be handled separately\n\t\tvar dblclicktime = 0;\n\t\tvar action_mode = false;\n\t\tvar scroll_mode = false;\n\t\tvar action_start = null;\n\t\tvar scroll_state;\n\t\tvar long_tap_timer = null;\n\t\tvar current_target = null;\n\n\n\n\t\tfor(var i = 0; i < touchHandlers.length; i++){\n\t\t\tgantt.eventRemove(touchHandlers[i][0], touchHandlers[i][1], touchHandlers[i][2]);\n\t\t}\n\t\ttouchHandlers = [];\n\n\t\t//touch move\n\t\ttouchHandlers.push([gantt.$container, names[0], function (e) {\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\t\tif (ignore(e)) return;\n\n\t\t\t\t//ignore common and scrolling moves\n\t\t\t\tif (!action_mode) return;\n\n\t\t\t\tif (long_tap_timer) clearTimeout(long_tap_timer);\n\n\t\t\t\tvar source = accessor(e);\n\t\t\t\tif (_tasks_dnd && (_tasks_dnd.drag.id || _tasks_dnd.drag.start_drag)) {\n\t\t\t\t\t_tasks_dnd.on_mouse_move(source);\n\t\t\t\t\tif (e.preventDefault)\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!gantt._prevent_touch_scroll) {\n\t\t\t\t\tif (source && action_start) {\n\t\t\t\t\t\tvar dx = action_start.pageX - source.pageX;\n\t\t\t\t\t\tvar dy = action_start.pageY - source.pageY;\n\t\t\t\t\t\tif (!scroll_mode && (Math.abs(dx) > 5 || Math.abs(dy) > 5)) {\n\t\t\t\t\t\t\tgantt._touch_scroll_active = scroll_mode = true;\n\t\t\t\t\t\t\tdblclicktime = 0;\n\t\t\t\t\t\t\tscroll_state = gantt.getScrollState();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (scroll_mode) {\n\t\t\t\t\t\t\tgantt.scrollTo(scroll_state.x + dx, scroll_state.y + dy);\n\t\t\t\t\t\t\tvar new_scroll_state = gantt.getScrollState();\n\n\t\t\t\t\t\t\tif ((scroll_state.x != new_scroll_state.x && dy > 2 * dx) ||\n\t\t\t\t\t\t\t\t(scroll_state.y != new_scroll_state.y && dx > 2 * dy )) {\n\t\t\t\t\t\t\t\treturn block_action(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn block_action(e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}]);\n\n\n\t\t//block touch context menu in IE10\n\t\ttouchHandlers.push([this.$container, \"contextmenu\", function (e) {\n\t\t\tif (action_mode)\n\t\t\t\treturn block_action(e);\n\t\t}]);\n\n\t\t//touch start\n\t\ttouchHandlers.push([this.$container, names[1], function (e) {\n\t\t\tif (ignore(e)) return;\n\t\t\tif (e.touches && e.touches.length > 1) {\n\t\t\t\taction_mode = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taction_start = accessor(e);\n\t\t\tif (!gantt._locate_css(action_start, \"gantt_hor_scroll\") && !gantt._locate_css(action_start, \"gantt_ver_scroll\")) {\n\t\t\t\taction_mode = true;\n\t\t\t}\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\t//long tap\n\t\t\tlong_tap_timer = setTimeout(function () {\n\t\t\t\tvar taskId = gantt.locate(action_start);\n\t\t\t\tif (_tasks_dnd && (taskId && !gantt._locate_css(action_start, \"gantt_link_control\") && !gantt._locate_css(action_start, \"gantt_grid_data\"))) {\n\t\t\t\t\t_tasks_dnd.on_mouse_down(action_start);\n\n\t\t\t\t\tif (_tasks_dnd.drag && _tasks_dnd.drag.start_drag) {\n\t\t\t\t\t\tcloneTaskRendered(taskId);\n\t\t\t\t\t\t_tasks_dnd._start_dnd(action_start);\n\t\t\t\t\t\tgantt._touch_drag = true;\n\n\t\t\t\t\t\tgantt.refreshTask(taskId);\n\n\t\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlong_tap_timer = null;\n\t\t\t}, gantt.config.touch_drag);\n\t\t}]);\n\n\t\t//touch end\n\t\ttouchHandlers.push([this.$container, names[2], function (e) {\n\t\t\tif (ignore(e)) return;\n\t\t\tif (long_tap_timer) clearTimeout(long_tap_timer);\n\t\t\tgantt._touch_drag = false;\n\t\t\taction_mode = false;\n\t\t\tvar source = accessor(e);\n\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\tif(_tasks_dnd)\n\t\t\t\t_tasks_dnd.on_mouse_up(source);\n\n\t\t\tif (current_target) {\n\t\t\t\tgantt.refreshTask(gantt.locate(current_target));\n\t\t\t\tif (current_target.parentNode) {\n\t\t\t\t\tcurrent_target.parentNode.removeChild(current_target);\n\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgantt._touch_scroll_active = action_mode = scroll_mode = false;\n\t\t\tcurrent_target = null;\n\n\t\t\t//dbl-tap handling\n\t\t\tif (action_start && dblclicktime) {\n\t\t\t\tvar now = new Date();\n\t\t\t\tif ((now - dblclicktime) < 500) {\n\n\t\t\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\t\t\tmouseEvents.onDoubleClick(action_start);\n\t\t\t\t\tblock_action(e);\n\t\t\t\t} else\n\t\t\t\t\tdblclicktime = now;\n\t\t\t} else {\n\t\t\t\tdblclicktime = new Date();\n\t\t\t}\n\t\t}]);\n\n\t\tfor(var i = 0; i < touchHandlers.length; i++){\n\t\t\tgantt.event(touchHandlers[i][0], touchHandlers[i][1], touchHandlers[i][2]);\n\t\t}\n\n\t\t//common helper, prevents event\n\t\tfunction block_action(e) {\n\t\t\tif (e && e.preventDefault)\n\t\t\t\te.preventDefault();\n\t\t\t(e || event).cancelBubble = true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction cloneTaskRendered(taskId) {\n\t\t\tvar renders = gantt._getTaskLayers();\n\t\t\tvar task = gantt.getTask(taskId);\n\t\t\tif (task && gantt.isTaskVisible(taskId)) {\n\t\t\t\tfor (var i = 0; i < renders.length; i++) {\n\t\t\t\t\ttask = renders[i].rendered[taskId];\n\t\t\t\t\tif (task && task.getAttribute(gantt.config.task_attribute) && task.getAttribute(gantt.config.task_attribute) == taskId) {\n\t\t\t\t\t\tvar copy = task.cloneNode(true);\n\t\t\t\t\t\tcurrent_target = task;\n\t\t\t\t\t\trenders[i].rendered[taskId] = copy;\n\t\t\t\t\t\ttask.style.display = \"none\";\n\t\t\t\t\t\tcopy.className += \" gantt_drag_move \";\n\t\t\t\t\t\ttask.parentNode.appendChild(copy);\n\t\t\t\t\t\t//return copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n};", "module.exports = function(gantt) {\ngantt.skins[\"contrast_white\"] = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:100,\n\t_third_column_width:80\n};\n\n};", "module.exports = function(gantt) {\ngantt.skins[\"contrast_black\"] = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:100,\n\t_third_column_width:80\n};\n\n};", "module.exports = function(gantt) {\n\tgantt.skins.material = {\n\t\tconfig: {\n\t\t\tgrid_width: 411,\n\t\t\trow_height: 34,\n\t\t\ttask_height_offset: 6,\n\t\t\tscale_height: 36,\n\t\t\tlink_line_width: 2,\n\t\t\tlink_arrow_size: 6,\n\t\t\tlightbox_additional_height: 80\n\t\t},\n\t\t_second_column_width: 110,\n\t\t_third_column_width: 75,\n\t\t_redefine_lightbox_buttons: {\n\t\t\t\"buttons_left\": [\"dhx_delete_btn\"],\n\t\t\t\"buttons_right\": [\"dhx_save_btn\", \"dhx_cancel_btn\"]\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onAfterTaskDrag\", function (id) {\n\t\tvar t = gantt.getTaskNode(id);\n\t\tif (t) {\n\t\t\tt.className += \" gantt_drag_animation\";\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar indx = t.className.indexOf(\" gantt_drag_animation\");\n\t\t\t\tif (indx > -1) {\n\t\t\t\t\tt.className = t.className.slice(0, indx);\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t});\n\n};", "module.exports = function(gantt) {\n\tgantt.skins.broadway = {\n\t\tconfig: {\n\t\t\tgrid_width: 360,\n\t\t\trow_height: 35,\n\t\t\tscale_height: 35,\n\t\t\tlink_line_width: 1,\n\t\t\tlink_arrow_size: 7,\n\t\t\tlightbox_additional_height: 86\n\t\t},\n\t\t_second_column_width: 90,\n\t\t_third_column_width: 80,\n\n\t\t_lightbox_template: \"<div class='gantt_cal_ltitle'><span class='gantt_mark'>&nbsp;</span><span class='gantt_time'></span><span class='gantt_title'></span><div class='gantt_cancel_btn'></div></div><div class='gantt_cal_larea'></div>\",\n\t\t_config_buttons_left: {},\n\t\t_config_buttons_right: {\n\t\t\t\"gantt_delete_btn\": \"icon_delete\",\n\t\t\t\"gantt_save_btn\": \"icon_save\"\n\t\t}\n\t};\n};", "module.exports = function(gantt) {\ngantt.skins.terrace = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:90,\n\t_third_column_width:70\t\t\n};\n\n};", "module.exports = function(gantt) {\ngantt.skins.meadow = {\n\tconfig:{\n\t\tgrid_width:350,\n\t\trow_height: 27,\n\t\tscale_height: 30,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:72\n\t},\n\t_second_column_width:95,\n\t_third_column_width:80\n};\n\n};", "module.exports = function(gantt) {\ngantt.skins.skyblue = {\n\tconfig:{\n\t\tgrid_width:350,\n\t\trow_height: 27,\n\t\tscale_height: 27,\n\t\tlink_line_width:1,\n\t\tlink_arrow_size:8,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:95,\n\t_third_column_width:80\n};\n\n};", "function _configure(col, data, force) {\n\tfor (var key in data)\n\t\tif (typeof col[key] == \"undefined\" || force)\n\t\t\tcol[key] = data[key];\n}\n\nfunction _get_skin(force, gantt) {\n\tvar skin = gantt.skin;\n\tif (!skin || force) {\n\t\tvar links = document.getElementsByTagName(\"link\");\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar res = links[i].href.match(\"dhtmlxgantt_([a-z_]+).css\");\n\t\t\tif (res) {\n\t\t\t\tif (gantt.skins[res[1]] || !skin) {\n\t\t\t\t\tskin = res[1];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgantt.skin = skin || \"terrace\";\n\tvar skinset = gantt.skins[gantt.skin] || gantt.skins[\"terrace\"];\n\n\t//apply skin related settings\n\t_configure(gantt.config, skinset.config, force);\n\n\tvar config = gantt.getGridColumns();\n\tif (config[1] && !gantt.defined(config[1].width))\n\t\tconfig[1].width = skinset._second_column_width;\n\tif (config[2] && !gantt.defined(config[2].width))\n\t\tconfig[2].width = skinset._third_column_width;\n\t\n\tfor (var i=0; i<config.length; i++) {\n\t\tvar column = config[i];\n\t\tif (column.name == \"add\") {\n\t\t\tif(!column.width){\n\t\t\t\tcolumn.width = 44;\n\t\t\t}\n\t\t\tif (!(gantt.defined(column.min_width) && gantt.defined(column.max_width))) {\n\t\t\t\tcolumn.min_width = column.min_width || column.width;\n\t\t\t\tcolumn.max_width = column.max_width || column.width;\n\t\t\t}\n\t\t\tif (column.min_width)\n\t\t\t\tcolumn.min_width = +column.min_width;\n\t\t\tif (column.max_width)\n\t\t\t\tcolumn.max_width = +column.max_width;\n\t\t\tif (column.width) {\n\t\t\t\tcolumn.width = +column.width;\n\t\t\t\tcolumn.width = (column.min_width && column.min_width > column.width) ? column.min_width : column.width;\n\t\t\t\tcolumn.width = (column.max_width && column.max_width < column.width) ? column.max_width : column.width;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (skinset.config.task_height)\n\t\tgantt.config.task_height = skinset.config.task_height || \"full\"; \n\n\tif (skinset._lightbox_template)\n\t\tgantt._lightbox_template = skinset._lightbox_template;\n\n\tif (skinset._redefine_lightbox_buttons) {\n\t\tgantt.config.buttons_right = skinset._redefine_lightbox_buttons[\"buttons_right\"];\n\t\tgantt.config.buttons_left = skinset._redefine_lightbox_buttons[\"buttons_left\"];\n\t}\n\n\n\tgantt.resetLightbox();\n}\n\nmodule.exports = function(gantt) {\n\tif(!gantt.resetSkin){\n\t\tgantt.resetSkin = function () {\n\t\t\tthis.skin = \"\";\n\t\t\t_get_skin(true, this);\n\t\t};\n\t\tgantt.skins = {};\n\n\t\tgantt.attachEvent(\"onGanttLayoutReady\", function(){\n\t\t\t_get_skin(false, this);\n\t\t});\n\t}\n};", "/*\n reuse results of functions that can be recalculated during rendering\n greatly increases the rendering speed when critical path enabled\n Sample - 94_dev/critical_path.html\n\n */\nmodule.exports = function(gantt){\n\ngantt._cached_functions = {\n\tcache: {},\n\tmode: false,\n\tcritical_path_mode: false,\n\twrap_methods : function(methods, object){\n\t\tif(object._prefetch_originals){\n\t\t\tfor(var i in object._prefetch_originals){\n\t\t\t\tobject[i] = object._prefetch_originals[i];\n\t\t\t}\n\t\t}\n\t\tobject._prefetch_originals = {};\n\t\tfor(var i = 0; i < methods.length; i++)\n\t\t\tthis.prefetch(methods[i], object);\n\n\t},\n\tprefetch : function(methodname, host){\n\t\tvar original = host[methodname];\n\t\tif(original){\n\t\t\tvar optimizer = this;\n\n\t\t\thost._prefetch_originals[methodname] = original;\n\t\t\thost[methodname] = function get_prefetched_value(){\n\n\t\t\t\tvar argumentsArray = new Array(arguments.length);\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\t\targumentsArray[i] = arguments[i];\n\t\t\t\t}\n\n\t\t\t\tif(optimizer.active){\n\t\t\t\t\tvar args = optimizer.get_arguments_hash(Array.prototype.slice.call(argumentsArray));\n\t\t\t\t\tif(!optimizer.cache[methodname]){\n\t\t\t\t\t\toptimizer.cache[methodname] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cached_values = optimizer.cache[methodname];\n\n\t\t\t\t\tif(optimizer.has_cached_value(cached_values, args)){\n\t\t\t\t\t\treturn optimizer.get_cached_value(cached_values, args);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar value = original.apply(this, argumentsArray);\n\t\t\t\t\t\toptimizer.cache_value(cached_values, args, value);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn original.apply(this, argumentsArray);\n\t\t\t};\n\t\t}\n\t\treturn original;\n\t},\n\tcache_value: function(cache, arguments_hash, value){\n\t\tif(this.is_date(value))\n\t\t\tvalue = new Date(value);\n\t\tcache[arguments_hash] = value;\n\t},\n\thas_cached_value: function(cache, arguments_hash){\n\t\treturn cache.hasOwnProperty(arguments_hash);\n\t},\n\tget_cached_value: function(cache, arguments_hash){\n\t\tvar data = cache[arguments_hash];\n\n\t\t//for cached dates - return copy\n\t\tif(this.is_date(data)){\n\t\t\tdata = new Date(data);\n\t\t}\n\t\treturn data;\n\t},\n\tis_date: function(value){\n\t\treturn (value && value.getUTCDate);\n\t},\n\tget_arguments_hash:function(args){\n\t\tvar values = [];\n\t\tfor(var i = 0; i < args.length; i++){\n\t\t\tvalues.push(this.stringify_argument(args[i]));\n\t\t}\n\t\treturn \"(\" + values.join(\";\") + \")\";\n\t},\n\tstringify_argument: function(value){\n\t\t//expecting task or link, or any other data entries, dates and primitive values\n\t\tvar ret = \"\";\n\t\tif(value.id){\n\t\t\tret = value.id;\n\t\t}else if(this.is_date(value)){\n\t\t\tret = value.valueOf();\n\t\t}else{\n\t\t\tret = value;\n\t\t}\n\t\treturn ret + \"\";\n\t},\n\tactivate: function(){\n\t\tthis.clear();\n\t\tthis.active = true;\n\t},\n\tdeactivate: function(){\n\t\tthis.clear();\n\t\tthis.active = false;\n\t},\n\tclear: function(){\n\t\tthis.cache = {};\n\t},\n\n\tsetup: function(gantt){\n\t\tvar override_gantt = [];\n\n\t\tvar gantt_methods  = [\n\t\t\t'_isProjectEnd',\n\t\t\t'_getProjectEnd',\n\t\t\t'_getSlack'\n\t\t];\n\n\n\n\t\tif(this.mode == 'auto'){\n\t\t\tif(gantt.config.highlight_critical_path){\n\t\t\t\toverride_gantt = gantt_methods;\n\t\t\t}\n\t\t}else if(this.mode === true){\n\t\t\toverride_gantt = gantt_methods;\n\t\t}\n\n\t\tthis.wrap_methods(override_gantt, gantt);\n\n\t},\n\tupdate_if_changed: function(gantt){\n\t\tvar changed = (this.critical_path_mode != gantt.config.highlight_critical_path ||\n\t\t\t\t\t\tthis.mode !== gantt.config.optimize_render);\n\t\tif(changed){\n\t\t\tthis.critical_path_mode = gantt.config.highlight_critical_path;\n\t\t\tthis.mode = gantt.config.optimize_render;\n\t\t\tthis.setup(gantt);\n\t\t}\n\t}\n};\n\nfunction activate(){\n\tgantt._cached_functions.update_if_changed(gantt);\n\tif(!gantt._cached_functions.active){\n\t\tgantt._cached_functions.activate();\n\t}\n\treturn true;\n}\ngantt.attachEvent(\"onBeforeGanttRender\", activate);\ngantt.attachEvent(\"onBeforeDataRender\", activate);\ngantt.attachEvent(\"onBeforeSmartRender\",  function(){\n\tactivate();\n});\ngantt.attachEvent(\"onBeforeParse\", activate);\ngantt.attachEvent(\"onDataRender\", function(){\n\tgantt._cached_functions.deactivate();\n});\nvar deactivTimeout = null;\ngantt.attachEvent(\"onSmartRender\", function(){\n\tif(deactivTimeout)\n\t\tclearTimeout(deactivTimeout);\n\tdeactivTimeout = setTimeout(function(){\n\t\tgantt._cached_functions.deactivate();\n\t}, 1000);\n});\n\ngantt.attachEvent(\"onBeforeGanttReady\", function(){\n\tgantt._cached_functions.update_if_changed(gantt);\n\treturn true;\n});\n\n};", "module.exports = function(gantt) {\n\n\tgantt.getTaskType = function (type) {\n\t\treturn \"task\";\n\t};\n};", "module.exports = function(gantt) {\n\n\tgantt._extend_to_optional = function (lightbox_block) {\n\n\t\tvar duration = lightbox_block;\n\t\tvar optional_time = {\n\t\t\trender: duration.render,\n\t\t\tfocus: duration.focus,\n\t\t\tset_value: function (node, value, task, section) {\n\t\t\t\tvar mapping = gantt._resolve_default_mapping(section);\n\t\t\t\tif (!task[mapping.start_date] || (mapping.start_date == \"start_date\" && this._isAllowedUnscheduledTask(task))) {\n\t\t\t\t\toptional_time.disable(node, section);\n\t\t\t\t\tvar val = {};\n\n\t\t\t\t\tfor (var i in mapping) {\n\t\t\t\t\t\t//take default values from the time control from task start/end dates\n\t\t\t\t\t\tval[mapping[i]] = task[i];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn duration.set_value.call(gantt, node, value, val, section);//set default value\n\t\t\t\t} else {\n\t\t\t\t\toptional_time.enable(node, section);\n\t\t\t\t\treturn duration.set_value.call(gantt, node, value, task, section);\n\t\t\t\t}\n\t\t\t},\n\t\t\tget_value: function (node, task, section) {\n\t\t\t\tif (section.disabled) {\n\t\t\t\t\treturn {start_date: null};\n\t\t\t\t} else {\n\t\t\t\t\treturn duration.get_value.call(gantt, node, task, section);\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate_block: function (node, section) {\n\t\t\t\tgantt.callEvent(\"onSectionToggle\", [gantt._lightbox_id, section]);\n\t\t\t\tnode.style.display = section.disabled ? \"none\" : \"block\";\n\n\t\t\t\tif (section.button) {\n\t\t\t\t\tvar button = node.previousSibling.querySelector(\".gantt_custom_button_label\"),\n\t\t\t\t\t\tlabels = gantt.locale.labels;\n\n\t\t\t\t\tvar button_text = section.disabled ? labels[section.name + \"_enable_button\"] : labels[section.name + \"_disable_button\"];\n\n\t\t\t\t\tbutton.innerHTML = button_text;\n\t\t\t\t}\n\t\t\t\tgantt.resizeLightbox();\n\t\t\t},\n\t\t\tdisable: function (node, section) {\n\t\t\t\tsection.disabled = true;\n\t\t\t\toptional_time.update_block(node, section);\n\n\t\t\t},\n\t\t\tenable: function (node, section) {\n\t\t\t\tsection.disabled = false;\n\t\t\t\toptional_time.update_block(node, section);\n\t\t\t},\n\t\t\tbutton_click: function (index, el, section, container) {\n\t\t\t\tif (gantt.callEvent(\"onSectionButton\", [gantt._lightbox_id, section]) === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar config = gantt._get_typed_lightbox_config()[index];\n\t\t\t\tif (config.disabled) {\n\t\t\t\t\toptional_time.enable(container, config);\n\t\t\t\t} else {\n\t\t\t\t\toptional_time.disable(container, config);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn optional_time;\n\t};\n\n\tgantt.form_blocks.duration_optional = gantt._extend_to_optional(gantt.form_blocks.duration);\n\tgantt.form_blocks.time_optional = gantt._extend_to_optional(gantt.form_blocks.time);\n\n};", "var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./select_control\")(gantt);\n\n\tfunction ParentControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\n\t\treturn self; \n\t}\n\n\t__extends(ParentControl, _super);\n\n\n\tParentControl.prototype.render = function(sns) {\n\t\treturn _display(sns, false);\n\t};\n\n\tParentControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar tmpDom = document.createElement(\"div\");\n\t\ttmpDom.innerHTML = _display(config, ev.id);\n\t\tvar newOptions = tmpDom.removeChild(tmpDom.firstChild);\n\t\tnode.onselect = null;\n\t\tnode.parentNode.replaceChild(newOptions, node);\n\n\t\treturn gantt.form_blocks.select.set_value.apply(gantt, [newOptions, value, ev, config]);\n\t};\n\n\tfunction _display(config, item_id) {\n\t\tvar tasks = [],\n\t\t\toptions = [];\n\t\tif (item_id) {\n\t\t\ttasks = gantt.getTaskByTime();\n\t\t\tif (config.allow_root) {\n\t\t\t\ttasks.unshift({id: gantt.config.root_id, text: config.root_label || \"\"});\n\t\t\t}\n\t\t\ttasks = _filter(tasks, config, item_id);\n\t\t\tif (config.sort) {\n\t\t\t\ttasks.sort(config.sort);\n\t\t\t}\n\t\t}\n\t\tvar text = config.template || gantt.templates.task_text;\n\t\tfor (var i = 0; i < tasks.length; i++) {\n\t\t\tvar label = text.apply(gantt, [tasks[i].start_date, tasks[i].end_date, tasks[i]]);\n\t\t\tif (label === undefined) {\n\t\t\t\tlabel = \"\";\n\t\t\t}\n\t\t\toptions.push({\n\t\t\t\tkey: tasks[i].id,\n\t\t\t\tlabel: label\n\t\t\t});\n\t\t}\n\t\tconfig.options = options;\n\t\tconfig.map_to = config.map_to || \"parent\";\n\t\treturn gantt.form_blocks.select.render.apply(this, arguments);\n\t}\n\n\tfunction _filter(options, config, item_id) {\n\t\tvar filter = config.filter || function() {\n\t\t\treturn true;\n\t\t};\n\n\t\toptions = options.slice(0);\n\n\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\tvar task = options[i];\n\t\t\tif (task.id == item_id || gantt.isChildOf(task.id, item_id) || filter(task.id, task) === false) {\n\t\t\t\toptions.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\treturn options;\n\t}\n\treturn ParentControl;\n};", "var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction DurationControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\n\t\treturn self; \n\t}\n\n\t__extends(DurationControl, _super);\n\n\tDurationControl.prototype.render = function(sns) {\n\t\tvar time = \"<div class='gantt_time_selects'>\" + gantt.form_blocks.getTimePicker.call(this, sns) + \"</div>\";\n\t\tvar label = gantt.locale.labels[gantt.config.duration_unit + \"s\"];\n\t\tvar singleDate = sns.single_date ? \" style='display:none'\" : \"\";\n\t\tvar readonly = sns.readonly ? \" disabled='disabled'\" : \"\";\n\t\tvar ariaAttr = gantt._waiAria.lightboxDurationInputAttrString(sns);\n\t\tvar duration = \"<div class='gantt_duration' \" + singleDate + \">\" +\n\t\t\t\"<input type='button' class='gantt_duration_dec' value='−'\" + readonly + \">\" +\n\t\t\t\"<input type='text' value='5' class='gantt_duration_value'\" + readonly + \" \" + ariaAttr + \">\" +\n\t\t\t\"<input type='button' class='gantt_duration_inc' value='+'\" + readonly + \"> \" + label + \" <span></span>\" +\n\t\t\t\"</div>\";\n\t\tvar html = \"<div style='height:\" + (sns.height || 30) + \"px;padding-top:0px;font-size:inherit;' class='gantt_section_time'>\" + time + \" \" + duration + \"</div>\";\n\t\treturn html;\n\t};\n\n\tDurationControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar cfg = config;\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar inps = node.getElementsByTagName(\"input\");\n\t\tvar duration = inps[1];\n\t\tvar btns = [inps[0], inps[2]];\n\t\tvar endspan = node.getElementsByTagName(\"span\")[0];\n\t\tvar map = config._time_format_order;\n\t\tvar mapping;\n\t\tvar start_date;\n\t\tvar end_date;\n\t\tvar duration_val;\n\n\t\tfunction _calc_date() {\n\t\t\tvar start_date = _getStartDate.call(gantt, node, config);\n\t\t\tvar duration = _getDuration.call(gantt, node, config);\n\t\t\tvar end_date = gantt.calculateEndDate({start_date: start_date, duration: duration, task: ev});\n\n\t\t\tendspan.innerHTML = gantt.templates.task_date(end_date);\n\t\t}\n\n\t\tfunction _change_duration(step) {\n\t\t\tvar value = duration.value;\n\n\t\t\tvalue = parseInt(value, 10);\n\t\t\tif (window.isNaN(value))\n\t\t\t\tvalue = 0;\n\t\t\tvalue += step;\n\t\t\tif (value < 1) value = 1;\n\t\t\tduration.value = value;\n\t\t\t_calc_date();\n\t\t}\n\n\t\tbtns[0].onclick = gantt.bind(function() {\n\t\t\t_change_duration(-1 * gantt.config.duration_step);\n\t\t}, this);\n\t\tbtns[1].onclick = gantt.bind(function() {\n\t\t\t_change_duration(1 * gantt.config.duration_step);\n\t\t}, this);\n\t\ts[0].onchange = _calc_date;\n\t\ts[1].onchange = _calc_date;\n\t\ts[2].onchange = _calc_date;\n\t\tif (s[3]) s[3].onchange = _calc_date;\n\n\t\tduration.onkeydown = gantt.bind(function(e) {\n\t\t\tvar code; \n\n\t\t\te = e || window.event;\n\t\t\tcode = (e.charCode || e.keyCode || e.which);\n\t\t\t\n\t\t\tif (code == gantt.constants.KEY_CODES.DOWN) {\n\t\t\t\t_change_duration(-1 * gantt.config.duration_step);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (code == gantt.constants.KEY_CODES.UP) {\n\t\t\t\t_change_duration(1 * gantt.config.duration_step);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\twindow.setTimeout(_calc_date, 1);\n\t\t}, this);\n\n\t\tduration.onchange = gantt.bind(_calc_date, this);\n\n\t\tmapping = gantt._resolve_default_mapping(config);\n\t\tif (typeof(mapping) === \"string\") mapping = {start_date: mapping};\n\n\t\tstart_date = ev[mapping.start_date] || new Date();\n\t\tend_date = ev[mapping.end_date] || gantt.calculateEndDate({\n\t\t\tstart_date: start_date,\n\t\t\tduration: 1,\n\t\t\ttask: ev\n\t\t});\n\t\tduration_val = Math.round(ev[mapping.duration]) || gantt.calculateDuration({\n\t\t\tstart_date: start_date,\n\t\t\tend_date: end_date,\n\t\t\ttask: ev\n\t\t});\n\n\t\tgantt.form_blocks._fill_lightbox_select(s, 0, start_date, map, cfg);\n\t\tduration.value = duration_val;\n\t\t_calc_date();\n\t};\n\n\tDurationControl.prototype.get_value = function(node, ev, config) {\n\t\tvar startDate = _getStartDate(node, config);\n\t\tvar duration = _getDuration(node, config);\n\t\tvar endDate = gantt.calculateEndDate({start_date: startDate, duration: duration, task: ev});\n\n\t\tif (typeof gantt._resolve_default_mapping(config) == \"string\") {\n\t\t\treturn startDate;\n\t\t}\n\n\t\treturn {\n\t\t\tstart_date: startDate,\n\t\t\tend_date: endDate,\n\t\t\tduration: duration\n\t\t};\n\t};\n\n\tDurationControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.getElementsByTagName(\"select\")[0]);\n\t};\n\n\n\tfunction _getStartDate(node, config) {\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\t\tvar hours = 0;\n\t\tvar minutes = 0;\n\n\t\tif (gantt.defined(map[3])) {\n\t\t\tvar input = s[map[3]];\n\t\t\tvar time = parseInt(input.value, 10);\n\t\t\tif (isNaN(time) && input.hasAttribute(\"data-value\")) {\n\t\t\t\ttime = parseInt(input.getAttribute(\"data-value\"), 10);\n\t\t\t}\n\n\t\t\thours = Math.floor(time / 60);\n\t\t\tminutes = time % 60;\n\t\t}\n\t\treturn new Date(s[map[2]].value, s[map[1]].value, s[map[0]].value, hours, minutes);\n\t}\n\n\tfunction _getDuration(node) {\n\t\tvar duration = node.getElementsByTagName(\"input\")[1];\n\n\t\tduration = parseInt(duration.value, 10);\n\t\tif (!duration || window.isNaN(duration)) duration = 1;\n\t\tif (duration < 0) duration *= -1;\n\t\treturn duration;\n\t}\n\n\n\treturn DurationControl; \n};", "var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction RadioControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(RadioControl, _super);\n\n\tRadioControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\tif (sns.options && sns.options.length) {\n\t\t\tfor (var i = 0; i < sns.options.length; i++) {\n\t\t\t\thtml += \"<label><input type='radio' value='\" + sns.options[i].key + \"' name='\" + sns.name + \"'>\" + sns.options[i].label + \"</label>\";\n\t\t\t}\n\t\t}\n\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tRadioControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar radio;\n\n\t\tif (!sns.options || !sns.options.length) return;\n\n\t\tradio = node.querySelector(\"input[type=radio][value='\" + value + \"']\") ||\n\t\t\t\tnode.querySelector(\"input[type=radio][value='\" + sns.default_value + \"']\");\n\n\t\tif (!radio) return;\n\n\t\tif (!node._dhx_onchange && sns.onchange) {\n\t\t\tnode.onchange = sns.onchange;\n\t\t\tnode._dhx_onchange = true;\n\t\t}\n\n\t\tradio.checked = true;\n\t};\n\n\tRadioControl.prototype.get_value = function(node, ev) {\n\t\tvar result = node.querySelector(\"input[type=radio]:checked\");\n\n\t\treturn result ? result.value : \"\";\n\t};\n\n\tRadioControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.querySelector(\"input[type=radio]\"));\n\t};\n\n\treturn RadioControl;\n};", "var helpers = require(\"../../../utils/helpers\");\nvar __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction CheckboxControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(CheckboxControl, _super);\n\n\tCheckboxControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\tif (sns.options && sns.options.length) {\n\t\t\tfor (var i = 0; i < sns.options.length; i++) {\n\t\t\t\thtml += \"<label><input type='checkbox' value='\" + sns.options[i].key + \"' name='\" + sns.name + \"'>\" + sns.options[i].label + \"</label>\";\n\t\t\t}\n\t\t}\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tCheckboxControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar checkboxes = Array.prototype.slice.call(node.querySelectorAll(\"input[type=checkbox]\"));\n\n\t\tif (!node._dhx_onchange && sns.onchange) {\n\t\t\tnode.onchange = sns.onchange;\n\t\t\tnode._dhx_onchange = true;\n\t\t}\n\n\t\thelpers.forEach(checkboxes, function(entry) {\n\t\t\tentry.checked = value ? value.indexOf(entry.value) >= 0 : false;\n\t\t});\n\t};\n\n\tCheckboxControl.prototype.get_value = function(node) {\n\t\treturn helpers.arrayMap(Array.prototype.slice.call(node.querySelectorAll(\"input[type=checkbox]:checked\")), function(entry) {\n\t\t\treturn entry.value;\n\t\t});\n\t};\n\n\tCheckboxControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.querySelector(\"input[type=checkbox]\"));\n\t};\n\n\treturn CheckboxControl;\n};", "var helpers = require(\"./helpers\");\n\nvar htmlHelpers = {\n\tgetHtmlSelect: function(options, attributes, value) {\n\t\tvar innerHTML = \"\";\n\t\tvar _this = this;\n\n\t\toptions = options || [];\n\t\t\n\t\thelpers.forEach(options, function(entry) {\n\t\t\tvar _attributes = [{ key: \"value\", value: entry.key }];\n\n\t\t\tif (value == entry.key) {\n\t\t\t\t_attributes[_attributes.length] = { key: \"selected\", value: \"selected\" };\n\t\t\t}\n\t\t\tif (entry.attributes) {\n\t\t\t\t_attributes = _attributes.concat(entry.attributes);\n\t\t\t}\n\t\t\tinnerHTML += _this.getHtmlOption({ innerHTML: entry.label }, _attributes);\n\t\t});\n\n\t\treturn _getHtmlContainer(\"select\", { innerHTML: innerHTML }, attributes);\n\t},\n\tgetHtmlOption: function(options, attributes) { return _getHtmlContainer(\"option\", options, attributes); },\n\tgetHtmlButton: function(options, attributes) { return _getHtmlContainer(\"button\", options, attributes); },\n\tgetHtmlDiv: function(options, attributes) { return _getHtmlContainer(\"div\", options, attributes); },\n\tgetHtmlLabel: function(options, attributes) { return _getHtmlContainer(\"label\", options, attributes); },\n\tgetHtmlInput: function(attributes) {\n\t\treturn \"<input\" + _getHtmlAttributes(attributes || []) + \">\";\n\t}\n};\n\nfunction _getHtmlContainer(tag, options, attributes) {\n\tvar html;\n\n\toptions = options || [];\n\t\n\thtml = \"<\" + tag + _getHtmlAttributes(attributes || []) + \">\" + (options.innerHTML || \"\") + \"</\" + tag +\">\";\n\treturn html;\n\n}\n\nfunction _getHtmlAttributes(attributes) {\n\tvar html = \"\";\n\n\thelpers.forEach(attributes, function(entry) {\n\t\thtml += \" \" + entry.key + \"='\" + entry.value + \"'\";\n\t});\n\treturn html;\n}\n\nmodule.exports = htmlHelpers;", "var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TimeControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(TimeControl, _super);\n\n\n\tTimeControl.prototype.render = function(sns) {\n\t\tvar time = gantt.form_blocks.getTimePicker.call(this, sns);\n\t\tvar html = \"<div style='height:\" + (sns.height || 30) + \"px;padding-top:0px;font-size:inherit;text-align:center;' class='gantt_section_time'>\";\n\t\thtml += time;\n\n\t\tif (sns.single_date) {\n\t\t\ttime = gantt.form_blocks.getTimePicker.call(this, sns, true);\n\t\t\thtml += \"<span></span>\";\n\t\t} else {\n\t\t\thtml += \"<span style='font-weight:normal; font-size:10pt;'> &nbsp;&ndash;&nbsp; </span>\";\n\t\t}\n\n\t\thtml += time;\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tTimeControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar cfg = config;\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\n\t\tif (cfg.auto_end_date) {\n\t\t\tvar _update_lightbox_select = function() {\n\t\t\t\tstart_date = new Date(s[map[2]].value, s[map[1]].value, s[map[0]].value, 0, 0);\n\t\t\t\tend_date = gantt.calculateEndDate({start_date: start_date, duration: 1, task: ev});\n\t\t\t\tgantt.form_blocks._fill_lightbox_select(s, map.size, end_date, map, cfg);\n\t\t\t};\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\ts[i].onchange = _update_lightbox_select;\n\t\t\t}\n\t\t}\n\n\t\tvar mapping = gantt._resolve_default_mapping(config);\n\n\t\tif (typeof(mapping) === \"string\") mapping = {start_date: mapping};\n\n\t\tvar start_date = ev[mapping.start_date] || new Date();\n\t\tvar end_date = ev[mapping.end_date] || gantt.calculateEndDate({\n\t\t\tstart_date: start_date,\n\t\t\tduration: 1,\n\t\t\ttask: ev\n\t\t});\n\n\t\tgantt.form_blocks._fill_lightbox_select(s, 0, start_date, map, cfg);\n\t\tgantt.form_blocks._fill_lightbox_select(s, map.size, end_date, map, cfg);\n\t};\n\n\tTimeControl.prototype.get_value = function(node, ev, config) {\n\t\tvar selects = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\t\tvar needSetTime = gantt.defined(map[3]);\n\t\tvar startDate;\n\n\t\tfunction _getEndDate(selects, map, needSetTime, startDate) {\n\t\t\tvar endDate = _getDate(selects, map, needSetTime, map.size);\n\n\t\t\tif (endDate <= startDate) {\n\t\t\t\treturn gantt.date.add(startDate, gantt._get_timepicker_step(), \"minute\");\n\t\t\t}\n\t\t\treturn endDate;\n\t\t}\n\n\t\tfunction _getDate(selects, map, needSetTime, mapOffset) {\n\t\t\tvar time;\n\t\t\tvar hours = 0;\n\t\t\tvar minutes = 0;\n\n\t\t\tmapOffset = mapOffset || 0;\n\n\t\t\tif (needSetTime) {\n\t\t\t\ttime = parseInt(selects[map[3] + mapOffset].value, 10);\n\t\t\t\thours = Math.floor(time / 60);\n\t\t\t\tminutes = time % 60;\n\t\t\t}\n\t\t\treturn new Date(selects[map[2] + mapOffset].value, selects[map[1] + mapOffset].value, selects[map[0] + mapOffset].value, hours, minutes);\n\t\t}\n\n\t\tstartDate = _getDate(selects, map, needSetTime);\n\n\t\tif (typeof gantt._resolve_default_mapping(config) === \"string\") {\n\t\t\treturn startDate;\n\t\t}\n\n\t\treturn {\n\t\t\tstart_date: startDate,\n\t\t\tend_date: _getEndDate(selects, map, needSetTime, startDate)\n\t\t};\n\t};\n\n\tTimeControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.getElementsByTagName(\"select\")[0]);\n\t};\n\n\treturn TimeControl;\n};", "var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TextareaControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(TextareaControl, _super);\n\n\tTextareaControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"130\") + \"px\";\n\t\treturn \"<div class='gantt_cal_ltext' style='height:\" + height + \";'><textarea></textarea></div>\";\n\t};\n\n\tTextareaControl.prototype.set_value = function(node, value) {\n\t\tgantt.form_blocks.textarea._get_input(node).value = value || \"\";\n\t};\n\n\tTextareaControl.prototype.get_value = function(node) {\n\t\treturn gantt.form_blocks.textarea._get_input(node).value;\n\t};\n\n\tTextareaControl.prototype.focus = function(node) {\n\t\tvar a = gantt.form_blocks.textarea._get_input(node);\n\t\tgantt._focus(a, true);\n\t};\n\n\tTextareaControl.prototype._get_input = function(node) {\n\t\treturn node.querySelector(\"textarea\");\n\t};\n\n\treturn TextareaControl;\n};", "var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TemplateControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\t\treturn self; \n\t}\n\n\t__extends(TemplateControl, _super);\n\n\n\tTemplateControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"30\") + \"px\";\n\t\treturn \"<div class='gantt_cal_ltext gantt_cal_template' style='height:\" + height + \";'></div>\";\n\t};\n\n\tTemplateControl.prototype.set_value = function(node, value) {\n\t\tnode.innerHTML = value || \"\";\n\t};\n\n\tTemplateControl.prototype.get_value = function(node) {\n\t\treturn node.innerHTML || \"\";\n\t};\n\n\tTemplateControl.prototype.focus = function() {};\n\n\treturn TemplateControl;\n};", "module.exports = function(gantt) {\n\tvar domHelpers = require(\"../../utils/dom_helpers\");\n\tvar helpers = require(\"../../utils/helpers\");\n\n\tvar TemplateControl = require(\"./controls/template_control\")(gantt);\n\tvar TextareaControl = require(\"./controls/textarea_control\")(gantt);\n\tvar TimeControl = require(\"./controls/time_control\")(gantt);\n\tvar SelectControl = require(\"./controls/select_control\")(gantt);\n\tvar CheckboxControl = require(\"./controls/checkbox_control\")(gantt);\n\tvar RadioControl = require(\"./controls/radio_control\")(gantt);\n\tvar DurationControl = require(\"./controls/duration_control\")(gantt);\n\tvar ParentControl = require(\"./controls/parent_control\")(gantt);\n\tvar ResourcesControl = require(\"./controls/resources_control\")(gantt);\n\n\n\tgantt._lightbox_methods = {};\n\tgantt._lightbox_template = \"<div class='gantt_cal_ltitle'><span class='gantt_mark'>&nbsp;</span><span class='gantt_time'></span><span class='gantt_title'></span></div><div class='gantt_cal_larea'></div>\";\n\n\n\t//TODO: gantt._lightbox_id is changed from data.js and accessed from autoscheduling, check if it can be removed from gantt object\n\tvar state = gantt.$services.getService(\"state\");\n\tstate.registerProvider(\"lightbox\", function(){\n\t\treturn {\n\t\t\tlightbox: gantt._lightbox_id\n\t\t};\n\t});\n\n\tgantt.showLightbox = function(id) {\n\t\tif (!id || gantt.isReadonly(this.getTask(id))) return;\n\t\tif (!this.callEvent(\"onBeforeLightbox\", [id])) return;\n\n\t\tvar task = this.getTask(id);\n\n\t\tvar box = this.getLightbox(this.getTaskType(task.type));\n\t\tthis._center_lightbox(box);\n\t\tthis.showCover();\n\t\tthis._fill_lightbox(id, box);\n\n\t\tthis._waiAria.lightboxVisibleAttr(box);\n\n\t\tthis.callEvent(\"onLightbox\", [id]);\n\t};\n\n\tfunction _is_chart_visible(gantt) {\n\t\tvar timeline = gantt.$ui.getView(\"timeline\");\n\t\tif(timeline && timeline.isVisible()){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgantt._get_timepicker_step = function() {\n\t\tif (this.config.round_dnd_dates) {\n\t\t\tvar step;\n\t\t\tif (_is_chart_visible(this)) {\n\t\t\t\tvar scale = gantt.getScale();\n\t\t\t\tstep = (helpers.getSecondsInUnit(scale.unit) * scale.step) / 60;//timepicker step is measured in minutes\n\t\t\t}\n\n\t\t\tif(!step || step >= 60 * 24){\n\t\t\t\tstep = this.config.time_step;\n\t\t\t}\n\t\t\treturn step;\n\t\t}\n\t\treturn this.config.time_step;\n\t};\n\tgantt.getLabel = function(property, key) {\n\t\tvar sections = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < sections.length; i++) {\n\t\t\tif (sections[i].map_to == property) {\n\t\t\t\tvar options = sections[i].options;\n\t\t\t\tfor (var j = 0; j < options.length; j++) {\n\t\t\t\t\tif (options[j].key == key) {\n\t\t\t\t\t\treturn options[j].label;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t};\n\n\tgantt.updateCollection = function(list_name, collection) {\n\t\tcollection = collection.slice(0);\n\t\tvar list = gantt.serverList(list_name);\n\t\tif (!list) return false;\n\t\tlist.splice(0, list.length);\n\t\tlist.push.apply(list, collection || []);\n\t\tgantt.resetLightbox();\n\t};\n\tgantt.getLightboxType = function() {\n\t\treturn this.getTaskType(this._lightbox_type);\n\t};\n\tgantt.getLightbox = function(type) {\n\t\tvar lightboxDiv;\n\t\tvar fullWidth;\n\t\tvar html;\n\t\tvar sns;\n\t\tvar ds;\n\t\tvar classNames = \"\";\n\n\t\tif (type === undefined)\n\t\t\ttype = this.getLightboxType();\n\n\t\tif (!this._lightbox || this.getLightboxType() != this.getTaskType(type)) {\n\t\t\tthis._lightbox_type = this.getTaskType(type);\n\t\t\tlightboxDiv = document.createElement(\"div\");\n\t\t\tclassNames = \"gantt_cal_light\";\n\t\t\tfullWidth = this._is_lightbox_timepicker();\n\n\t\t\tif (gantt.config.wide_form || fullWidth)\n\t\t\t\tclassNames += \" gantt_cal_light_wide\";\n\n\t\t\tif (fullWidth) {\n\t\t\t\tgantt.config.wide_form = true;\n\t\t\t\tclassNames += \" gantt_cal_light_full\";\n\t\t\t}\n\n\t\t\tlightboxDiv.className = classNames;\n\n\t\t\tlightboxDiv.style.visibility = \"hidden\";\n\t\t\thtml = this._lightbox_template;\n\n\t\t\thtml += getHtmlButtons(this.config.buttons_left);\n\t\t\thtml += getHtmlButtons(this.config.buttons_right, true);\n\n\t\t\tlightboxDiv.innerHTML = html;\n\n\t\t\tgantt._waiAria.lightboxAttr(lightboxDiv);\n\n\t\t\tif (gantt.config.drag_lightbox) {\n\t\t\t\tlightboxDiv.firstChild.onmousedown = gantt._ready_to_dnd;\n\t\t\t\tlightboxDiv.firstChild.onselectstart = function() {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t\tlightboxDiv.firstChild.style.cursor = \"pointer\";\n\t\t\t\tgantt._init_dnd_events();\n\t\t\t}\n\n\t\t\tdocument.body.insertBefore(lightboxDiv, document.body.firstChild);\n\t\t\tthis._lightbox = lightboxDiv;\n\n\t\t\tsns = this._get_typed_lightbox_config(type);\n\t\t\thtml = this._render_sections(sns);\n\n\t\t\tds = lightboxDiv.querySelector(\"div.gantt_cal_larea\");\n\t\t\tds.innerHTML = html;\n\n\t\t\tbindLabelsToInputs(sns);\n\n\t\t\t//sizes\n\t\t\tthis.resizeLightbox();\n\n\t\t\tthis._init_lightbox_events(this);\n\t\t\tlightboxDiv.style.display = \"none\";\n\t\t\tlightboxDiv.style.visibility = \"visible\";\n\t\t}\n\t\treturn this._lightbox;\n\t};\n\n\tgantt._render_sections = function(sns) {\n\t\tvar html = \"\";\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar block = this.form_blocks[sns[i].type];\n\t\t\tif (!block) continue; //ignore incorrect blocks\n\t\t\tsns[i].id = \"area_\" + this.uid();\n\n\t\t\tvar display = sns[i].hidden ? \" style='display:none'\" : \"\";\n\t\t\tvar button = \"\";\n\t\t\tif (sns[i].button) {\n\t\t\t\tbutton = \"<div class='gantt_custom_button' data-index='\" + i + \"'><div class='gantt_custom_button_\" + sns[i].button + \"'></div><div class='gantt_custom_button_label'>\" + this.locale.labels[\"button_\" + sns[i].button] + \"</div></div>\";\n\t\t\t}\n\t\t\tif (this.config.wide_form) {\n\t\t\t\thtml += \"<div class='gantt_wrap_section' \" + display + \">\";\n\t\t\t}\n\t\t\thtml += \"<div id='\" + sns[i].id + \"' class='gantt_cal_lsection'><label>\" + button + this.locale.labels[\"section_\" + sns[i].name] + \"</label></div>\" + block.render.call(this, sns[i]);\n\t\t\thtml += \"</div>\";\n\t\t}\n\t\treturn html;\n\t};\n\n\n\tgantt.resizeLightbox = function() {\n\t\tif (!this._lightbox) return;\n\n\t\tvar con = this._lightbox.childNodes[1];\n\t\tcon.style.height = \"0px\";\n\t\tcon.style.height = con.scrollHeight + \"px\";\n\t\tthis._lightbox.style.height = con.scrollHeight + this.config.lightbox_additional_height + \"px\";\n\t\tcon.style.height = con.scrollHeight + \"px\"; //it is incredible , how ugly IE can be\n\t};\n\n\tgantt._center_lightbox = function(box) {\n\t\tif (box) {\n\t\t\tbox.style.display = \"block\";\n\n\t\t\tvar scroll_top = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;\n\t\t\tvar scroll_left = window.pageXOffset || document.body.scrollLeft || document.documentElement.scrollLeft;\n\n\t\t\tvar view_height = window.innerHeight || document.documentElement.clientHeight;\n\n\t\t\tif (scroll_top) // if vertical scroll on window\n\t\t\t\tbox.style.top = Math.round(scroll_top + Math.max((view_height - box.offsetHeight) / 2, 0)) + \"px\";\n\t\t\telse // vertical scroll on body\n\t\t\t\tbox.style.top = Math.round(Math.max(((view_height - box.offsetHeight) / 2), 0) + 9) + \"px\"; // +9 for compatibility with auto tests\n\n\t\t\t// not quite accurate but used for compatibility reasons\n\t\t\tif (document.documentElement.scrollWidth > document.body.offsetWidth) // if horizontal scroll on the window\n\t\t\t\tbox.style.left = Math.round(scroll_left + (document.body.offsetWidth - box.offsetWidth) / 2) + \"px\";\n\t\t\telse // horizontal scroll on the body\n\t\t\t\tbox.style.left = Math.round((document.body.offsetWidth - box.offsetWidth) / 2) + \"px\";\n\t\t}\n\t};\n\tgantt.showCover = function() {\n\t\tif (this._cover) return;\n\n\t\tthis._cover = document.createElement(\"DIV\");\n\t\tthis._cover.className = \"gantt_cal_cover\";\n\t\tvar _document_height = ((document.height !== undefined) ? document.height : document.body.offsetHeight);\n\t\tvar _scroll_height = ((document.documentElement) ? document.documentElement.scrollHeight : 0);\n\t\tthis._cover.style.height = Math.max(_document_height, _scroll_height) + \"px\";\n\t\tdocument.body.appendChild(this._cover);\n\t};\n\n\n\tgantt._init_lightbox_events = function() {\n\t\tgantt.lightbox_events = {};\n\n\n\t\tgantt.lightbox_events.gantt_save_btn = function() {\n\t\t\tgantt._save_lightbox();\n\t\t};\n\n\n\t\tgantt.lightbox_events.gantt_delete_btn = function() {\n\t\t\tif (!gantt.callEvent(\"onLightboxDelete\", [gantt._lightbox_id]))\n\t\t\t\treturn;\n\n\t\t\tif (gantt.isTaskExists(gantt._lightbox_id)) {\n\t\t\t\tgantt.$click.buttons[\"delete\"](gantt._lightbox_id);\n\t\t\t} else {\n\t\t\t\tgantt.hideLightbox();\n\t\t\t}\n\n\t\t};\n\n\n\t\tgantt.lightbox_events.gantt_cancel_btn = function() {\n\t\t\tgantt._cancel_lightbox();\n\t\t};\n\n\n\t\tgantt.lightbox_events[\"default\"] = function(e, src) {\n\t\t\tif (src.getAttribute(\"data-dhx-button\")) {\n\t\t\t\tgantt.callEvent(\"onLightboxButton\", [src.className, src, e]);\n\t\t\t} else {\n\t\t\t\tvar index, block, sec;\n\n\t\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\t\tif (className.indexOf(\"gantt_custom_button\") != -1) {\n\t\t\t\t\tif (className.indexOf(\"gantt_custom_button_\") != -1) {\n\t\t\t\t\t\tindex = src.parentNode.getAttribute(\"data-index\");\n\t\t\t\t\t\tsec = src;\n\t\t\t\t\t\twhile (sec && domHelpers.getClassName(sec).indexOf(\"gantt_cal_lsection\") == -1) {\n\t\t\t\t\t\t\tsec = sec.parentNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = src.getAttribute(\"data-index\");\n\t\t\t\t\t\tsec = src.parentNode;\n\t\t\t\t\t\tsrc = src.firstChild;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar sections = gantt._get_typed_lightbox_config();\n\n\t\t\t\tif (index) {\n\t\t\t\t\tindex = index * 1;\n\t\t\t\t\tblock = gantt.form_blocks[sections[index * 1].type];\n\t\t\t\t\tblock.button_click(index, src, sec, sec.nextSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.event(gantt.getLightbox(), \"click\", function(e) {\n\t\t\te = e || window.event;\n\t\t\tvar src = e.target ? e.target : e.srcElement;\n\n\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\tif (!className) {\n\t\t\t\tsrc = src.previousSibling;\n\t\t\t\tclassName = domHelpers.getClassName(src);\n\t\t\t}\n\t\t\tif (src && className && className.indexOf(\"gantt_btn_set\") === 0) {\n\t\t\t\tsrc = src.firstChild;\n\t\t\t\tclassName = domHelpers.getClassName(src);\n\t\t\t}\n\t\t\tif (src && className) {\n\t\t\t\tvar func = gantt.defined(gantt.lightbox_events[src.className]) ? gantt.lightbox_events[src.className] : gantt.lightbox_events[\"default\"];\n\t\t\t\treturn func(e, src);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tgantt.getLightbox().onkeydown = function(e) {\n\t\t\tvar event = e || window.event;\n\t\t\tvar target = e.target || e.srcElement;\n\t\t\tvar buttonTarget = domHelpers.getClassName(target).indexOf(\"gantt_btn_set\") > -1;\n\n\t\t\tswitch ((e || event).keyCode) {\n\t\t\tcase gantt.constants.KEY_CODES.SPACE: {\n\t\t\t\tif ((e || event).shiftKey) return;\n\t\t\t\tif (buttonTarget && target.click) {\n\t\t\t\t\ttarget.click();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase gantt.keys.edit_save:\n\t\t\t\tif ((e || event).shiftKey) return;\n\t\t\t\tif (buttonTarget && target.click) {\n\t\t\t\t\ttarget.click();\n\t\t\t\t} else {\n\t\t\t\t\tgantt._save_lightbox();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase gantt.keys.edit_cancel:\n\t\t\t\tgantt._cancel_lightbox();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\t};\n\n\tgantt._cancel_lightbox = function() {\n\t\tvar task = this.getLightboxValues();\n\t\tthis.callEvent(\"onLightboxCancel\", [this._lightbox_id, task.$new]);\n\t\tif (gantt.isTaskExists(task.id) && task.$new) {\n\t\t\tthis.silent(function(){\n\t\t\t\tgantt.$data.tasksStore.removeItem(task.id);\n\t\t\t\tgantt._update_flags(task.id, null);\n\t\t\t});\n\t\t}\n\n\t\tthis.refreshData();\n\t\tthis.hideLightbox();\n\t};\n\n\tgantt._save_lightbox = function() {\n\t\tvar task = this.getLightboxValues();\n\t\tif (!this.callEvent(\"onLightboxSave\", [this._lightbox_id, task, !!task.$new]))\n\t\t\treturn;\n\n\t\tif (task.$new) {\n\t\t\tdelete task.$new;\n\t\t\tthis.addTask(task);\n\t\t}else if(this.isTaskExists(task.id)){\n\t\t\tthis.mixin(this.getTask(task.id), task, true);\n\t\t\tthis.refreshTask(task.id);\n\t\t\tthis.updateTask(task.id);\n\t\t}\n\t\tthis.refreshData();\n\n\t\t// TODO: do we need any blockable events here to prevent closing lightbox?\n\t\tthis.hideLightbox();\n\t};\n\n\tgantt._resolve_default_mapping = function(section) {\n\t\tvar mapping = section.map_to;\n\t\tvar time_controls = {\"time\": true, \"time_optional\": true, \"duration\": true, \"duration_optional\": true};\n\t\tif (time_controls[section.type]) {\n\t\t\tif (section.map_to == \"auto\") {\n\t\t\t\tmapping = {start_date: \"start_date\", end_date: \"end_date\", duration: \"duration\"};\n\t\t\t} else if (typeof(section.map_to) === \"string\") {\n\t\t\t\tmapping = {start_date: section.map_to};\n\t\t\t}\n\t\t}\n\n\t\treturn mapping;\n\t};\n\n\tgantt.getLightboxValues = function() {\n\t\tvar task = {};\n\n\t\tif (gantt.isTaskExists(this._lightbox_id)) {\n\t\t\ttask = this.mixin({}, this.getTask(this._lightbox_id));\n\t\t}\n\n\t\tvar sns = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar node = document.getElementById(sns[i].id);\n\t\t\tnode = (node ? node.nextSibling : node);\n\t\t\tvar block = this.form_blocks[sns[i].type];\n\t\t\tif (!block) continue;\n\t\t\tvar res = block.get_value.call(this, node, task, sns[i]);\n\t\t\tvar map_to = gantt._resolve_default_mapping(sns[i]);\n\t\t\tif (typeof map_to == \"string\" && map_to != \"auto\") {\n\t\t\t\ttask[map_to] = res;\n\t\t\t} else if (typeof map_to == \"object\") {\n\t\t\t\tfor (var property in map_to) {\n\t\t\t\t\tif (map_to[property])\n\t\t\t\t\t\ttask[map_to[property]] = res[property];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn task;\n\t};\n\n\n\tgantt.hideLightbox = function() {\n\t\tvar box = this.getLightbox();\n\t\tif (box) box.style.display = \"none\";\n\n\t\tthis._waiAria.lightboxHiddenAttr(box);\n\t\tthis._lightbox_id = null;\n\n\t\tthis.hideCover();\n\t\tthis.callEvent(\"onAfterLightbox\", []);\n\t};\n\tgantt.hideCover = function() {\n\t\tif (this._cover)\n\t\t\tthis._cover.parentNode.removeChild(this._cover);\n\t\tthis._cover = null;\n\t};\n\n\tgantt.resetLightbox = function() {\n\t\tif (gantt._lightbox && !gantt._custom_lightbox)\n\t\t\tgantt._lightbox.parentNode.removeChild(gantt._lightbox);\n\t\tgantt._lightbox = null;\n\t};\n\tgantt._set_lightbox_values = function(data, box) {\n\t\tvar task = data;\n\t\tvar s = box.getElementsByTagName(\"span\");\n\t\tvar lightboxHeader = [];\n\t\tif (gantt.templates.lightbox_header) {\n\t\t\tlightboxHeader.push(\"\");\n\t\t\tlightboxHeader.push(gantt.templates.lightbox_header(task.start_date, task.end_date, task));\n\t\t\ts[1].innerHTML = \"\";\n\t\t\ts[2].innerHTML = gantt.templates.lightbox_header(task.start_date, task.end_date, task);\n\t\t} else {\n\t\t\tlightboxHeader.push(this.templates.task_time(task.start_date, task.end_date, task));\n\t\t\tlightboxHeader.push((this.templates.task_text(task.start_date, task.end_date, task) || \"\").substr(0, 70)); //IE6 fix\n\t\t\ts[1].innerHTML = this.templates.task_time(task.start_date, task.end_date, task);\n\t\t\ts[2].innerHTML = (this.templates.task_text(task.start_date, task.end_date, task) || \"\").substr(0, 70); //IE6 fix\n\t\t}\n\t\ts[1].innerHTML = lightboxHeader[0];\n\t\ts[2].innerHTML = lightboxHeader[1];\n\n\t\tgantt._waiAria.lightboxHeader(box, lightboxHeader.join(\" \"));\n\n\t\tvar sns = this._get_typed_lightbox_config(this.getLightboxType());\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar section = sns[i];\n\n\t\t\tif (!this.form_blocks[section.type]) {\n\t\t\t\tcontinue;//skip incorrect sections, same check is done during rendering\n\t\t\t}\n\n\n\t\t\tvar node = document.getElementById(section.id).nextSibling;\n\t\t\tvar block = this.form_blocks[section.type];\n\t\t\tvar map_to = gantt._resolve_default_mapping(sns[i]);\n\t\t\tvar value = this.defined(task[map_to]) ? task[map_to] : section.default_value;\n\t\t\tblock.set_value.call(gantt, node, value, task, section);\n\n\t\t\tif (section.focus)\n\t\t\t\tblock.focus.call(gantt, node);\n\t\t}\n\t\tif (data.id)\n\t\t\tgantt._lightbox_id = data.id;\n\t};\n\tgantt._fill_lightbox = function(id, box) {\n\t\tvar task = this.getTask(id);\n\t\tthis._set_lightbox_values(task, box);\n\t};\n\n\n\tgantt.getLightboxSection = function(name) {\n\t\tvar config = this._get_typed_lightbox_config();\n\t\tvar i = 0;\n\t\tfor (i; i < config.length; i++)\n\t\t\tif (config[i].name == name)\n\t\t\t\tbreak;\n\t\tvar section = config[i];\n\t\tif (!section)\n\t\t\treturn null;\n\n\t\tif (!this._lightbox)\n\t\t\tthis.getLightbox();\n\t\tvar header = document.getElementById(section.id);\n\t\tvar node = header.nextSibling;\n\n\t\tvar result = {\n\t\t\tsection: section,\n\t\t\theader: header,\n\t\t\tnode: node,\n\t\t\tgetValue: function(ev) {\n\t\t\t\treturn gantt.form_blocks[section.type].get_value.call(gantt, node, (ev || {}), section);\n\t\t\t},\n\t\t\tsetValue: function(value, ev) {\n\t\t\t\treturn gantt.form_blocks[section.type].set_value.call(gantt, node, value, (ev || {}), section);\n\t\t\t}\n\t\t};\n\n\t\tvar handler = this._lightbox_methods[\"get_\" + section.type + \"_control\"];\n\t\treturn handler ? handler(result) : result;\n\t};\n\n\tgantt._lightbox_methods.get_template_control = function(result) {\n\t\tresult.control = result.node;\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_select_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"select\")[0];\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_textarea_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"textarea\")[0];\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_time_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"select\"); // array\n\t\treturn result;\n\t};\n\n\n\tgantt._init_dnd_events = function() {\n\t\tthis.event(document.body, \"mousemove\", gantt._move_while_dnd);\n\t\tthis.event(document.body, \"mouseup\", gantt._finish_dnd);\n\t\tgantt._init_dnd_events = function() {\n\t\t};\n\t};\n\tgantt._move_while_dnd = function(e) {\n\t\tif (gantt._dnd_start_lb) {\n\t\t\tif (!document.gantt_unselectable) {\n\t\t\t\tdocument.body.className += \" gantt_unselectable\";\n\t\t\t\tdocument.gantt_unselectable = true;\n\t\t\t}\n\t\t\tvar lb = gantt.getLightbox();\n\t\t\tvar now = (e && e.target) ? [e.pageX, e.pageY] : [event.clientX, event.clientY];\n\t\t\tlb.style.top = gantt._lb_start[1] + now[1] - gantt._dnd_start_lb[1] + \"px\";\n\t\t\tlb.style.left = gantt._lb_start[0] + now[0] - gantt._dnd_start_lb[0] + \"px\";\n\t\t}\n\t};\n\tgantt._ready_to_dnd = function(e) {\n\t\tvar lb = gantt.getLightbox();\n\t\tgantt._lb_start = [parseInt(lb.style.left, 10), parseInt(lb.style.top, 10)];\n\t\tgantt._dnd_start_lb = (e && e.target) ? [e.pageX, e.pageY] : [event.clientX, event.clientY];\n\t};\n\tgantt._finish_dnd = function() {\n\t\tif (gantt._lb_start) {\n\t\t\tgantt._lb_start = gantt._dnd_start_lb = false;\n\t\t\tdocument.body.className = document.body.className.replace(\" gantt_unselectable\", \"\");\n\t\t\tdocument.gantt_unselectable = false;\n\t\t}\n\t};\n\n\n\tgantt._focus = function(node, select) {\n\t\tif (node && node.focus) {\n\t\t\tif (gantt.config.touch) {\n\t\t\t\t//do not focus editor, to prevent auto-zoom\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (select && node.select) node.select();\n\t\t\t\t\tnode.focus();\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// silent errors\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\n\tgantt.form_blocks = {\n\t\tgetTimePicker: function(sns, hidden) {\n\t\t\tvar html = \"\";\n\t\t\tvar cfg = this.config;\n\t\t\tvar i;\n\t\t\tvar options;\n\t\t\tvar ariaAttrs;\n\t\t\tvar readonly;\n\t\t\tvar display;\n\t\t\tvar settings = {\n\t\t\t\tfirst: 0,\n\t\t\t\tlast: 24 * 60,\n\t\t\t\tdate: this.date.date_part(new Date(gantt._min_date.valueOf())),\n\t\t\t\ttimeFormat: getTimeFormat(sns)\n\t\t\t};\n\n\t\t\t// map: default order => real one\n\t\t\tsns._time_format_order = {size: 0};\n\n\t\t\tif (gantt.config.limit_time_select) {\n\t\t\t\tsettings.first = 60 * cfg.first_hour;\n\t\t\t\tsettings.last = 60 * cfg.last_hour + 1;\n\t\t\t\tsettings.date.setHours(cfg.first_hour);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < settings.timeFormat.length; i++) {\n\t\t\t\t// adding spaces between selects\n\t\t\t\tif (i > 0) {\n\t\t\t\t\thtml += \" \";\n\t\t\t\t}\n\n\t\t\t\toptions = getHtmlTimePickerOptions(sns, i, settings);\n\n\t\t\t\tif (options) {\n\t\t\t\t\tariaAttrs = gantt._waiAria.lightboxSelectAttrString(settings.timeFormat[i]);\n\t\t\t\t\treadonly = sns.readonly ? \"disabled='disabled'\" : \"\";\n\t\t\t\t\tdisplay = hidden ? \" style='display:none' \" : \"\";\n\t\t\t\t\thtml += \"<select \" + readonly + display + ariaAttrs + \">\" + options + \"</select>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn html;\n\t\t},\n\t\t_fill_lightbox_select: function(s, i, d, map) {\n\t\t\ts[i + map[0]].value = d.getDate();\n\t\t\ts[i + map[1]].value = d.getMonth();\n\t\t\ts[i + map[2]].value = d.getFullYear();\n\t\t\tif (gantt.defined(map[3])) {\n\t\t\t\tvar v = d.getHours() * 60 + d.getMinutes();\n\t\t\t\tv = Math.round(v / gantt._get_timepicker_step()) * gantt._get_timepicker_step();\n\t\t\t\tvar input = s[i + map[3]];\n\t\t\t\tinput.value = v;\n\t\t\t\t//in case option not shown\n\t\t\t\tinput.setAttribute(\"data-value\", v);\n\t\t\t}\n\t\t},\n\t\ttemplate: new TemplateControl(),\n\t\ttextarea: new TextareaControl(),\n\t\tselect: new SelectControl(),\n\t\ttime: new TimeControl(),\n\t\tduration: new DurationControl(),\n\t\tparent: new ParentControl(),\n\t\tradio: new RadioControl(),\n\t\tcheckbox: new CheckboxControl(),\n\t\tresources: new ResourcesControl()\n\t};\n\n\tgantt._is_lightbox_timepicker = function() {\n\t\tvar s = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < s.length; i++)\n\t\t\tif (s[i].name == \"time\" && s[i].type == \"time\")\n\t\t\t\treturn true;\n\t\treturn false;\n\t};\n\n\tgantt._dhtmlx_confirm = function(message, title, callback, ok) {\n\t\tif (!message)\n\t\t\treturn callback();\n\t\tvar opts = {text: message};\n\t\tif (title)\n\t\t\topts.title = title;\n\t\tif (ok) {\n\t\t\topts.ok = ok;\n\t\t}\n\t\tif (callback) {\n\t\t\topts.callback = function(result) {\n\t\t\t\tif (result)\n\t\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\tgantt.confirm(opts);\n\t};\n\n\tfunction _get_type_name(type_value) {\n\t\tfor (var i in this.config.types) {\n\t\t\tif (this.config.types[i] == type_value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn \"task\";\n\t}\n\n\tgantt._get_typed_lightbox_config = function(type) {\n\t\tif (type === undefined) {\n\t\t\ttype = this.getLightboxType();\n\t\t}\n\n\t\tvar field = _get_type_name.call(this, type);\n\n\t\tif (gantt.config.lightbox[field + \"_sections\"]) {\n\t\t\treturn gantt.config.lightbox[field + \"_sections\"];\n\t\t} else {\n\t\t\treturn gantt.config.lightbox.sections;\n\t\t}\n\t};\n\n\tgantt._silent_redraw_lightbox = function(type) {\n\t\tvar oldType = this.getLightboxType();\n\n\t\tif (this.getState().lightbox) {\n\t\t\tvar taskId = this.getState().lightbox;\n\t\t\tvar formData = this.getLightboxValues(),\n\t\t\t\ttask = this.copy(this.getTask(taskId));\n\n\t\t\tthis.resetLightbox();\n\n\t\t\tvar updTask = this.mixin(task, formData, true);\n\t\t\tvar box = this.getLightbox(type ? type : undefined);\n\t\t\tthis._center_lightbox(this.getLightbox());\n\t\t\tthis._set_lightbox_values(updTask, box);\n\t\t} else {\n\t\t\tthis.resetLightbox();\n\t\t\tthis.getLightbox(type ? type : undefined);\n\t\t}\n\t\tthis.callEvent(\"onLightboxChange\", [oldType, this.getLightboxType()]);\n\t};\n\n\tfunction bindLabelsToInputs(sns) {\n\t\tvar section;\n\t\tvar label;\n\t\tvar labelBlock;\n\t\tvar inputBlock;\n\t\tvar input;\n\t\tvar i;\n\n\t\tfor (i = 0; i < sns.length; i++) {\n\t\t\tsection = sns[i];\n\t\t\tlabelBlock = document.getElementById(section.id);\n\t\t\t\n\t\t\tif (!section.id || !labelBlock) continue;\n\n\t\t\tlabel = labelBlock.querySelector(\"label\");\n\t\t\tinputBlock = labelBlock.nextSibling;\n\t\t\t\n\t\t\tif (!inputBlock) continue;\n\n\t\t\tinput = inputBlock.querySelector(\"input, select, textarea\");\n\t\t\tif (input) {\n\t\t\t\tinput.id = input.id || \"input_\" + gantt.uid();\n\t\t\t\tsection.inputId = input.id;\n\t\t\t\tlabel.setAttribute(\"for\", section.inputId);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getHtmlButtons(buttons, floatRight) {\n\t\tvar button;\n\t\tvar ariaAttr;\n\t\tvar html = \"\";\n\t\tvar i;\n\n\t\tfor (i = 0; i < buttons.length; i++) {\n\t\t\t// needed to migrate from 'dhx_something' to 'gantt_something' naming in a lightbox\n\t\t\tbutton = gantt.config._migrate_buttons[buttons[i]] ? gantt.config._migrate_buttons[buttons[i]] : buttons[i];\n\n\t\t\tariaAttr = gantt._waiAria.lightboxButtonAttrString(button);\n\t\t\thtml += \"<div \" + ariaAttr + \" class='gantt_btn_set gantt_left_btn_set \" + button + \"_set'\" + (floatRight ? \" style='float:right;'\" : \"\") + \"><div dhx_button='1' data-dhx-button='1' class='\" + button + \"'></div><div>\" + gantt.locale.labels[button] + \"</div></div>\";\n\t\t}\n\t\treturn html;\n\t}\n\n\tfunction getTimeFormat(sns) {\n\t\tvar scale;\n\t\tvar unit;\n\t\tvar result;\n\n\t\tif (sns.time_format) return sns.time_format;\n\n\t\t// default order\n\t\tresult = [\"%d\", \"%m\", \"%Y\"];\n\t\tscale = gantt.getScale();\n\t\tunit = scale ? scale.unit : gantt.config.duration_unit;\n\t\tif (helpers.getSecondsInUnit(unit) < helpers.getSecondsInUnit(\"day\")) {\n\t\t\tresult.push(\"%H:%i\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getHtmlTimePickerOptions(sns, index, settings) {\n\t\tvar range;\n\t\tvar offset;\n\t\tvar start_year;\n\t\tvar end_year;\n\t\tvar i;\n\t\tvar time;\n\t\tvar diff;\n\t\tvar tdate;\n\t\tvar html = \"\";\n\n\t\tswitch (settings.timeFormat[index]) {\n\t\tcase \"%Y\":\n\t\t\tsns._time_format_order[2] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//year\n\n\t\t\tif (sns.year_range) {\n\t\t\t\tif (!isNaN(sns.year_range)) {\n\t\t\t\t\trange = sns.year_range;\n\t\t\t\t} else if (sns.year_range.push) {\n\t\t\t\t\t// if\n\t\t\t\t\tstart_year = sns.year_range[0];\n\t\t\t\t\tend_year = sns.year_range[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trange = range || 10;\n\t\t\toffset = offset || Math.floor(range / 2);\n\t\t\tstart_year = start_year || settings.date.getFullYear() - offset;\n\t\t\tend_year = end_year || start_year + range;\n\n\t\t\tfor (i = start_year; i < end_year; i++)\n\t\t\t\thtml += \"<option value='\" + (i) + \"'>\" + (i) + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%m\":\n\t\t\tsns._time_format_order[1] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//month\n\t\t\tfor (i = 0; i < 12; i++)\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + gantt.locale.date.month_full[i] + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%d\":\n\t\t\tsns._time_format_order[0] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//days\n\t\t\tfor (i = 1; i < 32; i++)\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + i + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%H:%i\":\n\t\t\t//  var last = 24*60, first = 0;\n\t\t\tsns._time_format_order[3] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//hours\n\t\t\ti = settings.first;\n\t\t\ttdate = settings.date.getDate();\n\t\t\tsns._time_values = [];\n\n\t\t\twhile (i < settings.last) {\n\t\t\t\ttime = gantt.templates.time_picker(settings.date);\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + time + \"</option>\";\n\t\t\t\tsns._time_values.push(i);\n\t\t\t\tsettings.date.setTime(settings.date.valueOf() + gantt._get_timepicker_step() * 60 * 1000);\n\t\t\t\tdiff = (settings.date.getDate() != tdate) ? 1 : 0; // moved or not to the next day\n\t\t\t\ti = diff * 24 * 60 + settings.date.getHours() * 60 + settings.date.getMinutes();\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\treturn html;\n\t}\n};", "var helpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\n\tgantt.isUnscheduledTask = function (task) {\n\t\tgantt.assert(task && task instanceof Object, \"Invalid argument <b>task</b>=\"+task+\" of gantt.isUnscheduledTask. Task object was expected\");\n\t\treturn (!!task.unscheduled || !task.start_date);\n\t};\n\n\tgantt._isAllowedUnscheduledTask = function (task) {\n\t\treturn !!(task.unscheduled && gantt.config.show_unscheduled);\n\t};\n\n\tgantt.isTaskVisible = function (id) {\n\t\tif (!this.isTaskExists(id))\n\t\t\treturn false;\n\n\t\tvar task = this.getTask(id);\n\n\t\tvar taskStart = task.start_date ? task.start_date.valueOf() : null;\n\t\tvar taskEnd = task.end_date ? task.end_date.valueOf() : null;\n\n\t\tif (!(gantt._isAllowedUnscheduledTask(task) || (taskStart && taskEnd && taskStart <= this._max_date.valueOf() && taskEnd >= this._min_date.valueOf()))){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(gantt.getGlobalTaskIndex(id) >= 0);\n\t};\n\n\tgantt._defaultTaskDate = function (item, parent_id) {\n\t\tvar parent = (parent_id && parent_id != this.config.root_id) ? this.getTask(parent_id) : false,\n\t\t\tstartDate = '';\n\t\tif (parent) {\n\t\t\tstartDate = parent.start_date;\n\t\t} else {\n\t\t\tvar first = this.getTaskByIndex(0);\n\t\t\tstartDate = first ? (first.start_date ? first.start_date : (first.end_date ? this.calculateEndDate({\n\t\t\t\tstart_date: first.end_date,\n\t\t\t\tduration: -this.config.duration_step\n\t\t\t}) : '')) : this.config.start_date || this.getState().min_date;\n\t\t}\n\t\tgantt.assert(startDate, \"Invalid dates\");\n\t\treturn new Date(startDate);\n\t};\n\n\tgantt._set_default_task_timing = function (task) {\n\t\ttask.start_date = task.start_date || gantt._defaultTaskDate(task, this.getParent(task));\n\t\ttask.duration = task.duration || this.config.duration_step;\n\t\ttask.end_date = task.end_date || this.calculateEndDate(task);\n\t};\n\n\tgantt.createTask = function (item, parent, index) {\n\t\titem = item || {};\n\t\tif (!gantt.defined(item.id))\n\t\t\titem.id = gantt.uid();\n\n\t\tif (!item.start_date) {\n\t\t\titem.start_date = gantt._defaultTaskDate(item, parent);\n\t\t}\n\t\tif (item.text === undefined) {\n\t\t\titem.text = gantt.locale.labels.new_task;\n\t\t}\n\t\tif (item.duration === undefined) {\n\t\t\titem.duration = 1;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tthis.setParent(item, parent, true);\n\t\t\tvar parentObj = this.getTask(parent);\n\t\t\tparentObj.$open = true;\n\t\t}\n\n\t\tif (!this.callEvent(\"onTaskCreated\", [item])) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.config.details_on_create) {\n\t\t\titem.$new = true;\n\t\t\tthis.silent(function(){\n\t\t\t\tgantt.$data.tasksStore.addItem(item, index);\n\t\t\t});\n\t\t\tthis.selectTask(item.id);\n\t\t\tthis.refreshData();\n\t\t\tthis.showLightbox(item.id);\n\t\t} else {\n\t\t\tif (this.addTask(item, parent, index)) {\n\t\t\t\tthis.showTask(item.id);\n\t\t\t\tthis.selectTask(item.id);\n\t\t\t}\n\t\t}\n\t\treturn item.id;\n\t};\n\n\tgantt._update_flags = function (oldid, newid) {\n\t\t//  TODO: need a proper way to update all possible flags\n\t\tvar store = gantt.$data.tasksStore;\n\t\tif (oldid === undefined) {\n\t\t\tthis._lightbox_id = null;\n\n\t\t\tstore.silent(function(){\n\t\t\t\tstore.unselect();\n\t\t\t});\n\n\t\t\tif (this._tasks_dnd && this._tasks_dnd.drag) {\n\t\t\t\tthis._tasks_dnd.drag.id = null;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._lightbox_id == oldid)\n\t\t\t\tthis._lightbox_id = newid;\n\n\t\t\t// TODO: probably can be removed\n\t\t\tif (store.getSelectedId() == oldid) {\n\t\t\t\tstore.silent(function(){\n\t\t\t\t\tstore.unselect(oldid);\n\t\t\t\t\tstore.select(newid);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (this._tasks_dnd && this._tasks_dnd.drag && this._tasks_dnd.drag.id == oldid) {\n\t\t\t\tthis._tasks_dnd.drag.id = newid;\n\t\t\t}\n\t\t}\n\t};\n\n\tgantt._get_task_timing_mode = function (task, force) {\n\t\tvar task_type = this.getTaskType(task.type);\n\n\t\tvar state = {\n\t\t\ttype: task_type,\n\t\t\t$no_start: false,\n\t\t\t$no_end: false\n\t\t};\n\n\t\tif (!force && task_type == task.$rendered_type) {\n\t\t\tstate.$no_start = task.$no_start;\n\t\t\tstate.$no_end = task.$no_end;\n\t\t\treturn state;\n\t\t}\n\n\t\tif (task_type == this.config.types.project) {\n\t\t\t//project duration is always defined by children duration\n\t\t\tstate.$no_end = state.$no_start = true;\n\t\t} else if (task_type != this.config.types.milestone) {\n\t\t\t//tasks can have fixed duration, children duration(as projects), or one date fixed, and other defined by nested items\n\t\t\tstate.$no_end = !(task.end_date || task.duration);\n\t\t\tstate.$no_start = !task.start_date;\n\n\t\t\tif (this._isAllowedUnscheduledTask(task)) {\n\t\t\t\tstate.$no_end = state.$no_start = false;\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t};\n\n\tgantt._init_task_timing = function (task) {\n\t\tvar task_mode = gantt._get_task_timing_mode(task, true);\n\n\t\tvar dirty = task.$rendered_type != task_mode.type;\n\n\t\tvar task_type = task_mode.type;\n\n\t\tif (dirty) {\n\t\t\ttask.$no_start = task_mode.$no_start;\n\t\t\ttask.$no_end = task_mode.$no_end;\n\t\t\ttask.$rendered_type = task_mode.type;\n\t\t}\n\n\t\tif (dirty && task_type != this.config.types.milestone) {\n\t\t\tif (task_type == this.config.types.project) {\n\t\t\t\t//project duration is always defined by children duration\n\t\t\t\tthis._set_default_task_timing(task);\n\t\t\t}\n\t\t}\n\n\t\tif (task_type == this.config.types.milestone) {\n\t\t\ttask.end_date = task.start_date;\n\t\t}\n\t\tif (task.start_date && task.end_date) {\n\t\t\ttask.duration = this.calculateDuration(task);\n\t\t}\n\n\t\tif (!task.end_date) {\n\t\t\ttask.end_date = task.start_date;\n\t\t}\n\n\t\ttask.duration = task.duration || 0;\n\t};\n\n\tgantt.isSummaryTask = function (task) {\n\t\tgantt.assert(task && task instanceof Object, \"Invalid argument <b>task</b>=\"+task+\" of gantt.isSummaryTask. Task object was expected\");\n\t\t\n\t\tvar mode = gantt._get_task_timing_mode(task);\n\n\t\treturn !!(mode.$no_end || mode.$no_start);\n\t};\n\n// downward calculation of project duration\n\tgantt.resetProjectDates = function (task) {\n\t\tvar taskMode = this._get_task_timing_mode(task);\n\t\tif (taskMode.$no_end || taskMode.$no_start) {\n\t\t\tvar dates = this.getSubtaskDates(task.id);\n\t\t\tthis._assign_project_dates(task, dates.start_date, dates.end_date);\n\t\t}\n\t};\n\n\tgantt.getSubtaskDuration = function (task_id) {\n\t\tvar res = 0,\n\t\t\troot = task_id !== undefined ? task_id : gantt.config.root_id;\n\n\t\tthis.eachTask(function (child) {\n\t\t\tif (this.getTaskType(child.type) == gantt.config.types.project || this.isUnscheduledTask(child))\n\t\t\t\treturn;\n\n\t\t\tres += child.duration;\n\t\t}, root);\n\n\t\treturn res;\n\t};\n\n\tgantt.getSubtaskDates = function (task_id) {\n\t\tvar min = null,\n\t\t\tmax = null,\n\t\t\troot = task_id !== undefined ? task_id : gantt.config.root_id;\n\n\t\tthis.eachTask(function (child) {\n\t\t\tif (this.getTaskType(child.type) == gantt.config.types.project || this.isUnscheduledTask(child))\n\t\t\t\treturn;\n\n\t\t\tif ((child.start_date && !child.$no_start) && (!min || min > child.start_date.valueOf()))\n\t\t\t\tmin = child.start_date.valueOf();\n\t\t\tif ((child.end_date && !child.$no_end) && (!max || max < child.end_date.valueOf()))\n\t\t\t\tmax = child.end_date.valueOf();\n\t\t}, root);\n\n\t\treturn {\n\t\t\tstart_date: min ? new Date(min) : null,\n\t\t\tend_date: max ? new Date(max) : null\n\t\t};\n\t};\n\n\tgantt._assign_project_dates = function (task, from, to) {\n\t\tvar taskTiming = this._get_task_timing_mode(task);\n\t\tif (taskTiming.$no_start) {\n\t\t\tif (from && from != Infinity) {\n\t\t\t\ttask.start_date = new Date(from);\n\t\t\t} else {\n\t\t\t\ttask.start_date = this._defaultTaskDate(task, this.getParent(task));\n\t\t\t}\n\t\t}\n\n\t\tif (taskTiming.$no_end) {\n\t\t\tif (to && to != -Infinity) {\n\t\t\t\ttask.end_date = new Date(to);\n\t\t\t} else {\n\t\t\t\ttask.end_date = this.calculateEndDate({\n\t\t\t\t\tstart_date: task.start_date,\n\t\t\t\t\tduration: this.config.duration_step,\n\t\t\t\t\ttask: task\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (taskTiming.$no_start || taskTiming.$no_end) {\n\t\t\tthis._init_task_timing(task);\n\t\t}\n\t};\n\n// upward calculation of project duration\n\tgantt._update_parents = function (taskId, silent) {\n\t\tif (!taskId) return;\n\n\t\tvar task = this.getTask(taskId);\n\t\tvar pid = this.getParent(task);\n\n\t\tvar taskTiming = this._get_task_timing_mode(task);\n\n\t\tvar has_changed = true;\n\n\t\tif (taskTiming.$no_start || taskTiming.$no_end) {\n\t\t\tvar oldStart = task.start_date.valueOf(),\n\t\t\t\toldEnd = task.end_date.valueOf();\n\n\t\t\tgantt.resetProjectDates(task);\n\n\t\t\t// not refresh parent projects if dates hasn't changed\n\t\t\tif (oldStart == task.start_date.valueOf() && oldEnd == task.end_date.valueOf()) {\n\t\t\t\thas_changed = false;\n\t\t\t}\n\n\t\t\tif (has_changed && !silent) {\n\t\t\t\tthis.refreshTask(task.id, true);\n\t\t\t}\n\t\t}\n\n\n\t\tif (has_changed && pid && this.isTaskExists(pid)) {\n\t\t\tthis._update_parents(pid, silent);\n\t\t}\n\t};\n\n\tgantt.roundDate = function (config) {\n\t\tvar scale = gantt.getScale();\n\n\t\tif (helpers.isDate(config)) {\n\t\t\tconfig = {\n\t\t\t\tdate: config,\n\t\t\t\tunit: scale ? scale.unit : gantt.config.duration_unit,\n\t\t\t\tstep: scale ?  scale.step : gantt.config.duration_step\n\t\t\t};\n\t\t}\n\t\tvar date = config.date,\n\t\t\tsteps = config.step,\n\t\t\tunit = config.unit;\n\n\t\tif(!scale){\n\t\t\treturn date;\n\t\t}\n\n\t\tvar upper, lower, colIndex;\n\t\tif (unit == scale.unit && steps == scale.step &&\n\t\t\t+date >= +scale.min_date && +date <= +scale.max_date) {\n\t\t\t//find date in time scale config\n\t\t\tcolIndex = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\tif (!scale.trace_x[colIndex]) {\n\t\t\t\tcolIndex -= 1;// end of time scale\n\t\t\t\tif(scale.rtl){\n\t\t\t\t\tcolIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlower = new Date(scale.trace_x[colIndex]);\n\t\t\tupper = gantt.date.add(lower, steps, unit);\n\t\t} else {\n\t\t\tcolIndex = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\tupper = gantt.date[unit + \"_start\"](new Date(scale.min_date));\n\t\t\tif (scale.trace_x[colIndex]) {\n\t\t\t\tupper = gantt.date[unit + \"_start\"](scale.trace_x[colIndex]);// end of time scale\n\t\t\t}\n\n\t\t\twhile (+upper < +date) {\n\t\t\t\tupper = gantt.date[unit + \"_start\"](gantt.date.add(upper, steps, unit));\n\n\t\t\t\tvar tzOffset = upper.getTimezoneOffset();\n\n\t\t\t\tupper = gantt._correct_dst_change(upper, tzOffset, upper, unit);\n\t\t\t\tif (gantt.date[unit + '_start'])\n\t\t\t\t\tupper = gantt.date[unit + '_start'](upper);\n\t\t\t}\n\n\t\t\tlower = gantt.date.add(upper, -1 * steps, unit);\n\n\t\t}\n\t\tif (config.dir && config.dir == 'future')\n\t\t\treturn upper;\n\t\tif (config.dir && config.dir == 'past')\n\t\t\treturn lower;\n\n\t\tif (Math.abs(date - lower) < Math.abs(upper - date)) {\n\t\t\treturn lower;\n\t\t} else {\n\t\t\treturn upper;\n\t\t}\n\n\t};\n\n\tgantt.correctTaskWorkTime = function (task) {\n\t\tif (gantt.config.work_time && gantt.config.correct_work_time) {\n\t\t\tif (!this.isWorkTime(task.start_date, undefined, task)) {\n\t\t\t\ttask.start_date = this.getClosestWorkTime({date: task.start_date, dir: 'future', task: task});\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t} else if (!this.isWorkTime(new Date(+task.end_date - 1), undefined, task)) {\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t}\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onBeforeTaskUpdate\", function (id, task) {\n\t\tgantt._init_task_timing(task);\n\t\treturn true;\n\t});\n\tgantt.attachEvent(\"onBeforeTaskAdd\", function (id, task) {\n\t\tgantt._init_task_timing(task);\n\t\treturn true;\n\t});\n\n};", "// TODO: rework public api for date methods\nvar utils = require(\"../../utils/utils\");\n\nvar createWorktimeFacade = function(calendarManager, timeCalculator){\n\treturn {\n\t\tgetWorkHours: function (date) {\n\t\t\treturn timeCalculator.getWorkHours(date);\n\t\t},\n\n\t\tsetWorkTime: function (config) {\n\t\t\treturn timeCalculator.setWorkTime(config);\n\t\t},\n\n\t\tunsetWorkTime: function (config) {\n\t\t\ttimeCalculator.unsetWorkTime(config);\n\t\t},\n\n\t\tisWorkTime: function (date, unit, task) {\n\t\t\treturn timeCalculator.isWorkTime(date, unit, task);\n\t\t},\n\n\t\tgetClosestWorkTime: function (config) {\n\t\t\treturn timeCalculator.getClosestWorkTime(config);\n\t\t},\n\n\t\tcalculateDuration: function (start_date, end_date, task) {\n\t\t\treturn timeCalculator.calculateDuration(start_date, end_date, task);\n\t\t},\n\t\t_hasDuration: function (start_date, end_date, task) {\n\t\t\treturn timeCalculator.hasDuration(start_date, end_date, task);\n\t\t},\n\n\t\tcalculateEndDate: function (start, duration, unit, task) {\n\t\t\treturn timeCalculator.calculateEndDate(start, duration, unit, task);\n\t\t},\n\n\t\tcreateCalendar: utils.bind(calendarManager.createCalendar, calendarManager),\n\t\taddCalendar: utils.bind(calendarManager.addCalendar, calendarManager),\n\t\tgetCalendar: utils.bind(calendarManager.getCalendar, calendarManager),\n\t\tgetCalendars: utils.bind(calendarManager.getCalendars, calendarManager),\n\t\tgetTaskCalendar: utils.bind(calendarManager.getTaskCalendar, calendarManager),\n\t\tdeleteCalendar: utils.bind(calendarManager.deleteCalendar, calendarManager)\n\t};\n};\n\n\nmodule.exports = { create: createWorktimeFacade };\n", "function CalendarDisabledTimeStrategy(gantt, argumentsHelper){\n\tthis.argumentsHelper = argumentsHelper;\n\tthis.$gantt = gantt;\n}\n\nCalendarDisabledTimeStrategy.prototype = {\n\tgetWorkHours: function () {\n\t\treturn [0, 24];\n\t},\n\tsetWorkTime: function () {\n\t\treturn true;\n\t},\n\tunsetWorkTime: function () {\n\t\treturn true;\n\t},\n\tisWorkTime: function () {\n\t\treturn true;\n\t},\n\tgetClosestWorkTime: function (config) {\n\t\tvar config = this.argumentsHelper.getClosestWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\t\treturn config.date;\n\t},\n\n\tcalculateDuration: function () {\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\treturn this._calculateDuration(from, to, unit, step);\n\t},\n\t_calculateDuration: function (start, end, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\tvar fixedUnits = {\n\t\t\t\"week\": 1000 * 60 * 60 * 24 * 7,\n\t\t\t\"day\": 1000 * 60 * 60 * 24,\n\t\t\t\"hour\": 1000 * 60 * 60,\n\t\t\t\"minute\": 1000 * 60\n\t\t};\n\n\t\tvar res = 0;\n\t\tif (fixedUnits[unit]) {\n\t\t\tres = Math.round((end - start) / (step * fixedUnits[unit]));\n\t\t} else {\n\t\t\tvar from = new Date(start),\n\t\t\t\tto = new Date(end);\n\t\t\twhile (from.valueOf() < to.valueOf()) {\n\t\t\t\tres += 1;\n\t\t\t\tfrom = dateHelper.add(from, step, unit);\n\t\t\t}\n\n\t\t\tif (from.valueOf() != end.valueOf()) {\n\t\t\t\tres += (to - from) / (dateHelper.add(from, step, unit) - from);\n\t\t\t}\n\t\t}\n\n\t\treturn Math.round(res);\n\t},\n\n\thasDuration: function () {\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit;\n\n\t\tif (!unit) {\n\t\t\treturn false;\n\t\t}\n\t\tfrom = new Date(from);\n\t\tto = new Date(to);\n\n\t\treturn (from.valueOf() < to.valueOf());\n\t},\n\n\tcalculateEndDate: function () {\n\t\tvar config = this.argumentsHelper.calculateEndDateArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar start = config.start_date,\n\t\t\tduration = config.duration,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\treturn this.$gantt.date.add(start, step * duration, unit);\n\t}\n};\n\nmodule.exports = CalendarDisabledTimeStrategy;", "var createArgumentsHelper = require(\"./calendar_arguments_helper\"),\n\tNoWorkTimeCalendar = require(\"./strategy/no_work_time\");\n\nfunction TimeCalculator(calendarManager){\n\n\tthis.$gantt = calendarManager.$gantt;\n\tthis.argumentsHelper = createArgumentsHelper(this.$gantt);\n\tthis.calendarManager = calendarManager;\n\tthis.$disabledCalendar = new NoWorkTimeCalendar(this.$gantt, this.argumentsHelper);\n}\n\nTimeCalculator.prototype = {\n\t_getCalendar: function (config) {\n\t\tvar calendar;\n\t\tif (!this.$gantt.$services.config().work_time) {\n\t\t\tcalendar = this.$disabledCalendar;\n\t\t} else {\n\t\t\tvar manager = this.calendarManager;\n\t\t\tif (config.task) {\n\t\t\t\tcalendar = manager.getTaskCalendar(config.task);\n\t\t\t} else if (config.id) {\n\t\t\t\tcalendar = manager.getTaskCalendar(config);\n\t\t\t} else if (config.calendar) {\n\t\t\t\tcalendar = config.calendar;\n\t\t\t}\n\t\t\tif (!calendar) {\n\t\t\t\tcalendar = manager.getTaskCalendar();\n\t\t\t}\n\t\t}\n\t\treturn calendar;\n\t},\n\n\tgetWorkHours: function (config) {\n\t\tconfig = this.argumentsHelper.getWorkHoursArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.getWorkHours(config.date);\n\t},\n\n\tsetWorkTime: function (config, calendar) {\n\t\tconfig = this.argumentsHelper.setWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tif (!calendar)\n\t\t\tcalendar = this.calendarManager.getCalendar(); // Global\n\t\treturn calendar.setWorkTime(config);\n\t},\n\n\tunsetWorkTime: function (config, calendar) {\n\t\tconfig = this.argumentsHelper.unsetWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tif (!calendar)\n\t\t\tcalendar = this.calendarManager.getCalendar(); // Global\n\t\treturn calendar.unsetWorkTime(config);\n\t},\n\tisWorkTime: function (date, unit, task, calendar) {\n\t\tvar config = this.argumentsHelper.isWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tcalendar = this._getCalendar(config);\n\t\treturn calendar.isWorkTime(config);\n\t},\n\tgetClosestWorkTime: function (config) {\n\t\tconfig = this.argumentsHelper.getClosestWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.getClosestWorkTime(config);\n\t},\n\n\tcalculateDuration: function () { // start_date_date, end_date, task\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\n\n\t\tvar calendar = this._getCalendar(config);\n\t\treturn calendar.calculateDuration(config);\n\t},\n\thasDuration: function () {\n\t\tvar config = this.argumentsHelper.hasDurationArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.hasDuration(config);\n\t},\n\tcalculateEndDate: function (config) { // start_date, duration, unit, task\n\t\tvar config = this.argumentsHelper.calculateEndDateArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\t\treturn calendar.calculateEndDate(config);\n\t}\n};\n\nmodule.exports = TimeCalculator;\n\n", "function WorkUnitsCache() {\n\tthis._cache = {};\n}\n\nWorkUnitsCache.prototype = {\n\t// cache previously calculated worktime\n\tget: function (unit, date) {\n\t\tvar result = -1;// default value (if not existed in the cache)\n\n\t\tvar cache = this._cache;\n\t\tif (cache && cache[unit]) {\n\t\t\tvar units = cache[unit];\n\t\t\tvar time = date.getTime();\n\t\t\tif (units[time] !== undefined)\n\t\t\t\tresult = units[time];\n\t\t}\n\t\treturn result;\n\t},\n\n\tput: function (unit, date, value) {\n\t\tif (!unit || !date) return false;\n\n\t\tvar cache = this._cache;\n\n\t\tvar time = date.getTime();\n\n\t\tvalue = !!value;\n\n\t\tif (!cache) return false;\n\t\tif (!cache[unit]) cache[unit] = {};\n\t\tcache[unit][time] = value;\n\t\treturn true;\n\t},\n\n\tclear: function () {\n\t\tthis._cache = {};\n\t}\n};\n\nmodule.exports = WorkUnitsCache;", "var Cache = require(\"./calendar_workunit_cache\"),\n\tutils = require(\"../../../utils/utils\");\n\nfunction CalendarWorkTimeStrategy(gantt, argumentsHelper){\n\tthis.argumentsHelper = argumentsHelper;\n\tthis.$gantt = gantt;\n\tthis._workingUnitsCache = new Cache();\n}\n\nCalendarWorkTimeStrategy.prototype = {\n\tunits: [\n\t\t\"year\",\n\t\t\"month\",\n\t\t\"week\",\n\t\t\"day\",\n\t\t\"hour\",\n\t\t\"minute\"\n\t],\n\t// cache previously calculated worktime\n\t_getUnitOrder: function (unit) {\n\t\tfor (var i = 0, len = this.units.length; i < len; i++) {\n\t\t\tif (this.units[i] == unit)\n\t\t\t\treturn i;\n\t\t}\n\t},\n\t_timestamp: function (settings) {\n\n\t\tvar timestamp = null;\n\t\tif ((settings.day || settings.day === 0)) {\n\t\t\ttimestamp = settings.day;\n\t\t} else if (settings.date) {\n\t\t\t// store worktime datestamp in utc so it could be recognized in different timezones (e.g. opened locally and sent to the export service in different timezone)\n\t\t\ttimestamp = Date.UTC(settings.date.getFullYear(), settings.date.getMonth(), settings.date.getDate());\n\t\t}\n\t\treturn timestamp;\n\t},\n\t_checkIfWorkingUnit: function (date, unit, order) {\n\t\tif (order === undefined) {\n\t\t\torder = this._getUnitOrder(unit);\n\t\t}\n\n\t\t// disable worktime check for custom time units\n\t\tif (order === undefined) {\n\t\t\treturn true;\n\t\t}\n\t\tif (order) {\n\t\t\t//check if bigger time unit is a work time (hour < day < month...)\n\t\t\t//i.e. don't check particular hour if the whole day is marked as not working\n\t\t\tif (!this._isWorkTime(date, this.units[order - 1], order - 1))\n\t\t\t\treturn false;\n\t\t}\n\t\tif (!this[\"_is_work_\" + unit])\n\t\t\treturn true;\n\t\treturn this[\"_is_work_\" + unit](date);\n\t},\n\t//checkings for particular time units\n\t//methods for month-year-week can be defined, otherwise always return 'true'\n\t_is_work_day: function (date) {\n\t\tvar val = this._getWorkHours(date);\n\n\t\tif (val instanceof Array) {\n\t\t\treturn val.length > 0;\n\t\t}\n\t\treturn false;\n\t},\n\t_is_work_hour: function (date) {\n\t\tvar hours = this._getWorkHours(date); // [7,12] or []\n\t\tvar hour = date.getHours();\n\t\tfor (var i = 0; i < hours.length; i += 2) {\n\t\t\tif (hours[i + 1] === undefined) {\n\t\t\t\treturn hours[i] == hour;\n\t\t\t} else {\n\t\t\t\tif (hour >= hours[i] && hour < hours[i + 1])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_internDatesPull: {},\n\t_nextDate: function (start, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\treturn dateHelper.add(start, step, unit);\n\n\t\t/*var start_value = +start,\n\t\t\tkey = unit + \"_\" + step;\n\t\tvar interned = this._internDatesPull[key];\n\t\tif(!interned){\n\t\t\tinterned = this._internDatesPull[key] = {};\n\t\t}\n\t\tvar calculated;\n\t\tif(!interned[start_value]){\n\t\t\tinterned[start_value] = calculated = dateHelper.add(start, step, unit);\n\t\t\t//interned[start_value] = dateHelper.add(start, step, unit);\n\t\t}\n\t\treturn calculated || interned[start_value];*/\n\t},\n\t_getWorkUnitsBetweenGeneric: function (from, to, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\t\tvar units = 0;\n\n\n\t\tvar next = null;\n\t\tvar stepStart,\n\t\t\tstepEnd;\n\n\t\t// calculating decimal durations, i.e. 2016-09-20 00:05:00 - 2016-09-20 01:00:00 ~ 0.95 instead of 1\n\t\t// and also  2016-09-20 00:00:00 - 2016-09-20 00:05:00 ~ 0.05 instead of 1\n\t\t// durations must be rounded later\n\t\tvar checkFirst = false;\n\t\tstepStart = dateHelper[unit + \"_start\"](new Date(start));\n\t\tif (stepStart.valueOf() != start.valueOf()) {\n\t\t\tcheckFirst = true;\n\t\t}\n\t\tvar checkLast = false;\n\t\tstepEnd = dateHelper[unit + \"_start\"](new Date(to));\n\t\tif (stepEnd.valueOf() != to.valueOf()) {\n\t\t\tcheckLast = true;\n\t\t}\n\n\t\tvar isLastStep = false;\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tnext = this._nextDate(start, unit, step);\n\t\t\tisLastStep = (next.valueOf() > end.valueOf());\n\n\t\t\tif (this._isWorkTime(start, unit)) {\n\t\t\t\tif (checkFirst || (checkLast && isLastStep)) {\n\t\t\t\t\tstepStart = dateHelper[unit + \"_start\"](new Date(start));\n\t\t\t\t\tstepEnd = dateHelper.add(stepStart, step, unit);\n\t\t\t\t}\n\n\t\t\t\tif (checkFirst) {\n\t\t\t\t\tcheckFirst = false;\n\t\t\t\t\tnext = this._nextDate(stepStart, unit, step);\n\t\t\t\t\tunits += ((stepEnd.valueOf() - start.valueOf()) / (stepEnd.valueOf() - stepStart.valueOf()));\n\t\t\t\t} else if (checkLast && isLastStep) {\n\t\t\t\t\tcheckLast = false;\n\t\t\t\t\tunits += ((end.valueOf() - start.valueOf()) / (stepEnd.valueOf() - stepStart.valueOf()));\n\n\t\t\t\t} else {\n\t\t\t\t\tunits++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstart = next;\n\t\t}\n\t\treturn units;\n\t},\n\t_getHoursPerDay: function (date) {\n\t\tvar hours = this._getWorkHours(date);\n\t\tvar res = 0;\n\t\tfor (var i = 0; i < hours.length; i += 2) {\n\t\t\tres += ((hours[i + 1] - hours[i]) || 0);\n\t\t}\n\t\treturn res;\n\t},\n\t_getWorkHoursForRange: function (from, to) {\n\t\tvar hours = 0;\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tif (this._isWorkTime(start, \"day\"))\n\t\t\t\thours += this._getHoursPerDay(start);\n\t\t\tstart = this._nextDate(start, \"day\", 1);\n\t\t}\n\t\treturn hours;\n\t},\n\t_getWorkUnitsBetweenHours: function (from, to, unit, step) {\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\n\t\tvar firstDayStart = new Date(start);\n\t\tvar firstDayEnd = this.$gantt.date.add(this.$gantt.date.day_start(new Date(start)), 1, \"day\");\n\n\t\tif (end.valueOf() <= firstDayEnd.valueOf()) {\n\t\t\treturn this._getWorkUnitsBetweenGeneric(from, to, unit, step);\n\t\t} else {\n\n\t\t\tvar lastDayStart = this.$gantt.date.day_start(new Date(end));\n\t\t\tvar lastDayEnd = end;\n\n\t\t\tvar startPart = this._getWorkUnitsBetweenGeneric(firstDayStart, firstDayEnd, unit, step);\n\t\t\tvar endPart = this._getWorkUnitsBetweenGeneric(lastDayStart, lastDayEnd, unit, step);\n\n\t\t\tvar hourRange = this._getWorkHoursForRange(firstDayEnd, lastDayStart);\n\t\t\thourRange = ((hourRange / step) + startPart + endPart);\n\n\t\t\treturn hourRange;\n\t\t}\n\t},\n\n\t_getCalendar: function () {\n\t\treturn this.worktime;\n\t},\n\t_setCalendar: function (settings) {\n\t\tthis.worktime = settings;\n\t},\n\n\t_tryChangeCalendarSettings: function (payload) {\n\t\tvar backup = JSON.stringify(this._getCalendar());\n\t\tpayload();\n\t\tif (this._isEmptyCalendar(this._getCalendar())) {\n\t\t\tthis.$gantt.assert(false, \"Invalid calendar settings, no worktime available\");\n\t\t\tthis._setCalendar(JSON.parse(backup));\n\t\t\tthis._workingUnitsCache.clear();\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\n\t},\n\n\t_isEmptyCalendar: function (settings) {\n\t\tvar result = false,\n\t\t\tdatesArray = [],\n\t\t\tisFullWeekSet = true;\n\t\tfor (var i in settings.dates) {\n\t\t\tresult |= !!settings.dates[i];\n\t\t\tdatesArray.push(i);\n\t\t}\n\n\t\tvar checkFullArray = [];\n\t\tfor (var i = 0; i < datesArray.length; i++) {\n\t\t\tif (datesArray[i] < 10) {\n\t\t\t\tcheckFullArray.push(datesArray[i]);\n\t\t\t}\n\t\t}\n\t\tcheckFullArray.sort();\n\n\t\tfor (var i = 0; i < 7; i++) {\n\t\t\tif (checkFullArray[i] != i)\n\t\t\t\tisFullWeekSet = false;\n\t\t}\n\t\tif (isFullWeekSet)\n\t\t\treturn !result;\n\t\treturn !(result || !!settings.hours); // can still return false if separated dates are set to true\n\t},\n\n\tgetWorkHours: function () {\n\t\tvar config = this.argumentsHelper.getWorkHoursArguments.apply(this.argumentsHelper, arguments);\n\t\treturn this._getWorkHours(config.date);\n\t},\n\t_getWorkHours: function (date) {\n\t\tvar t = this._timestamp({date: date});\n\t\tvar hours = true;\n\t\tvar calendar = this._getCalendar();\n\t\tif (calendar.dates[t] !== undefined) {\n\t\t\thours = calendar.dates[t];//custom day\n\t\t} else if (calendar.dates[date.getDay()] !== undefined) {\n\t\t\thours = calendar.dates[date.getDay()];//week day\n\t\t}\n\t\tif (hours === true) {\n\t\t\treturn calendar.hours;\n\t\t} else if (hours) {\n\t\t\treturn hours;\n\t\t}\n\t\treturn [];\n\t},\n\n\tsetWorkTime: function (settings) {\n\t\treturn this._tryChangeCalendarSettings(utils.bind(function () {\n\t\t\tvar hours = settings.hours !== undefined ? settings.hours : true;\n\t\t\tvar timestamp = this._timestamp(settings);\n\t\t\tif (timestamp !== null) {\n\t\t\t\tthis._getCalendar().dates[timestamp] = hours;\n\t\t\t} else {\n\t\t\t\tthis._getCalendar().hours = hours;\n\t\t\t}\n\t\t\tthis._workingUnitsCache.clear();\n\t\t}, this));\n\t},\n\n\tunsetWorkTime: function (settings) {\n\t\treturn this._tryChangeCalendarSettings(utils.bind(function () {\n\t\t\tif (!settings) {\n\t\t\t\tthis.reset_calendar();\n\t\t\t} else {\n\n\t\t\t\tvar timestamp = this._timestamp(settings);\n\n\t\t\t\tif (timestamp !== null) {\n\t\t\t\t\tdelete this._getCalendar().dates[timestamp];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Clear work units cache\n\t\t\tthis._workingUnitsCache.clear();\n\t\t}, this));\n\t},\n\n\t_isWorkTime: function (date, unit, order) {\n\t\t//Check if this item has in the cache\n\t\tvar is_work_unit = this._workingUnitsCache.get(unit, date);\n\n\t\tif (is_work_unit == -1) {\n\t\t\t// calculate if not cached\n\t\t\tis_work_unit = this._checkIfWorkingUnit(date, unit, order);\n\t\t\tthis._workingUnitsCache.put(unit, date, is_work_unit);\n\t\t}\n\n\t\treturn is_work_unit;\n\t},\n\n\tisWorkTime: function () {\n\t\tvar config =  this.argumentsHelper.isWorkTimeArguments.apply( this.argumentsHelper, arguments);\n\t\treturn this._isWorkTime(config.date, config.unit);\n\t},\n\n\tcalculateDuration: function () {\n\t\tvar config =  this.argumentsHelper.getDurationArguments.apply( this.argumentsHelper, arguments);\n\n\t\tif (!config.unit) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar res = 0;\n\t\tif (config.unit == \"hour\") {\n\t\t\tres = this._getWorkUnitsBetweenHours(config.start_date, config.end_date, config.unit, config.step);\n\t\t} else {\n\t\t\tres = this._getWorkUnitsBetweenGeneric(config.start_date, config.end_date, config.unit, config.step);\n\t\t}\n\n\t\t// getDuration.. returns decimal durations\n\t\treturn Math.round(res);\n\t},\n\thasDuration: function () {\n\t\tvar config =  this.argumentsHelper.getDurationArguments.apply( this.argumentsHelper, arguments);\n\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\tif (!unit) {\n\t\t\treturn false;\n\t\t}\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tif (this._isWorkTime(start, unit))\n\t\t\t\treturn true;\n\t\t\tstart = this._nextDate(start, unit, step);\n\t\t}\n\t\treturn false;\n\t},\n\n\tcalculateEndDate: function () {\n\t\tvar config =  this.argumentsHelper.calculateEndDateArguments.apply( this.argumentsHelper, arguments);\n\n\t\tvar from = config.start_date,\n\t\t\tduration = config.duration,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\tvar mult = (config.duration >= 0) ? 1 : -1;\n\t\treturn this._calculateEndDate(from, duration, unit, step * mult);\n\t},\n\t_calculateEndDate: function (from, duration, unit, step) {\n\t\tif (!unit)\n\t\t\treturn false;\n\n\t\tvar start = new Date(from),\n\t\t\tadded = 0;\n\t\tstep = step || 1;\n\t\tduration = Math.abs(duration * 1);\n\n\t\twhile (added < duration) {\n\t\t\tvar next = this._nextDate(start, unit, step);\n\t\t\t//if(this.isWorkTime(step > 0 ? start : next, unit))\n\t\t\tif (this._isWorkTime(step > 0 ? new Date(next.valueOf() - 1) : new Date(next.valueOf() + 1), unit))\n\t\t\t\tadded++;\n\t\t\tstart = next;\n\t\t}\n\t\treturn start;\n\t},\n\n\tgetClosestWorkTime: function () {\n\t\tvar config =  this.argumentsHelper.getClosestWorkTimeArguments.apply( this.argumentsHelper, arguments);\n\t\treturn this._getClosestWorkTime(config);\n\t},\n\n\t_getClosestWorkTime: function (settings) {\n\t\tif (this._isWorkTime(settings.date, settings.unit))\n\t\t\treturn settings.date;\n\n\t\tvar unit = settings.unit;\n\n\t\tvar curr = this.$gantt.date[unit + '_start'](new Date(settings.date));\n\n\t\tvar future_target = new Date(curr),\n\t\t\tprev_target = new Date(curr),\n\t\t\ttick = true,\n\t\t\tmaximum_loop = 3000,//be extra sure we won't fall into infinite loop, 3k seems big enough\n\t\t\tcount = 0,\n\t\t\tboth_directins = (settings.dir == 'any' || !settings.dir);\n\n\t\tvar inc = 1;\n\t\tif (settings.dir == 'past')\n\t\t\tinc = -1;\n\n\t\tvar unitOrder = this._getUnitOrder(unit),\n\t\t\tbiggerTimeUnit = this.units[unitOrder - 1];\n\n\t\t//will seek closest working hour in future or in past, one step in one direction per iteration\n\t\twhile (!this._isWorkTime(curr, unit)) {\n\n\t\t\tif(biggerTimeUnit && !this._isWorkTime(curr, biggerTimeUnit)){\n\t\t\t\t// no need to check every hour/minute if we know that the whole day is not working\n\t\t\t\tvar biggerTimeUnitSettings = this.$gantt.copy(settings);\n\t\t\t\tbiggerTimeUnitSettings.date = curr;\n\t\t\t\tbiggerTimeUnitSettings.unit = biggerTimeUnit;\n\n\t\t\t\treturn this._getClosestWorkTime(biggerTimeUnitSettings);\n\t\t\t}\n\n\t\t\tif (both_directins) {\n\t\t\t\tcurr = tick ? future_target : prev_target;\n\t\t\t\tinc = inc * (-1);\n\t\t\t}\n\t\t\tvar tzOffset = curr.getTimezoneOffset();\n\t\t\tcurr = this.$gantt.date.add(curr, inc, unit);\n\n\t\t\tcurr = this.$gantt._correct_dst_change(curr, tzOffset, inc, unit);\n\t\t\tif (this.$gantt.date[unit + '_start'])\n\t\t\t\tcurr = this.$gantt.date[unit + '_start'](curr);\n\n\t\t\tif (both_directins) {\n\t\t\t\tif (tick) {\n\t\t\t\t\tfuture_target = curr;\n\t\t\t\t} else {\n\t\t\t\t\tprev_target = curr;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick = !tick;\n\t\t\tcount++;\n\t\t\tif (count > maximum_loop) {\n\t\t\t\tthis.$gantt.assert(false, \"Invalid working time check\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (curr == prev_target || settings.dir == 'past') {\n\t\t\tcurr = this.$gantt.date.add(curr, 1, unit);\n\t\t}\n\n\t\treturn curr;\n\t}\n};\n\nmodule.exports = CalendarWorkTimeStrategy;", "var utils = require(\"../../utils/utils\");\nvar createArgumentsHelper = require(\"./calendar_arguments_helper\");\nvar CalendarWorktimeStrategy = require(\"./strategy/calendar_strategy\");\n\nfunction CalendarManager (gantt){\n\tthis.$gantt = gantt;\n\tthis._calendars = {};\n}\n\nCalendarManager.prototype = {\n\t_calendars: {},\n\t_getDayHoursForMultiple: function (calendars, date) {\n\t\tvar units = [],\n\t\t\ttick = true,\n\t\t\tcurrPos = 0,\n\t\t\tis_work_hour = false,\n\t\t\tstart = this.$gantt.date.day_start(new Date(date));\n\t\tfor (var hour = 0; hour < 24; hour++) {\n\t\t\tis_work_hour = calendars.reduce(function (acc, calendar) {\n\t\t\t\treturn acc && calendar._is_work_hour(start);\n\t\t\t}, true);\n\t\t\tif (is_work_hour) {\n\t\t\t\tif (tick) {\n\t\t\t\t\tunits[currPos] = hour;\n\t\t\t\t\tunits[currPos + 1] = (hour + 1);\n\t\t\t\t\tcurrPos += 2;\n\t\t\t\t} else {\n\t\t\t\t\tunits[currPos - 1] += 1;\n\t\t\t\t}\n\t\t\t\ttick = false;\n\t\t\t} else if (!tick) {\n\t\t\t\ttick = true;\n\t\t\t}\n\t\t\tstart = this.$gantt.date.add(start, 1, \"hour\");\n\t\t}\n\t\tif (!units.length)\n\t\t\tunits = false;\n\t\treturn units;\n\t},\n\tmergeCalendars: function () {\n\t\tvar newCalendar = this.createCalendar(),\n\t\t\tday,\n\t\t\tunits = [];\n\t\tvar calendars = Array.prototype.slice.call(arguments, 0);\n\t\tnewCalendar.worktime.hours = [0, 24];\n\t\tnewCalendar.worktime.dates = {};\n\t\tvar start = this.$gantt.date.day_start(new Date(259200000)); // 1970 day=0\n\t\tfor (day = 0; day < 7; day++) {\n\t\t\tunits = this._getDayHoursForMultiple(calendars, start);\n\t\t\tnewCalendar.worktime.dates[day] = units;\n\t\t\tstart = this.$gantt.date.add(start, 1, \"day\");\n\t\t}\n\t\tfor (var i = 0; i < calendars.length; i++) {\n\t\t\tfor (var value in calendars[i].worktime.dates) if (+value > 10000) {\n\t\t\t\tunits = this._getDayHoursForMultiple(calendars, new Date(+value));\n\t\t\t\tnewCalendar.worktime.dates[value] = units;\n\t\t\t}\n\t\t}\n\t\treturn newCalendar;\n\t},\n\n\t_convertWorktimeSettings: function (settings) {\n\t\tvar days = settings.days;\n\t\tif (days) {\n\t\t\tsettings.dates = settings.dates || {};\n\t\t\tfor (var i = 0; i < days.length; i++) {\n\t\t\t\tsettings.dates[i] = days[i];\n\t\t\t\tif (!(days[i] instanceof Array)) {\n\t\t\t\t\tsettings.dates[i] = !!days[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete settings.days;\n\t\t}\n\t\treturn settings;\n\t},\n\n\tcreateCalendar: function (parentCalendar) {\n\t\tvar settings;\n\n\t\tif (!parentCalendar) {\n\t\t\tparentCalendar = {};\n\t\t}\n\n\t\tif (parentCalendar.worktime) {\n\t\t\tsettings = utils.copy(parentCalendar.worktime);\n\t\t} else {\n\t\t\tsettings = utils.copy(parentCalendar);\n\t\t}\n\n\t\tvar defaults = utils.copy(this.defaults.fulltime.worktime);\n\t\tutils.mixin(settings, defaults);\n\n\t\tvar id = utils.uid();\n\t\tvar calendar = {\n\t\t\tid: id + \"\",\n\t\t\tworktime: this._convertWorktimeSettings(settings)\n\t\t};\n\n\t\tvar apiCore = new CalendarWorktimeStrategy(this.$gantt, createArgumentsHelper(this.$gantt));\n\t\tutils.mixin(apiCore, calendar);\n\n\t\t// validate/check if empty calendar\n\t\tif (!apiCore._tryChangeCalendarSettings(function () {\n\t\t\t})) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn apiCore;\n\t\t}\n\t},\n\n\tgetCalendar: function (id) {\n\t\tid = id || \"global\";\n\t\tthis.createDefaultCalendars();\n\t\treturn this._calendars[id];\n\t},\n\n\tgetCalendars: function () {\n\t\tvar res = [];\n\t\tfor (var i in this._calendars) {\n\t\t\tres.push(this.getCalendar(i));\n\t\t}\n\t\treturn res;\n\t},\n\n\tgetTaskCalendar: function (task) {\n\t\tvar config = this.$gantt.$services.config();\n\t\tif (!task) {\n\t\t\treturn this.getCalendar();\n\t\t} else if (task[config.calendar_property]) {\n\t\t\treturn this.getCalendar(task[config.calendar_property]);\n\t\t} else if (config.resource_calendars) {\n\n\t\t\tfor (var field in config.resource_calendars) {\n\t\t\t\tvar resource = config.resource_calendars[field];\n\t\t\t\tif (task[field]) {\n\t\t\t\t\tvar calendarId = resource[task[field]];\n\t\t\t\t\tif (calendarId) {\n\t\t\t\t\t\treturn this.getCalendar(calendarId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getCalendar();\n\t},\n\n\taddCalendar: function (calendar) { // puts new calendar to Global Storage - gantt.calendarManager._calendars {}\n\t\tif (!(calendar instanceof CalendarWorktimeStrategy)) {\n\t\t\tvar id = calendar.id;\n\t\t\tcalendar = this.createCalendar(calendar);\n\t\t\tcalendar.id = id;\n\t\t}\n\t\tvar config = this.$gantt.$services.config();\n\n\t\tcalendar.id = calendar.id || utils.uid();\n\t\tthis._calendars[calendar.id] = calendar;\n\t\tif (!config.worktimes)\n\t\t\tconfig.worktimes = {};\n\t\tconfig.worktimes[calendar.id] = calendar.worktime;\n\t\treturn calendar.id;\n\t},\n\n\tdeleteCalendar: function (calendar) {\n\t\tvar config = this.$gantt.$services.config();\n\t\tif (!calendar) return false;\n\t\tif (this._calendars[calendar]) {\n\t\t\tdelete this._calendars[calendar];\n\t\t\tif (config.worktimes && config.worktimes[calendar])\n\t\t\t\tdelete config.worktimes[calendar];\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\t},\n\n\trestoreConfigCalendars: function (configs) {\n\t\tfor (var i in configs) {\n\t\t\tif (this._calendars[i])\n\t\t\t\tcontinue;\n\n\t\t\tvar settings = configs[i];\n\t\t\tvar calendar = this.createCalendar(settings);\n\t\t\tcalendar.id = i;\n\t\t\tthis.addCalendar(calendar);\n\t\t}\n\t},\n\n\tdefaults: {\n\t\tglobal: {\n\t\t\tid: \"global\",\n\t\t\tworktime: {\n\t\t\t\thours: [8, 17],\n\t\t\t\tdays: [0, 1, 1, 1, 1, 1, 0]\n\t\t\t}\n\t\t},\n\t\tfulltime: {\n\t\t\tid: \"fulltime\",\n\t\t\tworktime: {\n\t\t\t\thours: [0, 24],\n\t\t\t\tdays: [1, 1, 1, 1, 1, 1, 1]\n\t\t\t}\n\t\t}\n\t},\n\n\tcreateDefaultCalendars: function () {\n\t\tvar config = this.$gantt.$services.config();\n\t\tthis.restoreConfigCalendars(this.defaults);\n\t\tthis.restoreConfigCalendars(config.worktimes);\n\t}\n};\n\nmodule.exports = CalendarManager;", "var CalendarManager = require(\"./calendar_manager\"),\n\tTimeCalculator = require(\"./time_calculator\"),\n\tworktimeFacadeFactory = require(\"../facades/worktime_calendars\"),\n\tutils = require(\"../../utils/utils\");\n\nmodule.exports = function (gantt) {\n\tvar manager = new CalendarManager(gantt),\n\ttimeCalculator = new TimeCalculator(manager);\n\tvar facade = worktimeFacadeFactory.create(manager, timeCalculator);\n\tutils.mixin(gantt, facade);\n};\n", "var helpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\n\tgantt.load = function (url, type, callback) {\n\t\tthis._load_url = url;\n\t\tthis.assert(arguments.length, \"Invalid load arguments\");\n\n\t\tvar tp = 'json', cl = null;\n\t\tif (arguments.length >= 3) {\n\t\t\ttp = type;\n\t\t\tcl = callback;\n\t\t} else {\n\t\t\tif (typeof arguments[1] == \"string\")\n\t\t\t\ttp = arguments[1];\n\t\t\telse if (typeof arguments[1] == \"function\")\n\t\t\t\tcl = arguments[1];\n\t\t}\n\n\t\tthis._load_type = tp;\n\n\t\tthis.callEvent(\"onLoadStart\", [url, tp]);\n\n\t\tthis.ajax.get(url, gantt.bind(function (l) {\n\t\t\tthis.on_load(l, tp);\n\t\t\tthis.callEvent(\"onLoadEnd\", [url, tp]);\n\t\t\tif (typeof cl == \"function\")\n\t\t\t\tcl.call(this);\n\t\t}, this));\n\t};\n\tgantt.parse = function (data, type) {\n\t\tthis.on_load({xmlDoc: {responseText: data}}, type);\n\t};\n\n\tgantt.serialize = function (type) {\n\t\ttype = type || \"json\";\n\t\treturn this[type].serialize();\n\t};\n\n\t/*\n\ttasks and relations\n\t{\n\tdata:[\n\t\t{\n\t\t\t\"id\":\"string\",\n\t\t\t\"text\":\"...\",\n\t\t\t\"start_date\":\"Date or string\",\n\t\t\t\"end_date\":\"Date or string\",\n\t\t\t\"duration\":\"number\",\n\t\t\t\"progress\":\"0..1\",\n\t\t\t\"parent_id\":\"string\",\n\t\t\t\"order\":\"number\"\n\t\t},...],\n\tlinks:[\n\t\t{\n\t\t\tid:\"string\",\n\t\t\tsource:\"string\",\n\t\t\ttarget:\"string\",\n\t\t\ttype:\"string\"\n\t\t},...],\n\tcollections:{\n\t\t\tcollectionName:[\n\t\t\t\t{key:, label:, optional:...},...\n\t\t\t],...\n\t\t}\n\t}\n\n\t* */\n\n\tgantt.on_load = function (resp, type) {\n\t\tthis.callEvent(\"onBeforeParse\", []);\n\t\tif (!type)\n\t\t\ttype = \"json\";\n\t\tthis.assert(this[type], \"Invalid data type:'\" + type + \"'\");\n\n\t\tvar raw = resp.xmlDoc.responseText;\n\n\t\tvar data = this[type].parse(raw, resp);\n\t\tthis._process_loading(data);\n\t};\n\n\tgantt._process_loading = function (data) {\n\t\tif(data.collections)\n\t\t\tthis._load_collections(data.collections);\n\n\t\tthis.$data.tasksStore.parse(data.data);\n\t\tvar links = data.links || (data.collections ? data.collections.links : []);\n\t\tthis.$data.linksStore.parse(links);\n\n\t\t//this._sync_links();\n\t\tthis.callEvent(\"onParse\", []);\n\t\tthis.render();\n\t\tif(this.config.initial_scroll){\n\t\t\tvar firstTask = this.getTaskByIndex(0);\n\t\t\tvar id = firstTask ? firstTask.id : this.config.root_id;\n\t\t\tif(this.isTaskExists(id))\n\t\t\t\tthis.showTask(id);\n\t\t}\n\t};\n\n\n\tgantt._load_collections = function (collections) {\n\t\tvar collections_loaded = false;\n\t\tfor (var key in collections) {\n\t\t\tif (collections.hasOwnProperty(key)) {\n\t\t\t\tcollections_loaded = true;\n\t\t\t\tvar collection = collections[key];\n\t\t\t\tvar arr = this.serverList[key];\n\t\t\t\tif (!arr) continue;\n\t\t\t\tarr.splice(0, arr.length); //clear old options\n\t\t\t\tfor (var j = 0; j < collection.length; j++) {\n\t\t\t\t\tvar option = collection[j];\n\t\t\t\t\tvar obj = this.copy(option);\n\t\t\t\t\tobj.key = obj.value;// resulting option object\n\n\t\t\t\t\tfor (var option_key in option) {\n\t\t\t\t\t\tif (option.hasOwnProperty(option_key)) {\n\t\t\t\t\t\t\tif (option_key == \"value\" || option_key == \"label\")\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tobj[option_key] = option[option_key]; // obj['value'] = option['value']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (collections_loaded)\n\t\t\tthis.callEvent(\"onOptionsLoad\", []);\n\t};\n\n\tgantt.attachEvent(\"onBeforeTaskDisplay\", function (id, task) {\n\t\treturn !task.$ignore;\n\t});\n\n\tgantt.json = {\n\t\tparse: function (data) {\n\t\t\tgantt.assert(data, \"Invalid data\");\n\n\t\t\tif (typeof data == \"string\") {\n\t\t\t\tif (window.JSON)\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\telse {\n\t\t\t\t\tgantt.assert(false, \"JSON is not supported\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.dhx_security)\n\t\t\t\tgantt.security_key = data.dhx_security;\n\t\t\treturn data;\n\t\t},\n\t\tserializeTask: function (task) {\n\t\t\treturn this._copyObject(task);\n\t\t},\n\t\tserializeLink: function (link) {\n\t\t\treturn this._copyLink(link);\n\t\t},\n\t\t_copyLink: function (obj) {\n\t\t\tvar copy = {};\n\t\t\tfor (var key in obj)\n\t\t\t\tcopy[key] = obj[key];\n\t\t\treturn copy;\n\t\t},\n\t\t_copyObject: function (obj) {\n\t\t\tvar copy = {};\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (key.charAt(0) == \"$\")\n\t\t\t\t\tcontinue;\n\t\t\t\tcopy[key] = obj[key];\n\n\t\t\t\tif (helpers.isDate(copy[key])) {\n\t\t\t\t\tcopy[key] = gantt.templates.xml_format(copy[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn copy;\n\t\t},\n\t\tserialize: function () {\n\t\t\tvar tasks = [];\n\t\t\tvar links = [];\n\n\t\t\tgantt.eachTask(function (obj) {\n\t\t\t\tgantt.resetProjectDates(obj);\n\t\t\t\ttasks.push(this.serializeTask(obj));\n\t\t\t}, gantt.config.root_id, this);\n\n\t\t\tvar rawLinks = gantt.getLinks();\n\t\t\tfor (var i = 0; i < rawLinks.length; i++) {\n\t\t\t\tlinks.push(this.serializeLink(rawLinks[i]));\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: tasks,\n\t\t\t\tlinks: links\n\t\t\t};\n\t\t}\n\t};\n\n\t/*\n\t<data>\n\t\t<task id:\"some\" parent_id=\"0\" progress=\"0.5\">\n\t\t\t<text>My task 1</text>\n\t\t\t<start_date>16.08.2013</start_date>\n\t\t\t<end_date>22.08.2013</end_date>\n\t\t</task>\n\t\t<coll_options>\n\t\t\t<links>\n\t\t\t\t<link source='a1' target='b2' type='c3' />\n\t\t\t</links>\n\t\t</coll_options>\n\t</data>\n\t*/\n\n\tgantt.xml = {\n\t\t_xmlNodeToJSON: function (node, attrs_only) {\n\t\t\tvar t = {};\n\t\t\tfor (var i = 0; i < node.attributes.length; i++)\n\t\t\t\tt[node.attributes[i].name] = node.attributes[i].value;\n\n\t\t\tif (!attrs_only) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\t\t\tvar child = node.childNodes[i];\n\t\t\t\t\tif (child.nodeType == 1)\n\t\t\t\t\t\tt[child.tagName] = child.firstChild ? child.firstChild.nodeValue : \"\";\n\t\t\t\t}\n\n\t\t\t\tif (!t.text) t.text = node.firstChild ? node.firstChild.nodeValue : \"\";\n\t\t\t}\n\n\t\t\treturn t;\n\t\t},\n\t\t_getCollections: function (loader) {\n\t\t\tvar collection = {};\n\t\t\tvar opts = gantt.ajax.xpath(\"//coll_options\", loader);\n\t\t\tfor (var i = 0; i < opts.length; i++) {\n\t\t\t\tvar bind = opts[i].getAttribute(\"for\");\n\t\t\t\tvar arr = collection[bind] = [];\n\t\t\t\tvar itms = gantt.ajax.xpath(\".//item\", opts[i]);\n\t\t\t\tfor (var j = 0; j < itms.length; j++) {\n\t\t\t\t\tvar itm = itms[j];\n\t\t\t\t\tvar attrs = itm.attributes;\n\t\t\t\t\tvar obj = {key: itms[j].getAttribute(\"value\"), label: itms[j].getAttribute(\"label\")};\n\t\t\t\t\tfor (var k = 0; k < attrs.length; k++) {\n\t\t\t\t\t\tvar attr = attrs[k];\n\t\t\t\t\t\tif (attr.nodeName == \"value\" || attr.nodeName == \"label\")\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tobj[attr.nodeName] = attr.nodeValue;\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn collection;\n\t\t},\n\t\t_getXML: function (text, loader, toptag) {\n\t\t\ttoptag = toptag || \"data\";\n\t\t\tif (!loader.getXMLTopNode) {\n\t\t\t\tloader = gantt.ajax.parse(loader);\n\t\t\t}\n\n\t\t\tvar xml = gantt.ajax.xmltop(toptag, loader.xmlDoc);\n\t\t\tif (!xml || xml.tagName != toptag) throw \"Invalid XML data\";\n\n\t\t\tvar skey = xml.getAttribute(\"dhx_security\");\n\t\t\tif (skey)\n\t\t\t\tgantt.security_key = skey;\n\n\t\t\treturn xml;\n\t\t},\n\t\tparse: function (text, loader) {\n\t\t\tloader = this._getXML(text, loader);\n\t\t\tvar data = {};\n\n\t\t\tvar evs = data.data = [];\n\t\t\tvar xml = gantt.ajax.xpath(\"//task\", loader);\n\n\t\t\tfor (var i = 0; i < xml.length; i++)\n\t\t\t\tevs[i] = this._xmlNodeToJSON(xml[i]);\n\n\t\t\tdata.collections = this._getCollections(loader);\n\t\t\treturn data;\n\t\t},\n\t\t_copyLink: function (obj) {\n\t\t\treturn \"<item id='\" + obj.id + \"' source='\" + obj.source + \"' target='\" + obj.target + \"' type='\" + obj.type + \"' />\";\n\t\t},\n\t\t_copyObject: function (obj) {\n\t\t\treturn \"<task id='\" + obj.id + \"' parent='\" + (obj.parent || \"\") + \"' start_date='\" + obj.start_date + \"' duration='\" + obj.duration + \"' open='\" + (!!obj.open) + \"' progress='\" + obj.progress + \"' end_date='\" + obj.end_date + \"'><![CDATA[\" + obj.text + \"]]></task>\";\n\t\t},\n\t\tserialize: function () {\n\t\t\tvar tasks = [];\n\t\t\tvar links = [];\n\n\t\t\tvar json = gantt.json.serialize();\n\t\t\tfor (var i = 0, len = json.data.length; i < len; i++) {\n\t\t\t\ttasks.push(this._copyObject(json.data[i]));\n\t\t\t}\n\t\t\tfor (var i = 0, len = json.links.length; i < len; i++) {\n\t\t\t\tlinks.push(this._copyLink(json.links[i]));\n\t\t\t}\n\t\t\treturn \"<data>\" + tasks.join(\"\") + \"<coll_options for='links'>\" + links.join(\"\") + \"</coll_options></data>\";\n\t\t}\n\t};\n\n\n\tgantt.oldxml = {\n\t\tparse: function (text, loader) {\n\t\t\tloader = gantt.xml._getXML(text, loader, \"projects\");\n\t\t\tvar data = {collections: {links: []}};\n\n\t\t\tvar evs = data.data = [];\n\t\t\tvar xml = gantt.ajax.xpath(\"//task\", loader);\n\n\t\t\tfor (var i = 0; i < xml.length; i++) {\n\t\t\t\tevs[i] = gantt.xml._xmlNodeToJSON(xml[i]);\n\t\t\t\tvar parent = xml[i].parentNode;\n\n\t\t\t\tif (parent.tagName == \"project\")\n\t\t\t\t\tevs[i].parent = \"project-\" + parent.getAttribute(\"id\");\n\t\t\t\telse\n\t\t\t\t\tevs[i].parent = parent.parentNode.getAttribute(\"id\");\n\t\t\t}\n\n\t\t\txml = gantt.ajax.xpath(\"//project\", loader);\n\t\t\tfor (var i = 0; i < xml.length; i++) {\n\t\t\t\tvar ev = gantt.xml._xmlNodeToJSON(xml[i], true);\n\t\t\t\tev.id = \"project-\" + ev.id;\n\t\t\t\tevs.push(ev);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < evs.length; i++) {\n\t\t\t\tvar ev = evs[i];\n\t\t\t\tev.start_date = ev.startdate || ev.est;\n\t\t\t\tev.end_date = ev.enddate;\n\t\t\t\tev.text = ev.name;\n\t\t\t\tev.duration = ev.duration / 8;\n\t\t\t\tev.open = 1;\n\t\t\t\tif (!ev.duration && !ev.end_date) ev.duration = 1;\n\t\t\t\tif (ev.predecessortasks)\n\t\t\t\t\tdata.collections.links.push({\n\t\t\t\t\t\ttarget: ev.id,\n\t\t\t\t\t\tsource: ev.predecessortasks,\n\t\t\t\t\t\ttype: gantt.config.links.finish_to_start\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\tserialize: function () {\n\t\t\tgantt.message(\"Serialization to 'old XML' is not implemented\");\n\t\t}\n\t};\n\n\tgantt.serverList = function (name, array) {\n\t\tif (array) {\n\t\t\tthis.serverList[name] = array.slice(0);\n\t\t} else if (!this.serverList[name]) {\n\t\t\tthis.serverList[name] = [];\n\t\t}\n\t\treturn this.serverList[name];\n\t};\n\n};", "module.exports = function(gantt) {\n\tgantt.isReadonly = function (item) {\n\t\tif (item && item[this.config.editable_property]) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn (item && item[this.config.readonly_property]) || this.config.readonly;\n\t\t}\n\t};\n};", "module.exports = function(gantt){\n\t// TODO: why eslint fails on regexp?\n\t// eslint-disable-next-line no-control-regex\n\tvar htmlTags = new RegExp(\"<(?:.|\\n)*?>\", \"gm\");\n\tvar extraSpaces = new RegExp(\" +\", \"gm\");\n\n\tfunction stripHTMLLite(htmlText){\n\t\treturn (htmlText + \"\")\n\t\t\t.replace(htmlTags, \" \").\n\t\t\treplace(extraSpaces, \" \");\n\t}\n\n\tvar singleQuotes = new RegExp(\"'\", \"gm\");\n\tfunction escapeQuotes(text){\n\t\treturn (text + \"\").replace(singleQuotes, \"&#39;\");\n\t}\n\n\tgantt._waiAria = {\n\t\tgetAttributeString: function(attr){\n\t\t\tvar attributes = [\" \"];\n\t\t\tfor(var i in attr){\n\t\t\t\tvar text = escapeQuotes(stripHTMLLite(attr[i]));\n\t\t\t\tattributes.push(i + \"='\" + text + \"'\");\n\t\t\t}\n\t\t\tattributes.push(\" \");\n\t\t\treturn attributes.join(\" \");\n\n\t\t},\n\n\t\tgetTimelineCellAttr:function(dateString){\n\n\t\t\treturn gantt._waiAria.getAttributeString({\"aria-label\": dateString});\n\t\t},\n\n\n\t\t_taskCommonAttr: function(task, div){\n\n\t\t\tif(!(task.start_date && task.end_date))\n\t\t\t\treturn;\n\n\t\t\tdiv.setAttribute(\"aria-label\", stripHTMLLite(gantt.templates.tooltip_text(task.start_date, task.end_date, task)));\n\n\t\t\tif(gantt.isReadonly(task)){\n\t\t\t\tdiv.setAttribute(\"aria-readonly\", true);\n\n\n\t\t\t}\n\n\t\t\tif(task.$dataprocessor_class){\n\t\t\t\tdiv.setAttribute(\"aria-busy\", true);\n\t\t\t}\n\n\n\t\t\tdiv.setAttribute(\"aria-selected\",\n\t\t\t\t(gantt.getState().selected_task == task.id || (gantt.isSelectedTask && gantt.isSelectedTask(task.id))) ? \"true\" : \"false\");\n\t\t},\n\n\t\tsetTaskBarAttr: function(task, div){\n\t\t\tthis._taskCommonAttr(task, div);\n\n\t\t\tif(!gantt.isReadonly(task) && gantt.config.drag_move){\n\t\t\t\tif(task.id != gantt.getState().drag_id){\n\t\t\t\t\tdiv.setAttribute(\"aria-grabbed\", false);\n\t\t\t\t}else{\n\t\t\t\t\tdiv.setAttribute(\"aria-grabbed\", true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttaskRowAttr: function(task, div){\n\n\t\t\tthis._taskCommonAttr(task, div);\n\n\t\t\tif(!gantt.isReadonly(task) && gantt.config.order_branch){\n\t\t\t\tdiv.setAttribute(\"aria-grabbed\", false);\n\t\t\t}\n\n\t\t\tdiv.setAttribute(\"role\", \"row\");\n\n\t\t\tdiv.setAttribute(\"aria-level\", task.$level);\n\n\t\t\tif(gantt.hasChild(task.id)){\n\t\t\t\tdiv.setAttribute(\"aria-expanded\", task.$open ? \"true\" : \"false\");\n\t\t\t}\n\t\t},\n\n\t\tlinkAttr: function(link, div){\n\n\t\t\tvar linkTypes = gantt.config.links;\n\n\t\t\tvar toStart = link.type == linkTypes.finish_to_start || link.type == linkTypes.start_to_start;\n\t\t\tvar fromStart = link.type == linkTypes.start_to_start || link.type == linkTypes.start_to_finish;\n\n\t\t\tvar content = gantt.locale.labels.link + \" \" +  gantt.templates.drag_link(link.source, fromStart, link.target, toStart);\n\n\t\t\tdiv.setAttribute(\"aria-label\", stripHTMLLite(content));\n\t\t\tif(gantt.isReadonly(link)){\n\t\t\t\tdiv.setAttribute(\"aria-readonly\", true);\n\t\t\t}\n\t\t},\n\n\t\tgridSeparatorAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"separator\");\n\t\t},\n\n\t\tlightboxHiddenAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t},\n\n\t\tlightboxVisibleAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"false\");\n\t\t},\n\n\t\tlightboxAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t\tdiv.firstChild.setAttribute(\"role\", \"heading\");\n\t\t},\n\n\t\tlightboxButtonAttrString:function(buttonName){\n\t\t\treturn this.getAttributeString({\"role\":\"button\", \"aria-label\":gantt.locale.labels[buttonName], \"tabindex\":\"0\"});\n\t\t},\n\n\t\tlightboxHeader: function(div, headerText){\n\t\t\tdiv.setAttribute(\"aria-label\", headerText);\n\t\t},\n\n\t\tlightboxSelectAttrString: function(time_option){\n\t\t\tvar label = \"\";\n\n\t\t\tswitch (time_option) {\n\t\t\t\tcase \"%Y\":\n\t\t\t\t\tlabel = gantt.locale.labels.years;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%m\":\n\t\t\t\t\tlabel = gantt.locale.labels.months;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%d\":\n\t\t\t\t\tlabel = gantt.locale.labels.days;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%H:%i\":\n\t\t\t\t\tlabel = gantt.locale.labels.hours + gantt.locale.labels.minutes;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn gantt._waiAria.getAttributeString({\"aria-label\": label});\n\t\t},\n\n\t\tlightboxDurationInputAttrString: function(section){\n\t\t\treturn this.getAttributeString({\"aria-label\": gantt.locale.labels.column_duration, \"aria-valuemin\": \"0\"});\n\t\t},\n\n\t\tgridAttrString: function(){\n\t\t\treturn [\" role='treegrid'\", gantt.config.multiselect ? \"aria-multiselectable='true'\" : \"aria-multiselectable='false'\", \" \"].join(\" \");\n\t\t},\n\n\n\t\tgridScaleRowAttrString: function(){\n\t\t\treturn \"role='row'\";\n\t\t},\n\n\t\tgridScaleCellAttrString: function(column, label){\n\t\t\tvar attrs = \"\";\n\t\t\tif(column.name == \"add\"){\n\t\t\t\tattrs = this.getAttributeString({\"role\":\"button\", \"aria-label\": gantt.locale.labels.new_task});\n\t\t\t}else{\n\n\t\t\t\tvar attributes = {\n\t\t\t\t\t\"role\":\"columnheader\",\n\t\t\t\t\t\"aria-label\": label\n\t\t\t\t};\n\n\t\t\t\tif(gantt._sort && gantt._sort.name == column.name){\n\t\t\t\t\tif(gantt._sort.direction == \"asc\"){\n\t\t\t\t\t\tattributes[\"aria-sort\"] = \"ascending\";\n\t\t\t\t\t}else{\n\t\t\t\t\t\tattributes[\"aria-sort\"] = \"descending\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tattrs = this.getAttributeString(attributes);\n\t\t\t}\n\t\t\treturn attrs;\n\t\t},\n\n\t\tgridDataAttrString: function(){\n\t\t\treturn \"role='rowgroup'\";\n\t\t},\n\n\t\tgridCellAttrString: function(column, textValue){\n\t\t\treturn this.getAttributeString({\"role\":\"gridcell\", \"aria-label\": textValue});\n\t\t},\n\n\t\tgridAddButtonAttrString: function(column){\n\t\t\treturn this.getAttributeString({\"role\":\"button\", \"aria-label\": gantt.locale.labels.new_task});\n\t\t},\n\n\t\tmessageButtonAttrString: function(buttonLabel){\n\t\t\treturn \"tabindex='0' role='button' aria-label='\"+buttonLabel+\"'\";\n\t\t},\n\n\t\tmessageInfoAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"alert\");\n\t\t\t//div.setAttribute(\"tabindex\", \"-1\");\n\t\t},\n\n\t\tmessageModalAttr: function(div, uid){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t\tif(uid){\n\t\t\t\tdiv.setAttribute(\"aria-labelledby\", uid);\n\t\t\t}\n\n\t\t//\tdiv.setAttribute(\"tabindex\", \"-1\");\n\t\t},\n\n\t\tquickInfoAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t},\n\n\t\tquickInfoHeaderAttrString: function(){\n\t\t\treturn \" role='heading' \";\n\t\t},\n\n\t\tquickInfoHeader: function(div, header){\n\t\t\tdiv.setAttribute(\"aria-label\", header);\n\t\t},\n\n\t\tquickInfoButtonAttrString: function(label){\n\t\t\treturn gantt._waiAria.getAttributeString({\"role\":\"button\", \"aria-label\":label, \"tabindex\":\"0\"});\n\t\t},\n\n\t\ttooltipAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"tooltip\");\n\t\t},\n\n\t\ttooltipVisibleAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"false\");\n\t\t},\n\n\t\ttooltipHiddenAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t}\n\t};\n\n\tfunction isDisabled(){\n\t\treturn !gantt.config.wai_aria_attributes;\n\t}\n\n\tfor(var i in gantt._waiAria){\n\t\tgantt._waiAria[i] = (function(payload){\n\t\t\treturn function(){\n\t\t\t\tif(isDisabled()){\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\treturn payload.apply(this, arguments);\n\t\t\t};\n\t\t})(gantt._waiAria[i]);\n\t}\n\n\n};", "module.exports = function(gantt) {\n\tgantt.getGridColumn = function(name) {\n\t\tvar columns = gantt.config.columns;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tif (columns[i].name == name)\n\t\t\t\treturn columns[i];\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tgantt.getGridColumns = function() {\n\t\treturn gantt.config.columns.slice();\n\t};\n};", "module.exports = function(gantt) {\n};", "module.exports = function(gantt) {\n\tfunction isEnabled() {\n\t\treturn gantt.config.auto_types && // if enabled\n\t\t\t(gantt.getTaskType(gantt.config.types.project) == gantt.config.types.project);// and supported\n\t}\n\n\tfunction callIfEnabled(callback) {\n\t\treturn function() {\n\t\t\tif (!isEnabled()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn callback.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction updateParents(childId) {\n\t\tgantt.batchUpdate(function() {\n\t\t\tcheckParent(childId);\n\t\t});\n\t}\n\n\tvar delTaskParent;\n\n\tfunction checkParent(id) {\n\t\tsetTaskType(id);\n\t\tvar parent = gantt.getParent(id);\n\n\t\tif (parent != gantt.config.root_id) {\n\t\t\tcheckParent(parent);\n\t\t}\n\t}\n\n\tfunction setTaskType(id) {\n\t\tid = id.id || id;\n\t\tvar task = gantt.getTask(id);\n\t\tvar targetType = getTaskTypeToUpdate(task);\n\n\t\tif (targetType !== false) {\n\t\t\tupdateTaskType(task, targetType);\n\t\t}\n\t}\n\n\tfunction updateTaskType(task, targetType) {\n\t\ttask.type = targetType;\n\t\tgantt.updateTask(task.id);\n\t}\n\n\tfunction getTaskTypeToUpdate(task) {\n\t\tvar allTypes = gantt.config.types;\n\t\tvar hasChildren = gantt.hasChild(task.id);\n\t\tvar taskType = gantt.getTaskType(task.type);\n\n\t\tif (hasChildren && taskType === allTypes.task) {\n\t\t\treturn allTypes.project;\n\t\t}\n\n\t\tif (!hasChildren && taskType === allTypes.project) {\n\t\t\treturn allTypes.task;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tvar isParsingDone = true;\n\n\tgantt.attachEvent(\"onParse\", callIfEnabled(function() {\n\t\tisParsingDone = false;\n\n\t\tgantt.batchUpdate(function() {\n\t\t\tgantt.eachTask(function(task) {\n\t\t\t\tvar targetType = getTaskTypeToUpdate(task);\n\t\t\t\tif (targetType !== false) {\n\t\t\t\t\tupdateTaskType(task, targetType);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tisParsingDone = true;\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskAdd\",  function() {\n\t\tif (isParsingDone)\n\t\t\tcallIfEnabled(updateParents);\n\t});\n\n\tgantt.attachEvent(\"onAfterTaskUpdate\", function() {\n\t\tif (isParsingDone)\n\t\t\tcallIfEnabled(updateParents);\n\t});\n\n\n\tfunction updateAfterRemoveChild(id){\n\t\tif (id != gantt.config.root_id && gantt.isTaskExists(id)) {\n\t\t\tupdateParents(id);\n\t\t}\n\t}\n\n\tgantt.attachEvent(\"onBeforeTaskDelete\",  callIfEnabled(function(id, task) {\n\t\tdelTaskParent = gantt.getParent(id);\n\t\treturn true;\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskDelete\", callIfEnabled(function(id, task) {\n\t\tupdateAfterRemoveChild(delTaskParent);\n\t}));\n\n\n\tvar originalRowDndParent;\n\n\tgantt.attachEvent(\"onRowDragStart\", callIfEnabled(function(id, target, e) {\n\t\toriginalRowDndParent = gantt.getParent(id);\n\t\treturn true;\n\t}));\n\n\tgantt.attachEvent(\"onRowDragEnd\", callIfEnabled(function(id, target) {\n\t\tupdateAfterRemoveChild(originalRowDndParent);\n\t\tupdateParents(id);\n\t}));\n\n\tvar originalMoveTaskParent;\n\n\tgantt.attachEvent(\"onBeforeTaskMove\", callIfEnabled(function(sid, parent, tindex) {\n\t\toriginalMoveTaskParent = gantt.getParent(sid);\n\t\treturn true;\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskMove\", callIfEnabled(function(id, parent, tindex) {\n\t\tif (document.querySelector(\".gantt_drag_marker\")) {\n\t\t\t// vertical dnd in progress\n\t\t\treturn;\n\t\t}\n\t\tupdateAfterRemoveChild(originalMoveTaskParent);\n\t\tupdateParents(id);\n\t}));\n};", "module.exports = function addPlaceholder(gantt){\n\tfunction isEnabled(){\n\t\treturn gantt.config.placeholder_task;\n\t}\n\n\tfunction callIfEnabled(callback){\n\t\treturn function(){\n\t\t\tif(!isEnabled()){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn callback.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction silenceDataProcessor(dataProcessor){\n\t\tif(dataProcessor && !dataProcessor._silencedPlaceholder){\n\t\t\tdataProcessor._silencedPlaceholder = true;\n\t\t\tdataProcessor.attachEvent(\"onBeforeUpdate\", callIfEnabled(function(id, state, data){\n\t\t\t\tif(data.type == gantt.config.types.placeholder){\n\t\t\t\t\tdataProcessor.setUpdated(id, false);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}));\n\t\t}\n\t}\n\n\tfunction insertPlaceholder(){\n\t\tvar placeholders = gantt.getTaskBy(\"type\", gantt.config.types.placeholder);\n\t\tif(!placeholders.length || !gantt.isTaskExists(placeholders[0].id)){\n\t\t\tvar placeholder = {\n\t\t\t\tunscheduled: true,\n\t\t\t\ttype: gantt.config.types.placeholder,\n\t\t\t\tduration:0,\n\t\t\t\ttext: gantt.locale.labels.new_task\n\t\t\t};\n\t\t\tif(gantt.callEvent(\"onTaskCreated\", [placeholder]) === false){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgantt.addTask(placeholder);\n\t\t\t\n\t\t}\n\t}\n\n\tfunction afterEdit(id){\n\t\tvar item = gantt.getTask(id);\n\t\tif(item.type == gantt.config.types.placeholder) {\n\t\t\tif(item.start_date && item.end_date && item.unscheduled){\n\t\t\t\titem.unscheduled = false;\n\t\t\t}\n\n\t\t\tgantt.batchUpdate(function(){\n\t\t\t\tvar newTask = gantt.copy(item);\n\t\t\t\tgantt.silent(function(){\n\t\t\t\t\tgantt.deleteTask(item.id);\n\t\t\t\t});\n\n\t\t\t\tdelete newTask[\"!nativeeditor_status\"];\n\t\t\t\tnewTask.type = gantt.config.types.task;\n\t\t\t\tnewTask.id = gantt.uid();\n\t\t\t\tgantt.addTask(newTask);\n\n\t\t\t\t//insertPlaceholder();\n\t\t\t});\n\n\t\t}\n\t}\n\n\tgantt.config.types.placeholder = \"placeholder\";\n\tgantt.attachEvent(\"onDataProcessorReady\", callIfEnabled(silenceDataProcessor));\n\n\tvar ready = false;\n\tgantt.attachEvent(\"onGanttReady\", function(){\n\t\tif(ready){\n\t\t\treturn;\n\t\t}\n\t\tready = true;\n\t\tgantt.attachEvent(\"onAfterTaskUpdate\", callIfEnabled(afterEdit));\n\t\tgantt.attachEvent(\"onAfterTaskAdd\", callIfEnabled(function(id, task){\n\t\t\tif(task.type != gantt.config.types.placeholder){\n\t\t\t\tvar placeholders = gantt.getTaskBy(\"type\", gantt.config.types.placeholder);\n\t\t\t\tplaceholders.forEach(function(p){\n\t\t\t\t\tgantt.silent(function(){\n\t\t\t\t\t\tif(gantt.isTaskExists(p.id))\n\t\t\t\t\t\t\tgantt.deleteTask(p.id);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tinsertPlaceholder();\n\t\t\t}\n\t\t}));\n\t\tgantt.attachEvent(\"onParse\", callIfEnabled(insertPlaceholder));\n\t});\n\n\tgantt.attachEvent(\"onBeforeUndoStack\", function(action){\n\t\tfor(var i = 0; i < action.commands.length; i++){\n\t\t\tvar command = action.commands[i];\n\t\t\tif(command.entity === \"task\" && command.value.type === gantt.config.types.placeholder){\n\t\t\t\taction.commands.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t});\n\n};", "var helpers = require(\"../../utils/helpers\");\n\nfunction createResourceMethods(gantt){\n\n\tvar resourceTaskCache = {};\n\n\tgantt.$data.tasksStore.attachEvent(\"onStoreUpdated\", function(){\n\t\tresourceTaskCache = {};\n\t});\n\n\tfunction getTaskBy(propertyName, propertyValue) {\n\t\tif (typeof propertyName == \"function\") {\n\t\t\treturn filterResourceTasks(propertyName);\n\t\t} else {\n\t\t\tif (helpers.isArray(propertyValue)) {\n\t\t\t\treturn getResourceTasks(propertyName, propertyValue);\n\t\t\t} else {\n\t\t\t\treturn getResourceTasks(propertyName, [propertyValue]);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction filterResourceTasks(filter) {\n\t\tvar res = [];\n\t\tgantt.eachTask(function (task) {\n\t\t\tif (filter(task)) {\n\t\t\t\tres.push(task);\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t}\n\n\tfunction getResourceTasks(property, resourceIds) {\n\t\tvar res;\n\n\t\tvar cacheKey = resourceIds.join(\"_\") + \"_\" + property;\n\n\t\tvar resourceHash = {};\n\t\tfor (var i = 0; i < resourceIds.length; i++) {\n\t\t\tresourceHash[resourceIds[i]] = true;\n\t\t}\n\n\t\tif (!resourceTaskCache[cacheKey]) {\n\t\t\tres = resourceTaskCache[cacheKey] = [];\n\t\t\tgantt.eachTask(function (task) {\n\t\t\t\tif (task.type == gantt.config.types.project)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar resourceValue;\n\t\t\t\tif (!helpers.isArray(task[property])) {\n\t\t\t\t\tresourceValue = [task[property]];\n\t\t\t\t} else {\n\t\t\t\t\tresourceValue = task[property];\n\t\t\t\t}\n\n\t\t\t\thelpers.forEach(resourceValue, function(value) {\n\t\t\t\t\tif(value && (resourceHash[value]  || resourceHash[value.resource_id])) {\n\t\t\t\t\t\tres.push(task);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tres = resourceTaskCache[cacheKey];\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tfunction getResourceLoad(resource, resourceProperty, scale, timeline){\n\t\tvar cacheKey = resource.id + \"_\" + resourceProperty  + \"_\" + scale.unit + \"_\" + scale.step;\n\t\tvar res;\n\t\tif (!resourceTaskCache[cacheKey]) {\n\t\t\tres = resourceTaskCache[cacheKey] = calculateResourceLoad(resource, resourceProperty, scale, timeline);\n\n\t\t} else {\n\t\t\tres = resourceTaskCache[cacheKey];\n\t\t}\n\t\treturn res;\n\t}\n\n\tfunction calculateResourceLoad(resource, resourceProperty, scale, timeline) {\n\n\t\tvar tasks;\n\t\tif(resource.$role == \"task\"){\n\t\t\ttasks = [];\n\t\t}else{\n\t\t\ttasks = getTaskBy(resourceProperty, resource.id);\n\t\t}\n\t\tvar step = scale.unit;\n\t\tvar timegrid = {};\n\n\t\tfor (var i = 0; i < tasks.length; i++) {\n\t\t\tvar task = tasks[i];\n\n\t\t\tvar currDate = gantt.date[step + \"_start\"](new Date(task.start_date));\n\n\t\t\twhile (currDate < task.end_date) {\n\n\t\t\t\tvar date = currDate;\n\t\t\t\tcurrDate = gantt.date.add(currDate, 1, step);\n\n\t\t\t\tif (!gantt.isWorkTime({date: date, task: task, unit: step})) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar timestamp = date.valueOf();\n\t\t\t\tif (!timegrid[timestamp]){\n\t\t\t\t\ttimegrid[timestamp] = [];\n\t\t\t\t}\n\n\t\t\t\ttimegrid[timestamp].push(task);\n\t\t\t}\n\t\t}\n\n\t\tvar timetable = [];\n\t\tvar start, end, tasks;\n\t\tvar config = timeline.$getConfig();\n\n\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\tstart = new Date(scale.trace_x[i]);\n\t\t\tend = gantt.date.add(start, 1, step);\n\t\t\ttasks = timegrid[start.valueOf()] || [];\n\t\t\tif(tasks.length || config.resource_render_empty_cells){\n\t\t\t\ttimetable.push({\n\t\t\t\t\tstart_date: start,\n\t\t\t\t\tend_date: end,\n\t\t\t\t\ttasks: tasks\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t\treturn timetable;\n\t}\n\n\tfunction renderResourceLine(resource, timeline) {\n\t\tvar config = timeline.$getConfig(),\n\t\t\ttemplates = timeline.$getTemplates();\n\t\tvar timetable = getResourceLoad(resource, config.resource_property, timeline.getScale(), timeline);\n\n\t\tvar cells = [];\n\t\tfor (var i = 0; i < timetable.length; i++) {\n\n\t\t\tvar day = timetable[i];\n\n\t\t\tvar css = templates.resource_cell_class(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar content = templates.resource_cell_value(day.start_date, day.end_date, resource, day.tasks);\n\n\t\t\tif (css || content){\n\t\t\t\tvar sizes = timeline.getItemPosition(resource, day.start_date, day.end_date);\n\t\t\t\tvar el = document.createElement('div');\n\t\t\t\tel.className = [\"gantt_resource_marker\", css].join(\" \");\n\n\t\t\t\tel.style.cssText = [\n\t\t\t\t\t'left:' + sizes.left + 'px',\n\t\t\t\t\t'width:' + sizes.width + 'px',\n\t\t\t\t\t'height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'line-height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'top:' + sizes.top + 'px'\n\t\t\t\t].join(\";\");\n\n\t\t\t\tif(content)\n\t\t\t\t\tel.innerHTML = content;\n\n\t\t\t\tcells.push(el);\n\t\t\t}\n\n\t\t}\n\n\t\tvar row = null;\n\t\tif(cells.length){\n\t\t\trow = document.createElement(\"div\");\n\t\t\tfor(var i = 0; i < cells.length; i++){\n\t\t\t\trow.appendChild(cells[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn row;\n\t}\n\n\n\tfunction renderBar(level, start, end, timeline){\n\t\tvar top = (1 - (level*1||0))*100;\n\t\tvar left = timeline.posFromDate(start);\n\t\tvar right = timeline.posFromDate(end);\n\t\tvar element = document.createElement(\"div\");\n\t\telement.className = \"gantt_histogram_hor_bar\";\n\t\telement.style.top = top + '%';\n\t\telement.style.left = left + \"px\";\n\t\telement.style.width = (right - left + 1) + \"px\";\n\t\treturn element;\n\t}\n\tfunction renderConnection(prevLevel, nextLevel, left){\n\t\tif(prevLevel === nextLevel){\n\t\t\treturn null;\n\t\t}\n\n\t\tvar top = 1 - Math.max(prevLevel, nextLevel);\n\t\tvar height = Math.abs(prevLevel - nextLevel);\n\t\tvar element = document.createElement(\"div\");\n\t\telement.className = \"gantt_histogram_vert_bar\";\n\t\telement.style.top = top*100 + \"%\";\n\t\telement.style.height = height*100 + \"%\";\n\t\telement.style.left = left + \"px\";\n\n\t\treturn element;\n\t}\n\n\tfunction renderHistogramLine(capacity, timeline, maxCapacity){\n\t\tvar scale = timeline.getScale();\n\n\t\tvar el = document.createElement(\"div\");\n\n\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\tvar colStart = scale.trace_x[i];\n\t\t\tvar colEnd = scale.trace_x[i + 1] || gantt.date.add(colStart, scale.step, scale.unit);\n\t\t\tvar col = scale.trace_x[i].valueOf();\n\t\t\tvar level = Math.min(capacity[col]/maxCapacity, 1) || 0;\n\t\t\tif(level < 0){\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar nextLevel = Math.min(capacity[colEnd.valueOf()]/maxCapacity, 1) || 0;\n\n\n\t\t\tvar bar = renderBar(level, colStart, colEnd, timeline);\n\t\t\tif(bar){\n\t\t\t\tel.appendChild(bar);\n\t\t\t}\n\t\t\tvar connection = renderConnection(level, nextLevel, timeline.posFromDate(colEnd));\n\t\t\tif(connection){\n\t\t\t\tel.appendChild(connection);\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn el;\n\t}\n\n\tfunction renderResourceHistogram(resource, timeline) {\n\t\tvar config = timeline.$getConfig(),\n\t\t\ttemplates = timeline.$getTemplates();\n\t\tvar timetable = getResourceLoad(resource, config.resource_property, timeline.getScale(), timeline);\n\n\t\tvar cells = [];\n\t\tvar capacityMatrix = {};\n\t\tvar maxCapacity = resource.capacity || timeline.$config.capacity || 24;\n\t\tfor (var i = 0; i < timetable.length; i++) {\n\n\t\t\tvar day = timetable[i];\n\n\t\t\tvar css = templates.histogram_cell_class(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar content = templates.histogram_cell_label(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar fill = templates.histogram_cell_allocated(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar capacity = templates.histogram_cell_capacity(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tcapacityMatrix[day.start_date.valueOf()] = capacity || 0;\n\t\t\tif(css || content){\n\t\t\t\tvar sizes = timeline.getItemPosition(resource, day.start_date, day.end_date);\n\t\t\t\tvar el = document.createElement('div');\n\t\t\t\tel.className = [\"gantt_histogram_cell\", css].join(\" \");\n\n\t\t\t\tel.style.cssText = [\n\t\t\t\t\t'left:' + sizes.left + 'px',\n\t\t\t\t\t'width:' + sizes.width + 'px',\n\t\t\t\t\t'height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'line-height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'top:' + (sizes.top + 1) + 'px'\n\t\t\t\t].join(\";\");\n\n\n\t\t\t\tif (content) {\n\t\t\t\t\tcontent = \"<div class='gantt_histogram_label'>\" + content +\"</div>\";\n\t\t\t\t}\n\n\t\t\t\tif (fill) {\n\n\t\t\t\t\tcontent = \"<div class='gantt_histogram_fill' style='height:\"+(Math.min(fill/maxCapacity||0, 1)*100)+\"%;'></div>\" + content;\n\t\t\t\t}\n\n\t\t\t\tif (content)\n\t\t\t\t\tel.innerHTML = content;\n\n\t\t\t\tcells.push(el);\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar row = null;\n\t\tif (cells.length) {\n\t\t\trow = document.createElement(\"div\");\n\t\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\t\trow.appendChild(cells[i]);\n\t\t\t}\n\n\t\t\tvar capacityElement = renderHistogramLine(capacityMatrix, timeline, maxCapacity);\n\n\t\t\tif (capacityElement) {\n\t\t\t\tcapacityElement.setAttribute(\"data-resource-id\", resource.id);\n\t\t\t\tcapacityElement.style.position = \"absolute\";\n\t\t\t\tcapacityElement.style.top = (sizes.top + 1) + \"px\";\n\t\t\t\tcapacityElement.style.height = (config.row_height - 1) + \"px\";\n\t\t\t\tcapacityElement.style.left = 0;\n\t\t\t\trow.appendChild(capacityElement);\n\t\t\t}\n\t\t}\n\n\t\treturn row;\n\t}\n\n\tfunction selectAssignments(resourceId, taskId, result){\n\t\tvar property = gantt.config.resource_property;\n\t\tvar owners = [];\n\t\tif (gantt.getDatastore(\"task\").exists(taskId)) {\n\t\t\tvar task = gantt.getTask(taskId);\n\t\t\towners = task[property] || [];\n\t\t}\n\n\t\tif (!Array.isArray(owners)) {\n\t\t\towners = [owners];\n\t\t}\n\t\tfor (var i = 0; i < owners.length; i++) {\n\t\t\tif (owners[i].resource_id == resourceId) {\n\t\t\t\tresult.push({task_id: task.id, resource_id:owners[i].resource_id, value:owners[i].value});\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getResourceAssignments(resourceId, taskId){\n\t\t// resource assignment as an independent module:\n\t\t// {taskId:, resourceId, value}\n\t\t// TODO: probably should add a separate datastore for these\n\t\tvar assignments = [];\n\t\tvar property = gantt.config.resource_property;\n\t\tif(taskId !== undefined){\n\t\t\tselectAssignments(resourceId, taskId, assignments);\n\t\t}else{\n\t\t\tvar tasks = gantt.getTaskBy(property, resourceId);\n\t\t\ttasks.forEach(function(task){\n\t\t\t\tselectAssignments(resourceId, task.id, assignments);\n\t\t\t});\n\t\t}\n\t\treturn assignments;\n\t}\n\n\treturn {\n\t\trenderLine: renderResourceLine,\n\t\trenderHistogram: renderResourceHistogram,\n\t\tfilterTasks: getTaskBy,\n\t\tgetResourceAssignments: getResourceAssignments\n\t};\n}\n\nmodule.exports = function(gantt){\n\tvar methods = createResourceMethods(gantt);\n\n\tgantt.getTaskBy = methods.filterTasks;\n\tgantt.getResourceAssignments = methods.getResourceAssignments;\n\tgantt.$ui.layers.resourceRow = methods.renderLine;\n\tgantt.$ui.layers.resourceHistogram = methods.renderHistogram;\n\tgantt.config.resource_property = \"owner_id\";\n\tgantt.config.resource_store = \"resource\";\n\tgantt.config.resource_render_empty_cells = false;\n\n\t/**\n\t * these are placeholder functions that should be redefined by the user\n\t*/\n\tgantt.templates.histogram_cell_class = function(start_date, end_date, resource, tasks) {};\n\tgantt.templates.histogram_cell_label = function(start_date, end_date, resource, tasks) {\n\t\treturn tasks.length + \"/3\";\n\t};\n\tgantt.templates.histogram_cell_allocated = function(start_date, end_date, resource, tasks) {\n\t\treturn tasks.length / 3;\n\t};\n\tgantt.templates.histogram_cell_capacity = function(start_date, end_date, resource, tasks) {\n\t\treturn 0;\n\t};\n\n\n\n\tgantt.templates.resource_cell_class = function(start, end, resource, tasks) {\n\t\tvar css = \"\";\n\t\tif (tasks.length <= 1) {\n\t\t\tcss = \"gantt_resource_marker_ok\";\n\t\t} else {\n\t\t\tcss = \"gantt_resource_marker_overtime\";\n\t\t}\n\t\treturn css;\n\t};\n\n\tgantt.templates.resource_cell_value = function(start, end, resource, tasks) {\n\t\treturn tasks.length * 8;\n\t};\n};\n\n\n", "if (window.dhtmlx){\n\n\tif (!window.dhtmlx.attaches)\n\twindow.dhtmlx.attaches = {};\n\n\twindow.dhtmlx.attaches.attachGantt=function(start, end, gantt){\n\t\tvar obj = document.createElement(\"DIV\");\n\n\t\tgantt = gantt || window.gantt;\n\n\t\tobj.id = \"gantt_\"+ gantt.uid();\n\t\tobj.style.width = \"100%\";\n\t\tobj.style.height = \"100%\";\n\t\tobj.cmp = \"grid\";\n\n\t\tdocument.body.appendChild(obj);\n\t\tthis.attachObject(obj.id);\n\t\tthis.dataType = \"gantt\";\n\t\tthis.dataObj = gantt;\n\n\t\tvar that = this.vs[this.av];\n\t\tthat.grid = gantt;\n\n\t\tgantt.init(obj.id, start, end);\n\t\tobj.firstChild.style.border = \"none\";\n\n\t\tthat.gridId = obj.id;\n\t\tthat.gridObj = obj;\n\n\t\tvar method_name=\"_viewRestore\";\n\t\treturn this.vs[this[method_name]()].grid;\n\t};\n\n}\nif (typeof(window.dhtmlXCellObject) != \"undefined\") {\n\n\twindow.dhtmlXCellObject.prototype.attachGantt=function(start, end, gantt){\n\t\tgantt = gantt || window.gantt;\n\n\t\tvar obj = document.createElement(\"DIV\");\n\t\tobj.id = \"gantt_\"+gantt.uid();\n\t\tobj.style.width = \"100%\";\n\t\tobj.style.height = \"100%\";\n\t\tobj.cmp = \"grid\";\n\n\t\tdocument.body.appendChild(obj);\n\t\tthis.attachObject(obj.id);\n\n\t\tthis.dataType = \"gantt\";\n\t\tthis.dataObj = gantt;\n\n\t\tgantt.init(obj.id, start, end);\n\t\tobj.firstChild.style.border = \"none\";\n\n\t\tobj = null;\n\t\tthis.callEvent(\"_onContentAttach\",[]);\n\n\t\treturn this.dataObj;\n\t};\n}\n\nmodule.exports = null;", "if (window.jQuery){\n\n\t(function( $ ){\n\n\t\tvar methods = [];\n\t\t$.fn.dhx_gantt = function(config){\n\t\t\tconfig = config || {};\n\t\t\tif (typeof(config) === 'string') {\n\t\t\t\tif (methods[config] ) {\n\t\t\t\t\treturn methods[config].apply(this, []);\n\t\t\t\t}else {\n\t\t\t\t\t$.error('Method ' +  config + ' does not exist on jQuery.dhx_gantt');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar views = [];\n\t\t\t\tthis.each(function() {\n\t\t\t\t\tif (this && this.getAttribute){\n\t\t\t\t\t\tif (!this.gantt && !(window.gantt.$root == this)){\n\n\t\t\t\t\t\t\tvar newgantt = (window.gantt.$container && window.Gantt) ? window.Gantt.getGanttInstance():window.gantt;\n\t\t\t\t\t\t\tfor (var key in config)\n\t\t\t\t\t\t\t\tif (key!=\"data\")\n\t\t\t\t\t\t\t\t\tnewgantt.config[key] = config[key];\n\n\t\t\t\t\t\t\tnewgantt.init(this);\n\t\t\t\t\t\t\tif (config.data)\n\t\t\t\t\t\t\t\tnewgantt.parse(config.data);\n\n\t\t\t\t\t\t\tviews.push(newgantt);\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tviews.push(typeof this.gantt == \"object\" ? this.gantt : window.gantt);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\n\t\t\t\tif (views.length === 1) return views[0];\n\t\t\t\treturn views;\n\t\t\t}\n\t\t};\n\n\t})(window.jQuery);\n\n}\n\n\nmodule.exports = null;", "var createWbs = (function(gantt){\n\treturn {\n\t_needRecalc: true,\n\treset: function(){\n\t\tthis._needRecalc = true;\n\t},\n\t_isRecalcNeeded: function(){\n\t\treturn (!this._isGroupSort() && this._needRecalc);\n\t},\n\t_isGroupSort: function() {\n\t\treturn !!(gantt._groups && gantt._groups.is_active());\n\t},\n\t_getWBSCode: function(task) {\n\t\tif(!task) return \"\";\n\n\t\tif(this._isRecalcNeeded()){\n\t\t\tthis._calcWBS();\n\t\t}\n\n\t\tif(task.$virtual) return \"\";\n\t\tif(this._isGroupSort()) return task.$wbs || \"\";\n\n\t\tif(!task.$wbs) {\n\t\t\tthis.reset();\n\t\t\tthis._calcWBS();\n\t\t}\n\t\treturn task.$wbs;\n\t},\n\t_setWBSCode: function(task, value) {\n\t\ttask.$wbs = value;\n\t},\n\tgetWBSCode: function(task) {\n\t\treturn this._getWBSCode(task);\n\t},\n\tgetByWBSCode: function(code){\n\t\tvar parts = code.split(\".\");\n\t\tvar currentNode = gantt.config.root_id;\n\t\tfor(var i = 0; i < parts.length; i++){\n\t\t\tvar children = gantt.getChildren(currentNode);\n\t\t\tvar index = parts[i]*1 - 1;\n\t\t\tif(gantt.isTaskExists(children[index])){\n\t\t\t\tcurrentNode = children[index];\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tif(gantt.isTaskExists(currentNode)){\n\t\t\treturn gantt.getTask(currentNode);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t},\n\t_calcWBS: function() {\n\t\tif(!this._isRecalcNeeded()) return;\n\n\t\tvar _isFirst = true;\n\t\tgantt.eachTask(function(ch) {\n\t\t\tif(_isFirst) {\n\t\t\t\t_isFirst = false;\n\t\t\t\tthis._setWBSCode(ch, \"1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _prevSibling = gantt.getPrevSibling(ch.id);\n\t\t\tif (_prevSibling !== null) {\n\t\t\t\tvar _wbs = gantt.getTask(_prevSibling).$wbs;\n\t\t\t\tif(_wbs) {\n\t\t\t\t\t_wbs = _wbs.split(\".\");\n\t\t\t\t\t_wbs[_wbs.length-1]++;\n\t\t\t\t\tthis._setWBSCode(ch, _wbs.join(\".\"));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _parent = gantt.getParent(ch.id);\n\t\t\t\tthis._setWBSCode(ch, gantt.getTask(_parent).$wbs + \".1\");\n\t\t\t}\n\t\t}, gantt.config.root_id, this);\n\n\t\tthis._needRecalc = false;\n\t}\n};\n});\n\nmodule.exports = function(gantt){\n\tvar wbs = createWbs(gantt);\n\tgantt.getWBSCode = function getWBSCode(task) {\n\t\treturn wbs.getWBSCode(task);\n\t};\n\n\tgantt.getTaskByWBSCode = function(code) {\n\t\treturn wbs.getByWBSCode(code);\n\t};\n\n\tfunction resetCache(){\n\t\twbs.reset();\n\t\treturn true;\n\t}\n\n\tgantt.attachEvent(\"onAfterTaskMove\", resetCache);\n\tgantt.attachEvent(\"onBeforeParse\", resetCache);\n\tgantt.attachEvent(\"onAfterTaskDelete\", resetCache);\n\tgantt.attachEvent(\"onAfterTaskAdd\", resetCache);\n\tgantt.attachEvent(\"onAfterSort\", resetCache);\n\n};\n", "function createMethod(gantt){\n\tvar methods = {};\n\tvar isActive = false;\n\tfunction disableMethod(methodName, dummyMethod){\n\t\tdummyMethod = typeof dummyMethod == \"function\" ? dummyMethod : function(){};\n\n\t\tif(!methods[methodName]){\n\t\t\tmethods[methodName] = this[methodName];\n\t\t\tthis[methodName] = dummyMethod;\n\t\t}\n\t}\n\tfunction restoreMethod(methodName){\n\t\tif(methods[methodName]){\n\t\t\tthis[methodName] = methods[methodName];\n\t\t\tmethods[methodName] = null;\n\t\t}\n\t}\n\tfunction disableMethods(methodsHash){\n\t\tfor(var i in methodsHash){\n\t\t\tdisableMethod.call(this, i, methodsHash[i]);\n\t\t}\n\t}\n\tfunction restoreMethods(){\n\t\tfor(var i in methods){\n\t\t\trestoreMethod.call(this, i);\n\t\t}\n\t}\n\n\tfunction batchUpdatePayload(callback){\n\t\ttry{\n\t\t\tcallback();\n\t\t}catch(e){\n\t\t\twindow.console.error(e);\n\t\t}\n\t}\n\n\tvar state = gantt.$services.getService(\"state\");\n\tstate.registerProvider(\"batchUpdate\", function(){\n\t\treturn {\n\t\t\tbatch_update: isActive\n\t\t};\n\t}, true);\n\n\treturn function batchUpdate(callback, noRedraw) {\n\t\tif(isActive){\n\t\t\t// batch mode is already active\n\t\t\tbatchUpdatePayload(callback);\n\t\t\treturn;\n\t\t}\n\n\t\tvar call_dp = (this._dp && this._dp.updateMode != \"off\");\n\t\tvar dp_mode;\n\t\tif (call_dp){\n\t\t\tdp_mode = this._dp.updateMode;\n\t\t\tthis._dp.setUpdateMode(\"off\");\n\t\t}\n\n\t\t// temporary disable some methods while updating multiple tasks\n\t\tvar resetProjects = {};\n\t\tvar methods = {\n\t\t\t\"render\":true,\n\t\t\t\"refreshData\":true,\n\t\t\t\"refreshTask\":true,\n\t\t\t\"refreshLink\":true,\n\t\t\t\"resetProjectDates\":function(task){\n\t\t\t\tresetProjects[task.id] = task;\n\t\t\t}\n\t\t};\n\n\t\tdisableMethods.call(this, methods);\n\n\t\tisActive = true;\n\t\tthis.callEvent(\"onBeforeBatchUpdate\", []);\n\n\t\tbatchUpdatePayload(callback);\n\n\t\tthis.callEvent(\"onAfterBatchUpdate\", []);\n\n\t\trestoreMethods.call(this);\n\n\t\t// do required updates after changes applied\n\t\tfor(var i in resetProjects){\n\t\t\tthis.resetProjectDates(resetProjects[i]);\n\t\t}\n\n\t\tisActive = false;\n\n\t\tif(!noRedraw){\n\t\t\tthis.render();\n\t\t}\n\n\t\tif (call_dp) {\n\t\t\tthis._dp.setUpdateMode(dp_mode);\n\t\t\tthis._dp.setGanttMode(\"tasks\");\n\t\t\tthis._dp.sendData();\n\t\t\tthis._dp.setGanttMode(\"links\");\n\t\t\tthis._dp.sendData();\n\t\t}\n\t};\n\n\n\n}\n\nmodule.exports = function(gantt){\n\tgantt.batchUpdate = createMethod(gantt);\n};", "var domHelpers = require(\"../../utils/dom_helpers\");\n\nmodule.exports = function(gantt){\n\n\tvar scrollRange = 50,\n\t\tscrollStep = 30,\n\t\tscrollDelay = 10,\n\t\tscrollSpeed = 50;\n\n\tvar interval = null,\n\t\tisMove = false,\n\t\tdelayTimeout = null,\n\t\tstartPos = {\n\t\t\tstarted: false\n\t\t},\n\t\teventPos = {};\n\n\tfunction getAutoscrollContainer(){\n\t\treturn gantt.$task || gantt.$grid || gantt.$root;\n\t}\n\n\tfunction isScrollState() {\n\t\tvar dragMarker = !!document.querySelector(\".gantt_drag_marker\");\n\t\tvar isResize = !!document.querySelector(\".gantt_drag_marker.gantt_grid_resize_area\");\n\t\tvar isLink = !!document.querySelector(\".gantt_link_direction\");\n\t\tisMove = dragMarker && !isResize && !isLink;\n\t\treturn !((!gantt.getState().drag_mode && !dragMarker) || isResize);\n\t}\n\n\tfunction defineDelayTimeout(state) {\n\t\tif (delayTimeout) {\n\t\t\tclearTimeout(delayTimeout);\n\t\t\tdelayTimeout = null;\n\t\t}\n\t\tif (state) {\n\t\t\tvar speed = gantt.config.autoscroll_speed;\n\t\t\tif (speed && speed < 10) // limit speed value to 10 \n\t\t\t\tspeed = 10;\n\n\t\t\tdelayTimeout = setTimeout(function() {\n\t\t\t\tinterval = setInterval(tick, speed || scrollSpeed);\n\t\t\t}, gantt.config.autoscroll_delay || scrollDelay);\n\t\t}\n\t}\n\n\tfunction defineScrollInterval(state) {\n\t\tif (state) {\n\t\t\tdefineDelayTimeout(true);\n\t\t\tif (!startPos.started) {\n\t\t\t\tstartPos.x = eventPos.x;\n\t\t\t\tstartPos.y = eventPos.y;\n\t\t\t\tstartPos.started = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (interval) {\n\t\t\t\tclearInterval(interval);\n\t\t\t\tinterval = null;\n\t\t\t}\n\t\t\tdefineDelayTimeout(false);\n\t\t\tstartPos.started = false;\n\t\t}\n\t}\n\n\tfunction autoscrollInterval(event) {\n\n\t\tvar isScroll = isScrollState();\n\n\t\tif ((interval || delayTimeout) && !isScroll) { \n\t\t\tdefineScrollInterval(false);\n\t\t}\n\n\t\tif (!gantt.config.autoscroll || !isScroll) {\n\t\t\treturn false;\n\t\t}\n\n\t\teventPos = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY\n\t\t};\n\n\t\tif (!interval && isScroll) {\n\t\t\tdefineScrollInterval(true);\n\t\t}\n\t}\n\n\tfunction tick() {\n\n\t\tif (!isScrollState()) {\n\t\t\tdefineScrollInterval(false);\n\t\t\treturn false;\n\t\t}\n\n\t\tvar box = domHelpers.getNodePosition(getAutoscrollContainer());\n\t\tvar posX = eventPos.x - box.x; \n\t\tvar posY = eventPos.y - box.y;\n\n\t\tvar scrollLeft = isMove ? 0 : need_scroll(posX, box.width, startPos.x - box.x);\n\t\tvar scrollTop = need_scroll(posY, box.height, startPos.y - box.y);\n\n\t\tvar scrollState = gantt.getScrollState();\n\n\t\tvar currentScrollTop = scrollState.y,\n\t\t\tscrollOuterHeight = scrollState.inner_height,\n\t\t\tscrollInnerHeight = scrollState.height,\n\t\t\tcurrentScrollLeft = scrollState.x,\n\t\t\tscrollOuterWidth = scrollState.inner_width,\n\t\t\tscrollInnerWidth = scrollState.width;\n\n\t\t// do scrolling only if we have scrollable area to do so\n\t\tif (scrollTop && !scrollOuterHeight) {\n\t\t\tscrollTop = 0;\n\t\t} else if (scrollTop < 0 && !currentScrollTop) {\n\t\t\tscrollTop = 0;\n\t\t} else if (scrollTop > 0 && currentScrollTop + scrollOuterHeight >= scrollInnerHeight + 2) {\n\t\t\tscrollTop = 0;\n\t\t}\n\n\t\tif (scrollLeft && !scrollOuterWidth) {\n\t\t\tscrollLeft = 0;\n\t\t} else if (scrollLeft < 0 && !currentScrollLeft) {\n\t\t\tscrollLeft = 0;\n\t\t} else if (scrollLeft > 0 && currentScrollLeft + scrollOuterWidth >= scrollInnerWidth) {\n\t\t\tscrollLeft = 0;\n\t\t}\n\n\t\tvar step = gantt.config.autoscroll_step;\n\n\t\tif (step && step < 2) // limit step value to 2\n\t\t\tstep = 2;\n\n\t\tscrollLeft = scrollLeft * (step || scrollStep);\n\t\tscrollTop = scrollTop * (step || scrollStep);\n\n\t\tif (scrollLeft || scrollTop) {\n\t\t\tscroll(scrollLeft, scrollTop);\n\t\t} \n\n\t}\n\n\tfunction need_scroll(pos, boxSize, startCoord) {\n\t\tif ((pos - scrollRange < 0) && (pos < startCoord))\n\t\t\treturn -1;\n\t\telse if ((pos > boxSize - scrollRange) && (pos > startCoord))\n\t\t\treturn 1;\n\t\treturn 0;\n\t}\n\n\tfunction scroll(left, top) {\n\t\tvar scrollState = gantt.getScrollState();\n\n\t\tvar scrollLeft = null,\n\t\t\tscrollTop = null;\n\n\t\tif (left) {\n\t\t\tscrollLeft = scrollState.x + left;\n\t\t\tscrollLeft = Math.min(scrollState.width, scrollLeft);\n\t\t\tscrollLeft = Math.max(0, scrollLeft);\n\t\t}\n\n\t\tif (top) {\n\t\t\tscrollTop = scrollState.y + top;\n\t\t\tscrollTop = Math.min(scrollState.height, scrollTop);\n\t\t\tscrollTop = Math.max(0, scrollTop);\n\t\t}\n\n\t\tgantt.scrollTo(scrollLeft, scrollTop);\n\t}\n\n\tgantt.attachEvent(\"onGanttReady\", function() {\n\t\tgantt.eventRemove(document.body, \"mousemove\", autoscrollInterval);\n\t\tgantt.event(document.body, \"mousemove\", autoscrollInterval);\n\t});\n\n};", "module.exports = function(gantt){\n\tvar modules = [\n\t\trequire(\"./autoscroll\"),\n\t\trequire(\"./batch_update\"),\n\t\trequire(\"./wbs\"),\n\t\trequire(\"./jquery_hooks\"),\n\t\trequire(\"./dhtmlx_hooks\"),\n\t\trequire(\"./resources\"),\n\t\trequire(\"./new_task_placeholder\"),\n\t\trequire(\"./auto_task_types\")\n\t];\n\n\tfor(var i = 0; i < modules.length; i++){\n\t\tif(modules[i])\n\t\t\tmodules[i](gantt);\n\t}\n};", "var utils = require(\"../../utils/utils\");\nvar eventable = require(\"../../utils/eventable\");\n\n/**\n\t* \t@desc: constructor, data processor object \n\t*\t@param: serverProcessorURL - url used for update\n\t*\t@type: public\n\t*/\nvar dataProcessor = function (serverProcessorURL) {\n\tthis.serverProcessor = serverProcessorURL;\n\tthis.action_param = \"!nativeeditor_status\";\n\n\tthis.object = null;\n\tthis.updatedRows = []; //ids of updated rows\n\n\tthis.autoUpdate = true;\n\tthis.updateMode = \"cell\";\n\tthis._tMode = \"GET\";\n\tthis._headers = null;\n\tthis._payload = null;\n\tthis.post_delim = \"_\";\n\n\tthis._waitMode = 0;\n\tthis._in_progress = {};//?\n\tthis._invalid = {};\n\tthis.mandatoryFields = [];\n\tthis.messages = [];\n\n\tthis.styles = {\n\t\tupdated: \"font-weight:bold;\",\n\t\tinserted: \"font-weight:bold;\",\n\t\tdeleted: \"text-decoration : line-through;\",\n\t\tinvalid: \"background-color:FFE0E0;\",\n\t\tinvalid_cell: \"border-bottom:2px solid red;\",\n\t\terror: \"color:red;\",\n\t\tclear: \"font-weight:normal;text-decoration:none;\"\n\t};\n\n\tthis.enableUTFencoding(true);\n\teventable(this);\n\n\treturn this;\n};\n\ndataProcessor.prototype = {\n\tsetTransactionMode: function (mode, total) {\n\t\tif (typeof mode == \"object\") {\n\t\t\tthis._tMode = mode.mode || this._tMode;\n\n\t\t\tif (utils.defined(mode.headers)) {\n\t\t\t\tthis._headers = mode.headers;\n\t\t\t}\n\n\t\t\tif (utils.defined(mode.payload)) {\n\t\t\t\tthis._payload = mode.payload;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._tMode = mode;\n\t\t\tthis._tSend = total;\n\t\t}\n\n\t\tif (this._tMode == \"REST\") {\n\t\t\tthis._tSend = false;\n\t\t\tthis._endnm = true;\n\t\t}\n\n\t\tif (this._tMode == \"JSON\" || this._tMode == \"REST-JSON\") {\n\t\t\tthis._tSend = false;\n\t\t\tthis._endnm = true;\n\t\t\tthis._serialize_as_json = true;\n\t\t\tthis._headers = this._headers || {};\n\t\t\tthis._headers[\"Content-type\"] = \"application/json\";\n\t\t}\n\t},\n\tescape: function (data) {\n\t\tif (this._utf)\n\t\t\treturn encodeURIComponent(data);\n\t\telse\n\t\t\treturn escape(data);\n\t},\n    /**\n\t* \t@desc: allows to set escaping mode\n\t*\t@param: true - utf based escaping, simple - use current page encoding\n\t*\t@type: public\n\t*/\n\tenableUTFencoding: function (mode) {\n\t\tthis._utf = !!mode;\n\t},\n    /**\n\t* \t@desc: allows to define, which column may trigger update\n\t*\t@param: val - array or list of true/false values\n\t*\t@type: public\n\t*/\n\tsetDataColumns: function (val) {\n\t\tthis._columns = (typeof val == \"string\") ? val.split(\",\") : val;\n\t},\n    /**\n\t* \t@desc: get state of updating\n\t*\t@returns:   true - all in sync with server, false - some items not updated yet.\n\t*\t@type: public\n\t*/\n\tgetSyncState: function () {\n\t\treturn !this.updatedRows.length;\n\t},\n\t/**\n\t* \t@desc: enable/disable named field for data syncing, will use column ids for grid\n\t*\t@param:   mode - true/false\n\t*\t@type: public\n\t*/\n\tenableDataNames: function (mode) {\n\t\tthis._endnm = !!mode;\n\t},\n\t/**\n\t* \t@desc: enable/disable mode , when only changed fields and row id send to the server side, instead of all fields in default mode\n\t*\t@param:   mode - true/false\n\t*\t@type: public\n\t*/\n\tenablePartialDataSend: function (mode) {\n\t\tthis._changed = !!mode;\n\t},\n\t/**\n\t* \t@desc: set if rows should be send to server automaticaly\n\t*\t@param: mode - \"row\" - based on row selection changed, \"cell\" - based on cell editing finished, \"off\" - manual data sending\n\t*\t@type: public\n\t*/\n\tsetUpdateMode: function (mode, dnd) {\n\t\tthis.autoUpdate = (mode == \"cell\");\n\t\tthis.updateMode = mode;\n\t\tthis.dnd = dnd;\n\t},\n\tignore: function (code, master) {\n\t\tthis._silent_mode = true;\n\t\tcode.call(master || window);\n\t\tthis._silent_mode = false;\n\t},\n\t/**\n\t* \t@desc: mark row as updated/normal. check mandatory fields,initiate autoupdate (if turned on)\n\t*\t@param: rowId - id of row to set update-status for\n\t*\t@param: state - true for \"updated\", false for \"not updated\"\n\t*\t@param: mode - update mode name\n\t*\t@type: public\n\t*/\n\tsetUpdated: function (rowId, state, mode) {\n\t\tif (this._silent_mode) return;\n\t\tvar ind = this.findRow(rowId);\n\n\t\tmode = mode || \"updated\";\n\t\tvar existing = this.obj.getUserData(rowId, this.action_param);\n\t\tif (existing && mode == \"updated\") mode = existing;\n\t\tif (state) {\n\t\t\tthis.set_invalid(rowId, false); //clear previous error flag\n\t\t\tthis.updatedRows[ind] = rowId;\n\t\t\tthis.obj.setUserData(rowId, this.action_param, mode);\n\t\t\tif (this._in_progress[rowId])\n\t\t\t\tthis._in_progress[rowId] = \"wait\";\n\t\t} else {\n\t\t\tif (!this.is_invalid(rowId)) {\n\t\t\t\tthis.updatedRows.splice(ind, 1);\n\t\t\t\tthis.obj.setUserData(rowId, this.action_param, \"\");\n\t\t\t}\n\t\t}\n\n\t\t//clear changed flag\n\t\tif (!state)\n\t\t\tthis._clearUpdateFlag(rowId);\n\n\t\tthis.markRow(rowId, state, mode);\n\t\tif (state && this.autoUpdate) this.sendData(rowId);\n\t},\n\t_clearUpdateFlag: function (id) { },\n\tmarkRow: function (id, state, mode) {\n\t\tvar str = \"\";\n\t\tvar invalid = this.is_invalid(id);\n\t\tif (invalid) {\n\t\t\tstr = this.styles[invalid];\n\t\t\tstate = true;\n\t\t}\n\t\tif (this.callEvent(\"onRowMark\", [id, state, mode, invalid])) {\n\t\t\t//default logic\n\t\t\tstr = this.styles[state ? mode : \"clear\"] + str;\n\n\t\t\tthis.obj[this._methods[0]](id, str);\n\n\t\t\tif (invalid && invalid.details) {\n\t\t\t\tstr += this.styles[invalid + \"_cell\"];\n\t\t\t\tfor (var i = 0; i < invalid.details.length; i++)\n\t\t\t\t\tif (invalid.details[i])\n\t\t\t\t\t\tthis.obj[this._methods[1]](id, i, str);\n\t\t\t}\n\t\t}\n\t},\n\tgetState: function (id) {\n\t\treturn this.obj.getUserData(id, this.action_param);\n\t},\n\tis_invalid: function (id) {\n\t\treturn this._invalid[id];\n\t},\n\tset_invalid: function (id, mode, details) {\n\t\tif (details) mode = {\n\t\t\tvalue: mode,\n\t\t\tdetails: details,\n\t\t\ttoString: function () {\n\t\t\t\treturn this.value.toString();\n\t\t\t}\n\t\t};\n\t\tthis._invalid[id] = mode;\n\t},\n\t/**\n\t* \t@desc: check mandatory fields and varify values of cells, initiate update (if specified)\n\t*\t@param: rowId - id of row to set update-status for\n\t*\t@type: public\n\t*/\n\tcheckBeforeUpdate: function (rowId) {\n\t\treturn true;\n\t},\n\t/**\n\t* \t@desc: send row(s) values to server\n\t*\t@param: rowId - id of row which data to send. If not specified, then all \"updated\" rows will be send\n\t*\t@type: public\n\t*/\n\tsendData: function (rowId) {\n\t\tif (this._waitMode && (this.obj.mytype == \"tree\" || this.obj._h2)) return;\n\t\tif (this.obj.editStop) this.obj.editStop();\n\n\n\t\tif (typeof rowId == \"undefined\" || this._tSend) return this.sendAllData();\n\t\tif (this._in_progress[rowId]) return false;\n\n\t\tthis.messages = [];\n\t\tif (!this.checkBeforeUpdate(rowId) && this.callEvent(\"onValidationError\", [rowId, this.messages])) return false;\n\t\tthis._beforeSendData(this._getRowData(rowId), rowId);\n\t},\n\t_beforeSendData: function (data, rowId) {\n\t\tif (!this.callEvent(\"onBeforeUpdate\", [rowId, this.getState(rowId), data])) return false;\n\t\tthis._sendData(data, rowId);\n\t},\n\tserialize: function (data, id) {\n\t\tif (this._serialize_as_json) {\n\t\t\treturn  this._serializeAsJSON(data);\n\t\t}\n\n\t\tif (typeof data == \"string\")\n\t\t\treturn data;\n\t\tif (typeof id != \"undefined\")\n\t\t\treturn this.serialize_one(data, \"\");\n\t\telse {\n\t\t\tvar stack = [];\n\t\t\tvar keys = [];\n\t\t\tfor (var key in data)\n\t\t\t\tif (data.hasOwnProperty(key)) {\n\t\t\t\t\tstack.push(this.serialize_one(data[key], key + this.post_delim));\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\tstack.push(\"ids=\" + this.escape(keys.join(\",\")));\n\t\t\tif (this.$gantt.security_key)\n\t\t\t\tstack.push(\"dhx_security=\" + this.$gantt.security_key);\n\t\t\treturn stack.join(\"&\");\n\t\t}\n\t},\n\n\t_serializeAsJSON: function (data) {\n\t\tif (typeof data == \"string\")\n\t\t\treturn data;\n\n\t\tvar copy = utils.copy(data);\n\t\tif(this._tMode == \"REST-JSON\"){\n\t\t\tdelete copy.id;\n\t\t\tdelete copy[this.action_param];\n\t\t}\n\n\t\treturn JSON.stringify(copy);\n\t},\n\n\tserialize_one: function (data, pref) {\n\t\tif (typeof data == \"string\")\n\t\t\treturn data;\n\t\tvar stack = [];\n\t\tvar serialized = \"\";\n\t\tfor (var key in data)\n\t\t\tif (data.hasOwnProperty(key)) {\n\t\t\t\tif ((key == \"id\" || key == this.action_param) && this._tMode == \"REST\") continue;\n\t\t\t\tif (typeof data[key] === \"string\" || typeof data[key] === \"number\") {\n\t\t\t\t\tserialized = data[key];\n\t\t\t\t} else {\n\t\t\t\t\tserialized = JSON.stringify(data[key]);\n\t\t\t\t}\n\t\t\t\tstack.push(this.escape((pref || \"\") + key) + \"=\" + this.escape(serialized));\n\t\t\t}\n\t\treturn stack.join(\"&\");\n\t},\n\t_applyPayload: function (url) {\n\t\tvar ajax = this.$gantt.ajax;\n\t\tif (this._payload)\n\t\t\tfor (var key in this._payload)\n\t\t\t\turl = url + ajax.urlSeparator(url) + this.escape(key) + \"=\" + this.escape(this._payload[key]);\n\t\treturn url;\n\t},\n\t_sendData: function (a1, rowId) {\n\t\tif (!a1) return; //nothing to send\n\t\tif (!this.callEvent(\"onBeforeDataSending\", rowId ? [rowId, this.getState(rowId), a1] : [null, null, a1])) return false;\n\n\t\tif (rowId)\n\t\t\tthis._in_progress[rowId] = (new Date()).valueOf();\n\n\t\tvar _this = this;\n\n\t\tvar ajax = this.$gantt.ajax;\n\n\t\tvar queryParams = {\n\t\t\tcallback: function (xml) {\n\t\t\t\tvar ids = [];\n\t\t\t\tvar key;\n\n\t\t\t\tif (rowId)\n\t\t\t\t\tids.push(rowId);\n\t\t\t\telse if (a1)\n\t\t\t\t\tfor (key in a1)\n\t\t\t\t\t\tids.push(key);\n\n\t\t\t\treturn _this.afterUpdate(_this, xml, ids);\n\t\t\t},\n\t\t\theaders: this._headers\n\t\t};\n\n\t\tvar a3 = this.serverProcessor + (this._user ? (ajax.urlSeparator(this.serverProcessor) + [\"dhx_user=\" + this._user, \"dhx_version=\" + this.obj.getUserData(0, \"version\")].join(\"&\")) : \"\");\n\t\tvar a4 = this._applyPayload(a3);\n\n\t\tswitch (this._tMode) {\n\t\t\tcase \"GET\":\n\t\t\t\tqueryParams.url = a4 + ajax.urlSeparator(a4) + this.serialize(a1, rowId);\n\t\t\t\tqueryParams.method = \"GET\";\n\t\t\t\tbreak;\n\t\t\tcase \"POST\":\n\t\t\t\tqueryParams.url = a4;\n\t\t\t\tqueryParams.method = \"POST\";\n\t\t\t\tqueryParams.data = this.serialize(a1, rowId);\n\t\t\t\tbreak;\n\t\t\tcase \"JSON\":\n\t\t\t\tvar data = {};\n\t\t\t\tfor (var key in a1) {\n\t\t\t\t\tif (key === this.action_param || key === \"id\" || key === \"gr_id\") continue;\n\t\t\t\t\tdata[key] = a1[key];\n\t\t\t\t}\n\n\t\t\t\tqueryParams.url = a4;\n\t\t\t\tqueryParams.method = \"POST\";\n\t\t\t\tqueryParams.data = JSON.stringify({\n\t\t\t\t\tid: rowId,\n\t\t\t\t\taction: a1[this.action_param],\n\t\t\t\t\tdata: data\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"REST\":\n\t\t\tcase \"REST-JSON\":\n\t\t\t\tvar url = a3.replace(/(&|\\?)editing=true/, \"\");\n\t\t\t\tdata = \"\";\n\n\t\t\t\tswitch (this.getState(rowId)) {\n\t\t\t\t\tcase \"inserted\":\n\t\t\t\t\t\tqueryParams.method = \"POST\";\n\t\t\t\t\t\tqueryParams.data = this.serialize(a1, rowId);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"deleted\":\n\t\t\t\t\t\tqueryParams.method = \"DELETE\";\n\t\t\t\t\t\turl = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + rowId;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tqueryParams.method = \"PUT\";\n\t\t\t\t\t\tqueryParams.data = this.serialize(a1, rowId);\n\t\t\t\t\t\turl = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + rowId;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tqueryParams.url = this._applyPayload(url);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tajax.query(queryParams);\n\t\tthis._waitMode++;\n\t},\n\n\t_forEachUpdatedRow: function (code) {\n\t\tvar updatedRows = this.updatedRows.slice();\n\t\tfor (var i = 0; i < updatedRows.length; i++) {\n\t\t\tvar rowId = updatedRows[i];\n\t\t\tif (this.obj.getUserData(rowId, this.action_param)) {\n\t\t\t\tcode.call(this, rowId);\n\t\t\t}\n\t\t}\n\t},\n\n\tsendAllData: function () {\n\t\tif (!this.updatedRows.length) return;\n\n\t\tthis.messages = [];\n\t\tvar valid = true;\n\n\t\tthis._forEachUpdatedRow(function (rowId) {\n\t\t\tvalid &= this.checkBeforeUpdate(rowId);\n\t\t});\n\n\t\tif (!valid && !this.callEvent(\"onValidationError\", [\"\", this.messages])) return false;\n\n\t\tif (this._tSend) {\n\t\t\tthis._sendData(this._getAllData());\n\t\t} else {\n\t\t\tvar stop = false;\n\n\t\t\t// this.updatedRows can be spliced from onBeforeUpdate via dp.setUpdated false\n\t\t\t// use an iterator instead of for(var i = 0; i < this.updatedRows; i++) then\n\t\t\tthis._forEachUpdatedRow(function (rowId) {\n\t\t\t\tif (stop) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this._in_progress[rowId]) {\n\t\t\t\t\tif (this.is_invalid(rowId)) return;\n\t\t\t\t\tthis._beforeSendData(this._getRowData(rowId), rowId);\n\t\t\t\t\tif (this._waitMode && (this.obj.mytype == \"tree\" || this.obj._h2)) {\n\t\t\t\t\t\tstop = true; //block send all for tree\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_getAllData: function (rowId) {\n\t\tvar out = {};\n\t\tvar has_one = false;\n\n\t\tthis._forEachUpdatedRow(function (id) {\n\t\t\tif (this._in_progress[id] || this.is_invalid(id)) return;\n\t\t\tvar row = this._getRowData(id);\n\t\t\tif (!this.callEvent(\"onBeforeUpdate\", [id, this.getState(id), row])) return;\n\t\t\tout[id] = row;\n\t\t\thas_one = true;\n\t\t\tthis._in_progress[id] = (new Date()).valueOf();\n\t\t});\n\n\t\treturn has_one ? out : null;\n\t},\n\n\n\t/**\n\t* \t@desc: specify column which value should be varified before sending to server\n\t*\t@param: ind - column index (0 based)\n\t*\t@param: verifFunction - function (object) which should verify cell value (if not specified, then value will be compared to empty string). Two arguments will be passed into it: value and column name\n\t*\t@type: public\n\t*/\n\tsetVerificator: function (ind, verifFunction) {\n\t\tthis.mandatoryFields[ind] = verifFunction || (function (value) { return (value !== \"\"); });\n\t},\n\t/**\n\t* \t@desc: remove column from list of those which should be verified\n\t*\t@param: ind - column Index (0 based)\n\t*\t@type: public\n\t*/\n\tclearVerificator: function (ind) {\n\t\tthis.mandatoryFields[ind] = false;\n\t},\n\n\n\n\n\n\tfindRow: function (pattern) {\n\t\tvar i = 0;\n\t\tfor (i = 0; i < this.updatedRows.length; i++)\n\t\t\tif (pattern == this.updatedRows[i]) break;\n\t\treturn i;\n\t},\n\n\t/**\n\t* \t@desc: define custom actions\n\t*\t@param: name - name of action, same as value of action attribute\n\t*\t@param: handler - custom function, which receives a XMl response content for action\n\t*\t@type: private\n\t*/\n\tdefineAction: function (name, handler) {\n\t\tif (!this._uActions) this._uActions = [];\n\t\tthis._uActions[name] = handler;\n\t},\n\n\t/**\n*     @desc: used in combination with setOnBeforeUpdateHandler to create custom client-server transport system\n*     @param: sid - id of item before update\n*     @param: tid - id of item after up0ate\n*     @param: action - action name\n*     @type: public\n*     @topic: 0\n*/\n\tafterUpdateCallback: function (sid, tid, action, btag) {\n\t\tvar marker = sid;\n\t\tvar correct = (action != \"error\" && action != \"invalid\");\n\t\tif (!correct) this.set_invalid(sid, action);\n\t\tif ((this._uActions) && (this._uActions[action]) && (!this._uActions[action](btag)))\n\t\t\treturn (delete this._in_progress[marker]);\n\n\t\tif (this._in_progress[marker] != \"wait\")\n\t\t\tthis.setUpdated(sid, false);\n\n\t\tvar soid = sid;\n\n\t\tswitch (action) {\n\t\t\tcase \"inserted\":\n\t\t\tcase \"insert\":\n\t\t\t\tif (tid != sid) {\n\t\t\t\t\tthis.setUpdated(sid, false);\n\t\t\t\t\tthis.obj[this._methods[2]](sid, tid);\n\t\t\t\t\tsid = tid;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"delete\":\n\t\t\tcase \"deleted\":\n\t\t\t\tthis.obj.setUserData(sid, this.action_param, \"true_deleted\");\n\t\t\t\tthis.obj[this._methods[3]](sid);\n\t\t\t\tdelete this._in_progress[marker];\n\t\t\t\treturn this.callEvent(\"onAfterUpdate\", [sid, action, tid, btag]);\n\t\t}\n\n\t\tif (this._in_progress[marker] != \"wait\") {\n\t\t\tif (correct) this.obj.setUserData(sid, this.action_param, '');\n\t\t\tdelete this._in_progress[marker];\n\t\t} else {\n\t\t\tdelete this._in_progress[marker];\n\t\t\tthis.setUpdated(tid, true, this.obj.getUserData(sid, this.action_param));\n\t\t}\n\n\t\tthis.callEvent(\"onAfterUpdate\", [soid, action, tid, btag]);\n\t},\n\n\t/**\n\t* \t@desc: response from server\n\t*\t@param: xml - XMLLoader object with response XML\n\t*\t@type: private\n\t*/\n\tafterUpdate: function (that, xml, id) {\n\t\tvar ajax = this.$gantt.ajax;\n\t\t//try to use json first\n\t\tif (window.JSON) {\n\t\t\tvar tag;\n\n\t\t\ttry {\n\t\t\t\ttag = JSON.parse(xml.xmlDoc.responseText);\n\t\t\t} catch (e) {\n\n\t\t\t\t// empty response also can be processed by json handler\n\t\t\t\tif (!xml.xmlDoc.responseText.length) {\n\t\t\t\t\ttag = {};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tag) {\n\t\t\t\tvar action = tag.action || this.getState(id) || \"updated\";\n\t\t\t\tvar sid = tag.sid || id[0];\n\t\t\t\tvar tid = tag.tid || id[0];\n\t\t\t\tthat.afterUpdateCallback(sid, tid, action, tag);\n\t\t\t\tthat.finalizeUpdate();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t//xml response\n\t\tvar top = ajax.xmltop(\"data\", xml.xmlDoc); //fix incorrect content type in IE\n\t\tif (!top) return this.cleanUpdate(id);\n\t\tvar atag = ajax.xpath(\"//data/action\", top);\n\t\tif (!atag.length) return this.cleanUpdate(id);\n\n\t\tfor (var i = 0; i < atag.length; i++) {\n\t\t\tvar btag = atag[i];\n\t\t\tvar action = btag.getAttribute(\"type\");\n\t\t\tvar sid = btag.getAttribute(\"sid\");\n\t\t\tvar tid = btag.getAttribute(\"tid\");\n\n\t\t\tthat.afterUpdateCallback(sid, tid, action, btag);\n\t\t}\n\t\tthat.finalizeUpdate();\n\t},\n\tcleanUpdate: function (id) {\n\t\tif (id)\n\t\t\tfor (var i = 0; i < id.length; i++)\n\t\t\t\tdelete this._in_progress[id[i]];\n\t},\n\tfinalizeUpdate: function () {\n\t\tif (this._waitMode) this._waitMode--;\n\n\t\tif ((this.obj.mytype == \"tree\" || this.obj._h2) && this.updatedRows.length)\n\t\t\tthis.sendData();\n\t\tthis.callEvent(\"onAfterUpdateFinish\", []);\n\t\tif (!this.updatedRows.length)\n\t\t\tthis.callEvent(\"onFullSync\", []);\n\t},\n\n\n\n\n\n\t/**\n\t* \t@desc: initializes data-processor\n\t*\t@param: anObj - dhtmlxGrid object to attach this data-processor to\n\t*\t@type: public\n\t*/\n\tinit: function (anObj) {\n\t\tthis.obj = anObj;\n\t\tif (this.obj._dp_init)\n\t\t\tthis.obj._dp_init(this);\n\t},\n\n\n\tsetOnAfterUpdate: function (ev) {\n\t\tthis.attachEvent(\"onAfterUpdate\", ev);\n\t},\n\tenableDebug: function (mode) {\n\t},\n\tsetOnBeforeUpdateHandler: function (func) {\n\t\tthis.attachEvent(\"onBeforeDataSending\", func);\n\t},\n\n\n\n\t/* starts autoupdate mode\n\t\t@param interval\n\t\t\ttime interval for sending update requests\n\t*/\n\tsetAutoUpdate: function (interval, user) {\n\t\tinterval = interval || 2000;\n\n\t\tthis._user = user || (new Date()).valueOf();\n\t\tthis._need_update = false;\n\t\t//this._loader = null;\n\t\tthis._update_busy = false;\n\n\t\tthis.attachEvent(\"onAfterUpdate\", function (sid, action, tid, xml_node) {\n\t\t\tthis.afterAutoUpdate(sid, action, tid, xml_node);\n\t\t});\n\t\tthis.attachEvent(\"onFullSync\", function () {\n\t\t\tthis.fullSync();\n\t\t});\n\n\t\tvar self = this;\n\t\twindow.setInterval(function () {\n\t\t\tself.loadUpdate();\n\t\t}, interval);\n\t},\n\n\n\t/* process updating request answer\n\t\tif status == collision version is depricated\n\t\tset flag for autoupdating immidiatly\n\t*/\n\tafterAutoUpdate: function (sid, action, tid, xml_node) {\n\t\tif (action == 'collision') {\n\t\t\tthis._need_update = true;\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t},\n\n\n\t/* callback function for onFillSync event\n\t\tcall update function if it's need\n\t*/\n\tfullSync: function () {\n\t\tif (this._need_update) {\n\t\t\tthis._need_update = false;\n\t\t\tthis.loadUpdate();\n\t\t}\n\t\treturn true;\n\t},\n\n\n\t/* sends query to the server and call callback function\n\t*/\n\tgetUpdates: function (url, callback) {\n\t\tvar ajax = this.$gantt.ajax;\n\t\tif (this._update_busy)\n\t\t\treturn false;\n\t\telse\n\t\t\tthis._update_busy = true;\n\n\t\t//this._loader = this._loader || new dtmlXMLLoaderObject(true);\n\n\t\t//this._loader.async=true;\n\t\t//this._loader.waitCall=callback;\n\t\t//this._loader.loadXML(url);\n\t\tajax.get(url, callback);\n\n\t},\n\n\n\t/* returns xml node value\n\t\t@param node\n\t\t\txml node\n\t*/\n\t_v: function (node) {\n\t\tif (node.firstChild) return node.firstChild.nodeValue;\n\t\treturn \"\";\n\t},\n\n\n\t/* returns values array of xml nodes array\n\t\t@param arr\n\t\t\tarray of xml nodes\n\t*/\n\t_a: function (arr) {\n\t\tvar res = [];\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tres[i] = this._v(arr[i]);\n\t\t}\n\t\treturn res;\n\t},\n\n\n\t/* loads updates and processes them\n\t*/\n\tloadUpdate: function () {\n\t\tvar ajax = this.$gantt.ajax;\n\t\tvar self = this;\n\t\tvar version = this.obj.getUserData(0, \"version\");\n\t\tvar url = this.serverProcessor + ajax.urlSeparator(this.serverProcessor) + [\"dhx_user=\" + this._user, \"dhx_version=\" + version].join(\"&\");\n\t\turl = url.replace(\"editing=true&\", \"\");\n\t\tthis.getUpdates(url, function (xml) {\n\t\t\tvar vers = ajax.xpath(\"//userdata\", xml);\n\t\t\tself.obj.setUserData(0, \"version\", self._v(vers[0]));\n\n\t\t\tvar upds = ajax.xpath(\"//update\", xml);\n\t\t\tif (upds.length) {\n\t\t\t\tself._silent_mode = true;\n\n\t\t\t\tfor (var i = 0; i < upds.length; i++) {\n\t\t\t\t\tvar status = upds[i].getAttribute('status');\n\t\t\t\t\tvar id = upds[i].getAttribute('id');\n\t\t\t\t\tvar parent = upds[i].getAttribute('parent');\n\t\t\t\t\tswitch (status) {\n\t\t\t\t\t\tcase 'inserted':\n\t\t\t\t\t\t\tself.callEvent(\"insertCallback\", [upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'updated':\n\t\t\t\t\t\t\tself.callEvent(\"updateCallback\", [upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'deleted':\n\t\t\t\t\t\t\tself.callEvent(\"deleteCallback\", [upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tself._silent_mode = false;\n\t\t\t}\n\n\t\t\tself._update_busy = false;\n\t\t\tself = null;\n\t\t});\n\t},\n\n\tdestructor: function () {\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\n\t\tthis.updatedRows = [];\n\t\tthis._in_progress = {};//?\n\t\tthis._invalid = {};\n\t\tthis._headers = null;\n\t\tthis._payload = null;\n\t\tthis.obj = null;\n\t}\n};\n\nmodule.exports = dataProcessor;", "var utils = require (\"../../utils/utils\");\n\nfunction updateCallback(upd, id) {\n\tvar data = upd.data || this.xml._xmlNodeToJSON(upd.firstChild);\n\tif(!this.isTaskExists(id))\n\t\treturn;\n\tvar objData = this.getTask(id);\n\tfor(var key in data) {\n\t\tvar property = data[key];\n\t\tswitch(key) {\n\t\t\tcase \"id\":\n\t\t\t\tcontinue;\n\t\t\tcase \"start_date\":\n\t\t\tcase \"end_date\":\n\t\t\t\tproperty = this.templates.xml_date(property);\n\t\t\t\tbreak;\n\t\t\tcase \"duration\":\n\t\t\t\tobjData.end_date = this.calculateEndDate({start_date: objData.start_date, duration: property, task:objData});\n\t\t\t\tbreak;\n\t\t}\n\t\tobjData[key] = property;\n\t}\n\tthis.updateTask(id);\n\tthis.refreshData();\n}\n\nfunction insertCallback(upd, id, parent, mode) {\n\tvar data = upd.data || this.xml._xmlNodeToJSON(upd.firstChild),\n\t\tmethods = {\n\t\t\tadd: this.addTask,\n\t\t\tisExist: this.isTaskExists\n\t\t};\n\tif(mode == \"links\") {\n\t\tmethods.add = this.addLink;\n\t\tmethods.isExist = this.isLinkExists;\n\t}\n\tif(methods.isExist.call(this, id))\n\t\treturn;\n\tdata.id = id;\n\tmethods.add.call(this, data);\n}\n\nfunction deleteCallback(upd, id, parent, mode) {\n\tvar methods = {\n\t\t\"delete\": this.deleteTask,\n\t\t\"isExist\": this.isTaskExists\n\t};\n\tif(mode == \"links\") {\n\t\tmethods[\"delete\"] = this.deleteLink;\n\t\tmethods.isExist = this.isLinkExists;\n\t}\n\tif(methods.isExist.call(this, id))\n\t\tmethods[\"delete\"].call(this, id);\n}\n\nfunction patchDataProcessor(gantt, dataprocessor){\n\tdataprocessor.attachEvent(\"insertCallback\", utils.bind(insertCallback, gantt));\n\tdataprocessor.attachEvent(\"updateCallback\",  utils.bind(updateCallback, gantt));\n\tdataprocessor.attachEvent(\"deleteCallback\",  utils.bind(deleteCallback, gantt));\n}\n\nmodule.exports = patchDataProcessor;", "var liveUpdateHooks = require(\"./live_update_hooks\");\nvar helpers = require(\"../../utils/helpers\");\n\nfunction addDataProcessorHooks(gantt) {\n\n\tgantt.dataProcessor = require(\"./dataprocessor\");\n\n\tfunction detachDataProcessor(gantt, dp){\n\t\tdelete dp.$gantt;\n\t\tdelete dp.setGanttMode;\n\t\tdelete dp._getRowData;\n\t\tdp.afterUpdate = oldAfterUpdate;\n\n\t\tdelete gantt._dp;\n\t\tdelete gantt._change_id;\n\t\tdelete gantt._row_style;\n\t\tdelete gantt._delete_task;\n\t\tdelete gantt._sendTaskOrder;\n\n\t\thelpers.forEach(dataProcessorHandlers, function(e){\n\t\t\tgantt.detachEvent(e);\n\t\t});\n\t\tdataProcessorHandlers = [];\n\t}\n\n\tvar oldAfterUpdate;\n\tfunction extendDataProcessor(gantt, dp){\n\t\tdp.setGanttMode = function(mode){\n\t\t\tvar modes = dp.modes || {};\n\t\t\tif(dp._ganttMode){\n\t\t\t\tmodes[dp._ganttMode] = {\n\t\t\t\t\t_in_progress : dp._in_progress,\n\t\t\t\t\t_invalid : dp._invalid,\n\t\t\t\t\tupdatedRows : dp.updatedRows\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar newState = modes[mode];\n\t\t\tif(!newState){\n\t\t\t\tnewState = modes[mode] = {\n\t\t\t\t\t_in_progress : {},\n\t\t\t\t\t_invalid : {},\n\t\t\t\t\tupdatedRows : []\n\t\t\t\t};\n\t\t\t}\n\t\t\tdp._in_progress = newState._in_progress;\n\t\t\tdp._invalid = newState._invalid;\n\t\t\tdp.updatedRows = newState.updatedRows;\n\t\t\tdp.modes = modes;\n\t\t\tdp._ganttMode = mode;\n\t\t};\n\n\t\toldAfterUpdate = dp.afterUpdate;\n\t\tdp.afterUpdate = function(){\n\t\t\tvar xml;\n\t\t\tif(arguments.length == 3){\n\t\t\t\txml = arguments[1];\n\t\t\t}else{\n\t\t\t\t// old dataprocessor\n\t\t\t\txml = arguments[4];\n\t\t\t}\n\t\t\tvar mode = dp._ganttMode;\n\t\t\tvar reqUrl = xml.filePath;\n\n\t\t\tif(this._tMode != \"REST\" && this._tMode != \"REST-JSON\"){\n\t\t\t\tif (reqUrl.indexOf(\"gantt_mode=links\") != -1) {\n\t\t\t\t\tmode = \"links\";\n\t\t\t\t}else{\n\t\t\t\t\tmode = \"tasks\";\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(reqUrl.indexOf(\"/link\") > reqUrl.indexOf(\"/task\")){\n\t\t\t\t\tmode = \"links\";\n\t\t\t\t}else{\n\t\t\t\t\tmode = \"tasks\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp.setGanttMode(mode);\n\n\t\t\tvar res = oldAfterUpdate.apply(dp, arguments);\n\t\t\tdp.setGanttMode(mode);\n\t\t\treturn res;\n\t\t};\n\n\t\tdp._getRowData=gantt.bind(function(id, pref) {\n\t\t\tvar task;\n\t\t\tif (dp._ganttMode == \"tasks\")\n\t\t\t\ttask = this.isTaskExists(id) ? this.getTask(id) : { id: id };\n\t\t\telse\n\t\t\t\ttask = this.isLinkExists(id) ? this.getLink(id) : { id: id };\n\n\t\t\ttask = gantt.copy(task);\n\n\t\t\tvar data = {};\n\t\t\tfor (var key in task) {\n\t\t\t\tif (key.substr(0, 1) == \"$\") continue;\n\t\t\t\tvar value = task[key];\n\t\t\t\tif (helpers.isDate(value))\n\t\t\t\t\tdata[key] = this.templates.xml_format(value);\n\t\t\t\telse if(value === null)\n\t\t\t\t\tdata[key] = \"\";\n\t\t\t\telse\n\t\t\t\t\tdata[key] = value;\n\t\t\t}\n\n\t\t\tvar taskTiming = this._get_task_timing_mode(task);\n\t\t\tif(taskTiming.$no_start){\n\t\t\t\ttask.start_date = \"\";\n\t\t\t\ttask.duration = \"\";\n\t\t\t}\n\t\t\tif(taskTiming.$no_end){\n\t\t\t\ttask.end_date = \"\";\n\t\t\t\ttask.duration = \"\";\n\t\t\t}\n\t\t\tdata[dp.action_param] = this.getUserData(id, dp.action_param);\n\t\t\treturn data;\n\t\t}, gantt);\n\t}\n\n\tfunction extendGantt(gantt, dp){\n\t\tgantt._change_id = gantt.bind(function(oldid, newid) {\n\t\t\tif (dp._ganttMode != \"tasks\")\n\t\t\t\tthis.changeLinkId(oldid, newid);\n\t\t\telse\n\t\t\t\tthis.changeTaskId(oldid, newid);\n\t\t}, this);\n\n\t\tgantt._row_style = function(row_id, classname){\n\t\t\tif (dp._ganttMode != \"tasks\") return;\n\t\t\tif(!gantt.isTaskExists(row_id))\n\t\t\t\treturn;\n\n\t\t\tvar task = gantt.getTask(row_id);\n\t\t\ttask.$dataprocessor_class = classname;\n\t\t\tgantt.refreshTask(row_id);\n\t\t};\n\n\t\t// fake method for dataprocessor\n\t\tgantt._delete_task = function(row_id, node){};\n\n\t\tgantt._sendTaskOrder = function(id, item){\n\t\t\tif(item.$drop_target){\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\t\tthis.getTask(id).target = item.$drop_target;\n\t\t\t\tdp.setUpdated(id, true,\"order\");\n\t\t\t\tdelete this.getTask(id).$drop_target;\n\t\t\t}\n\t\t};\n\n\t\tthis._dp = dp;\n\t}\n\n\tfunction attachDataProcessorEvents(gantt, dp){\n\t\tfunction clientSideDelete(id){\n\t\t\tvar updated = dp.updatedRows.slice();\n\t\t\tvar clientOnly = false;\n\n\t\t\tfor(var i = 0; i < updated.length && !dp._in_progress[id]; i++){\n\t\t\t\tif(updated[i] == id ){\n\t\t\t\t\tif(gantt.getUserData(id, \"!nativeeditor_status\") == \"inserted\"){\n\t\t\t\t\t\tclientOnly = true;\n\t\t\t\t\t}\n\t\t\t\t\tdp.setUpdated(id,false);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn clientOnly;\n\t\t}\n\n\t\tfunction getTaskLinks(task){\n\t\t\tvar links = [];\n\n\t\t\tif (task.$source) {\n\t\t\t\tlinks = links.concat(task.$source);\n\t\t\t}\n\t\t\tif (task.$target) {\n\t\t\t\tlinks = links.concat(task.$target);\n\t\t\t}\n\n\t\t\treturn links;\n\t\t}\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskAdd\", function(id, item) {\n\t\t\tif(gantt.isTaskExists(id)){\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\t\tdp.setUpdated(id,true,\"inserted\");\n\t\t\t}\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskUpdate\", function(id, item) {\n\t\t\tif(gantt.isTaskExists(id)){\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\t\tdp.setUpdated(id,true);\n\n\t\t\t\tgantt._sendTaskOrder(id, item);\n\t\t\t}\n\t\t}));\n\n\t\tvar treeHelper = require(\"../../utils/task_tree_helpers\");\n\t\tvar cascadeDelete = {};\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onBeforeTaskDelete\", function(id, item){\n\t\t\tif(!gantt.config.cascade_delete){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcascadeDelete[id] = {\n\t\t\t\ttasks: treeHelper.getSubtreeTasks(gantt, id),\n\t\t\t\tlinks: treeHelper.getSubtreeLinks(gantt, id)\n\t\t\t};\n\t\t\treturn true;\n\t\t}));\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskDelete\", function(id, item) {\n\t\t\tdp.setGanttMode(\"tasks\");\n\n\t\t\t// not send delete request if item is not inserted into the db - just remove it from the client\n\t\t\tvar needDbDelete = !clientSideDelete(id);\n\t\t\tif(!needDbDelete)\n\t\t\t\treturn;\n\t\t\t\n\t\t\tif(gantt.config.cascade_delete && cascadeDelete[id]){\n\t\t\t\tvar dpMode = dp.updateMode;\n\t\t\t\tdp.setUpdateMode(\"off\");\n\n\t\t\t\tvar cascade = cascadeDelete[id];\n\t\t\t\tfor(var i in cascade.tasks){\n\t\t\t\t\tif(!clientSideDelete(i)){\n\t\t\t\t\t\tdp.setUpdated(i, true, \"deleted\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdp.setGanttMode(\"links\");\n\t\t\t\tfor(var i in cascade.links){\n\t\t\t\t\tif(!clientSideDelete(i)){\n\t\t\t\t\t\tdp.setUpdated(i, true, \"deleted\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcascadeDelete[id] = null;\n\n\t\t\t\tif(dpMode != \"off\"){\n\t\t\t\t\tdp.sendAllData();\n\t\t\t\t}\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\n\t\t\t\tdp.setUpdateMode(dpMode);\n\n\t\t\t}\n\n\t\t\tdp.setUpdated(id,true,\"deleted\");\n\n\t\t\tif(dp.updateMode != 'off' && !dp._tSend){\n\t\t\t\tdp.sendAllData();\n\t\t\t}\n\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkUpdate\", function(id, item) {\n\t\t\tif(gantt.isLinkExists(id)){\n\t\t\t\tdp.setGanttMode(\"links\");\n\t\t\t\tdp.setUpdated(id, true);\n\t\t\t}\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkAdd\", function(id, item) {\n\t\t\tif(gantt.isLinkExists(id)){\n\t\t\t\tdp.setGanttMode(\"links\");\n\t\t\t\tdp.setUpdated(id, true,\"inserted\");\n\t\t\t}\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkDelete\", function(id, item) {\n\t\t\tdp.setGanttMode(\"links\");\n\n\t\t\tvar needDbDelete = !clientSideDelete(id);\n\t\t\tif(!needDbDelete)\n\t\t\t\treturn;\n\n\t\t\tdp.setUpdated(id, true,\"deleted\");\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onRowDragEnd\", function(id, target) {\n\t\t\tgantt._sendTaskOrder(id, gantt.getTask(id));\n\t\t}));\n\n\t\tvar tasks = null,\n\t\t\tlinks = null;\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onTaskIdChange\",function(oldId, newId){\n\t\t\tif(!dp._waitMode) return;\n\n\t\t\tvar children = gantt.getChildren(newId);\n\t\t\tif(children.length) {\n\t\t\t\ttasks = tasks || {};\n\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar ch = this.getTask(children[i]);\n\t\t\t\t\ttasks[ch.id] = ch;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar item = this.getTask(newId),\n\t\t\t\titemLinks = getTaskLinks(item);\n\n\t\t\tif(itemLinks.length) {\n\t\t\t\tlinks = links || {};\n\n\t\t\t\tfor (var i = 0; i < itemLinks.length; i++) {\n\t\t\t\t\tvar link = this.getLink(itemLinks[i]);\n\t\t\t\t\tlinks[link.id] = link;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tdp.attachEvent(\"onAfterUpdateFinish\", function(){\n\t\t\tif(tasks || links){\n\t\t\t\tgantt.batchUpdate(function(){\n\t\t\t\t\tfor(var id in tasks){\n\t\t\t\t\t\tgantt.updateTask(tasks[id].id);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var id in links){\n\t\t\t\t\t\tgantt.updateLink(links[id].id);\n\t\t\t\t\t}\n\t\t\t\t\ttasks = null;\n\t\t\t\t\tlinks = null;\n\t\t\t\t});\n\t\t\t\tif(tasks) {\n\t\t\t\t\tgantt._dp.setGanttMode(\"tasks\");\n\t\t\t\t}else{\n\t\t\t\t\tgantt._dp.setGanttMode(\"links\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tdp.attachEvent(\"onBeforeDataSending\", function() {\n\t\t\tvar url = this._serverProcessor;\n\t\t\tif(this._tMode == \"REST-JSON\" || this._tMode == \"REST\"){\n\t\t\t\tvar mode = this._ganttMode.substr(0, this._ganttMode.length - 1);// links, tasks -> /link/id, /task/id\n\n\t\t\t\turl = url.substring(0, url.indexOf(\"?\") > -1 ? url.indexOf(\"?\") : url.length);\n\t\t\t\t//editing=true&\n\t\t\t\tthis.serverProcessor = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + mode;\n\t\t\t}else{\n\t\t\t\tthis.serverProcessor = url + gantt.ajax.urlSeparator(url) + \"gantt_mode=\" + this._ganttMode;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tvar dataProcessorHandlers = [];\n\n\tgantt._dp_init = function(dp) {\n\t\tgantt.assert(!this._dp, \"The dataProcessor is already attached to this gantt instance\");\n\n\t\tdp.setTransactionMode(\"POST\", true);\n\t\tdp.serverProcessor += (dp.serverProcessor.indexOf(\"?\") != -1 ? \"&\" : \"?\") + \"editing=true\";\n\t\tdp._serverProcessor = dp.serverProcessor;\n\t\tdp.$gantt = this;\n\t\tdp.styles = {\n\t\t\tupdated:\"gantt_updated\",\n\t\t\torder:\"gantt_updated\",\n\t\t\tinserted:\"gantt_inserted\",\n\t\t\tdeleted:\"gantt_deleted\",\n\t\t\tinvalid:\"gantt_invalid\",\n\t\t\terror:\"gantt_error\",\n\t\t\tclear:\"\"\n\t\t};\n\n\t\tdp._methods=[\"_row_style\",\"setCellTextStyle\",\"_change_id\",\"_delete_task\"];\n\n\t\textendDataProcessor.call(this, gantt, dp);\n\t\textendGantt.call(this, gantt, dp);\n\t\tattachDataProcessorEvents.call(this, gantt, dp);\n\n\t\tdp.attachEvent(\"onDestroy\", function(){\n\t\t\tdetachDataProcessor(gantt, dp);\n\t\t});\n\t\tliveUpdateHooks(gantt, dp);\n\n\t\tgantt.callEvent(\"onDataProcessorReady\", [dp]);\n\t};\n\n\tgantt.getUserData = function(id, name) {\n\t\tif (!this.userdata) this.userdata = {};\n\t\tif (this.userdata[id] && this.userdata[id][name]) return this.userdata[id][name];\n\t\treturn \"\";\n\t};\n\tgantt.setUserData = function(id, name, value) {\n\t\tif (!this.userdata) this.userdata = {};\n\t\tif (!this.userdata[id]) this.userdata[id] = {};\n\t\tthis.userdata[id][name] = value;\n\t};\n}\n\nmodule.exports = addDataProcessorHooks;\n", "var storeRenderCreator = function(name, gantt){\n\tvar store = gantt.getDatastore(name);\n\n\tvar itemRepainter = {\n\t\trenderItem: function(id, renderer){\n\n\t\t\tvar renders = renderer.getLayers();\n\n\t\t\tvar item = store.getItem(id);\n\t\t\tif(item && store.isVisible(id)) {\n\t\t\t\tfor (var i = 0; i < renders.length; i++)\n\t\t\t\t\trenders[i].render_item(item);\n\t\t\t}\n\t\t},\n\t\trenderItems: function(renderer){\n\t\t\tvar renderers = renderer.getLayers();\n\t\t\tfor (var i = 0; i < renderers.length; i++) {\n\t\t\t\trenderers[i].clear();\n\t\t\t}\n\n\t\t\tvar data = store.getVisibleItems();\n\n\t\t\tfor (var i = 0; i < renderers.length; i++) {\n\t\t\t\trenderers[i].render_items(data);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction skipRepaint(gantt){\n\t\tvar state = gantt.$services.getService(\"state\");\n\t\tif(state.getState(\"batchUpdate\").batch_update){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstore.attachEvent(\"onStoreUpdated\", function(id, item, action){\n\t\tif(skipRepaint(gantt)){\n\t\t\treturn;\n\t\t}\n\n\t\tvar renderer = gantt.$services.getService(\"layers\").getDataRender(name);\n\n\t\tif(renderer){\n\t\t\tif(!id || action == \"move\" || action == \"delete\"){\n\t\t\t\tstore.callEvent(\"onBeforeRefreshAll\", []);\n\t\t\t\titemRepainter.renderItems(renderer);\n\t\t\t\tstore.callEvent(\"onAfterRefreshAll\", []);\n\t\t\t}else{\n\t\t\t\tstore.callEvent(\"onBeforeRefreshItem\", [item.id]);\n\t\t\t\titemRepainter.renderItem(item.id, renderer);\n\t\t\t\tstore.callEvent(\"onAfterRefreshItem\", [item.id]);\n\t\t\t}\n\t\t}\n\n\t});\n\n\t// TODO: probably can be done more in a more efficient way\n\tstore.attachEvent(\"onItemOpen\", function(){\n\t\tgantt.render();\n\t});\n\n\tstore.attachEvent(\"onItemClose\", function(){\n\t\tgantt.render();\n\t});\n\n\tfunction refreshId(renders, oldId, newId, item) {\n\t\tfor (var i = 0; i < renders.length; i++) {\n\t\t\trenders[i].change_id(oldId, newId);\n\t\t}\n\t}\n\n\tstore.attachEvent(\"onIdChange\", function(oldId, newId){\n\n\t\t// in case of linked datastores (tasks <-> links), id change should recalculate something in linked datastore before any repaint\n\t\t// use onBeforeIdChange for this hook.\n\t\t// TODO: use something more reasonable instead\n\t\tstore.callEvent(\"onBeforeIdChange\", [oldId, newId]);\n\n\t\tif(skipRepaint(gantt)){\n\t\t\treturn;\n\t\t}\n\t\tvar renderer = gantt.$services.getService(\"layers\").getDataRender(name);\n\t\trefreshId(renderer.getLayers(), oldId, newId, store.getItem(newId));\n\t\titemRepainter.renderItem(newId, renderer);\n\t});\n\n};\n\nmodule.exports = {\n\tbindDataStore: storeRenderCreator\n};", "\nfunction createDataStoreSelectMixin(store){\n\tvar selectedId = null;\n\n\tvar deleteItem = store._removeItemInner;\n\tstore._removeItemInner = function(id){\n\t\tif(selectedId == id){\n\t\t\tselectedId = null;\n\t\t}\n\t\treturn deleteItem.apply(this, arguments);\n\t};\n\n\n\tstore.attachEvent(\"onIdChange\", function(oldId, newId) {\n\t\tif (store.getSelectedId() == oldId) {\n\t\t\tstore.silent(function () {\n\t\t\t\tstore.unselect(oldId);\n\t\t\t\tstore.select(newId);\n\t\t\t});\n\t\t}\n\t});\n\n\treturn {\n\t\tselect: function(id){\n\t\t\tif (id){\n\n\t\t\t\tif(selectedId == id)\n\t\t\t\t\treturn selectedId;\n\n\t\t\t\tif(!this._skip_refresh) {\n\t\t\t\t\tif (!this.callEvent(\"onBeforeSelect\", [id])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.unselect();\n\n\t\t\t\tselectedId = id;\n\n\t\t\t\tif(!this._skip_refresh) {\n\t\t\t\t\tthis.refresh(id);\n\t\t\t\t\tthis.callEvent(\"onAfterSelect\", [id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn selectedId;\n\t\t},\n\t\tgetSelectedId: function(){\n\t\t\treturn selectedId;\n\t\t},\n\t\tunselect: function(id){\n\t\t\tvar id = id || selectedId;\n\t\t\tif(!id)\n\t\t\t\treturn;\n\t\t\tselectedId = null;\n\t\t\tif(!this._skip_refresh){\n\t\t\t\tthis.refresh(id);\n\t\t\t\tthis.callEvent(\"onAfterUnselect\", [id]);\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = createDataStoreSelectMixin;", "var powerArray = require(\"./power_array\");\nvar utils = require(\"../../utils/utils\");\nvar DataStore = require(\"./datastore\");\n\nvar TreeDataStore = function(config){\n\tDataStore.apply(this, [config]);\n\tthis._branches = {};\n\n\tthis.pull = {};\n\tthis.$initItem = config.initItem;\n\tthis.$parentProperty = config.parentProperty || \"parent\";\n\n\tif(typeof config.rootId !== \"function\"){\n\t\tthis.$getRootId = (function(val){\n\t\t\treturn function(){return val;};\n\t\t})(config.rootId || 0);\n\t}else{\n\t\tthis.$getRootId = config.rootId;\n\t}\n\n\t// TODO: replace with live reference to gantt config\n\tthis.$openInitially = config.openInitially;\n\n\tthis.visibleOrder = powerArray.$create();\n\tthis.fullOrder = powerArray.$create();\n\tthis._searchVisibleOrder = {};\n\tthis._skip_refresh = false;\n\n\tthis.attachEvent(\"onFilterItem\", function(id, item){\n\t\tvar open = true;\n\t\tthis.eachParent(function(parent){\n\t\t\topen = open && parent.$open && !(this._isSplitItem(parent));\n\t\t}, item);\n\t\treturn !!open;\n\t});\n\n\treturn this;\n};\n\nTreeDataStore.prototype = utils.mixin({\n\n\t\t_buildTree: function(data){\n\t\t\tvar item = null;\n\t\t\tvar rootId = this.$getRootId();\n\t\t\tfor (var i = 0, len = data.length; i < len; i++){\n\t\t\t\titem = data[i];\n\t\t\t\tthis.setParent(item, this.getParent(item) || rootId);\n\t\t\t}\n\n\t\t\t// calculating $level for each item\n\t\t\tfor (var i = 0, len = data.length; i < len; i++){\n\t\t\t\titem = data[i];\n\t\t\t\tthis._add_branch(item);\n\t\t\t\titem.$level = this.calculateItemLevel(item);\n\n\t\t\t\tif (!utils.defined(item.$open)) {\n\t\t\t\t\titem.$open = utils.defined(item.open) ? item.open : this.$openInitially();\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._updateOrder();\n\t\t},\n\t\t_isSplitItem: function(item){\n\t\t\treturn (item.render == \"split\" && this.hasChild(item.id));\n\t\t},\n\t\tparse: function(data){\n\t\t\tthis.callEvent(\"onBeforeParse\", [data]);\n\t\t\tvar loaded = this._parseInner(data);\n\t\t\tthis._buildTree(loaded);\n\t\t\tthis.filter();\n\t\t\tthis.callEvent(\"onParse\", [loaded]);\n\t\t},\n\n\t\t_addItemInner: function(item, index){\n\n\t\t\tvar parent = this.getParent(item);\n\n\t\t\tif(!utils.defined(parent)){\n\t\t\t\tparent = this.$getRootId();\n\t\t\t\tthis.setParent(item, parent);\n\t\t\t}\n\n\t\t\tvar parentIndex = this.getIndexById(parent);\n\t\t\tvar targetIndex = parentIndex + Math.min(Math.max(index, 0), this.visibleOrder.length);\n\n\t\t\tif(targetIndex*1 !== targetIndex){\n\t\t\t\ttargetIndex = undefined;\n\t\t\t}\n\t\t\tDataStore.prototype._addItemInner.call(this, item, targetIndex);\n\t\t\tthis.setParent(item, parent);\n\n\t\t\tif(item.hasOwnProperty(\"$rendered_parent\")){\n\t\t\t\tthis._move_branch(item, item.$rendered_parent);\n\t\t\t}\n\t\t\tthis._add_branch(item, index);\n\t\t},\n\t\t_changeIdInner: function(oldId, newId){\n\t\t\tvar children = this.getChildren(oldId);\n\t\t\tvar visibleOrder = this._searchVisibleOrder[oldId];\n\n\t\t\tDataStore.prototype._changeIdInner.call(this, oldId, newId);\n\n\t\t\tvar parent = this.getParent(newId);\n\n\t\t\tthis._replace_branch_child(parent, oldId, newId);\n\t\t\tfor(var i = 0; i < children.length; i++){\n\t\t\t\tthis.setParent(this.getItem(children[i]), newId);\n\t\t\t}\n\n\t\t\tthis._searchVisibleOrder[newId] = visibleOrder;\n\t\t\tdelete this._branches[oldId];\n\t\t},\n\n\t\t_traverseBranches: function(code, parent){\n\t\t\tparent = parent || this.$getRootId();\n\t\t\tvar branch = this._branches[parent];\n\t\t\tif (branch) {\n\t\t\t\tfor (var i = 0; i < branch.length; i++) {\n\t\t\t\t\tvar itemId = branch[i];\n\t\t\t\t\tcode.call(this, itemId);\n\t\t\t\t\tif (this._branches[itemId])\n\t\t\t\t\t\tthis._traverseBranches(code, itemId);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_updateOrder: function(code){\n\n\t\t\tthis.fullOrder = powerArray.$create();\n\t\t\tthis._traverseBranches(function(taskId){\n\t\t\t\tthis.fullOrder.push(taskId);\n\t\t\t});\n\n\t\t\tif(code)\n\t\t\t\tDataStore.prototype._updateOrder.call(this, code);\n\t\t},\n\n\t\t_removeItemInner: function(id){\n\n\t\t\tvar items = [];\n\t\t\tthis.eachItem(function(child){\n\t\t\t\titems.push(child);\n\t\t\t}, id);\n\n\t\t\titems.push(this.getItem(id));\n\n\t\t\tfor(var i = 0; i < items.length; i++){\n\n\t\t\t\tthis._move_branch(items[i], this.getParent(items[i]), null);\n\t\t\t\tDataStore.prototype._removeItemInner.call(this, items[i].id);\n\t\t\t\tthis._move_branch(items[i], this.getParent(items[i]), null);\n\t\t\t}\n\t\t},\n\n\t\tmove: function(sid, tindex, parent){\n\t\t\t//target id as 4th parameter\n\t\t\tvar id = arguments[3];\n\t\t\tif (id) {\n\t\t\t\tif (id === sid) return;\n\n\t\t\t\tparent = this.getParent(id);\n\t\t\t\ttindex = this.getBranchIndex(id);\n\t\t\t}\n\t\t\tif(sid == parent){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tparent = parent || this.$getRootId();\n\t\t\tvar source = this.getItem(sid);\n\t\t\tvar source_pid = this.getParent(source.id);\n\n\t\t\tvar tbranch = this.getChildren(parent);\n\n\t\t\tif (tindex == -1)\n\t\t\t\ttindex = tbranch.length + 1;\n\t\t\tif (source_pid == parent) {\n\t\t\t\tvar sindex = this.getBranchIndex(sid);\n\t\t\t\tif (sindex == tindex) return;\n\t\t\t}\n\n\t\t\tif(this.callEvent(\"onBeforeItemMove\", [sid, parent, tindex]) === false)\n\t\t\t\treturn;\n\n\t\t\tthis._replace_branch_child(source_pid, sid);\n\t\t\ttbranch = this.getChildren(parent);\n\n\t\t\tvar tid = tbranch[tindex];\n\t\t\tif (!tid) //adding as last element\n\t\t\t\ttbranch.push(sid);\n\t\t\telse\n\t\t\t\ttbranch = tbranch.slice(0, tindex).concat([ sid ]).concat(tbranch.slice(tindex));\n\n\t\t\tthis.setParent(source, parent);\n\t\t\tthis._branches[parent] = tbranch;\n\n\t\t\tvar diff = this.calculateItemLevel(source) - source.$level;\n\t\t\tsource.$level += diff;\n\t\t\tthis.eachItem(function(item){\n\t\t\t\titem.$level += diff;\n\t\t\t}, source.id, this);\n\n\n\t\t\tthis._moveInner(this.getIndexById(sid), this.getIndexById(parent) + tindex);\n\n\t\t\tthis.callEvent(\"onAfterItemMove\", [sid, parent, tindex]);\n\t\t\tthis.refresh();\n\t\t},\n\n\t\tgetBranchIndex: function(id){\n\t\t\tvar branch = this.getChildren(this.getParent(id));\n\t\t\tfor (var i = 0; i < branch.length; i++)\n\t\t\t\tif (branch[i] == id)\n\t\t\t\t\treturn i;\n\n\t\t\treturn -1;\n\t\t},\n\t\thasChild: function(id){\n\t\t\treturn (utils.defined(this._branches[id]) && this._branches[id].length);\n\t\t},\n\t\tgetChildren: function(id){\n\t\t\treturn utils.defined(this._branches[id]) ? this._branches[id] : powerArray.$create();\n\t\t},\n\n\t\tisChildOf: function(childId, parentId){\n\t\t\tif (!this.exists(childId))\n\t\t\t\treturn false;\n\t\t\tif (parentId === this.$getRootId())\n\t\t\t\treturn true;\n\n\t\t\tif (!this.hasChild(parentId))\n\t\t\t\treturn false;\n\n\t\t\tvar item = this.getItem(childId);\n\t\t\tvar pid = this.getParent(childId);\n\n\t\t\tvar parent = this.getItem(parentId);\n\t\t\tif(parent.$level >= item.$level){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\twhile (item && this.exists(pid)) {\n\t\t\t\titem = this.getItem(pid);\n\n\t\t\t\tif (item && item.id == parentId)\n\t\t\t\t\treturn true;\n\t\t\t\tpid = this.getParent(item);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tgetSiblings: function(id){\n\t\t\tif(!this.exists(id)){\n\t\t\t\treturn powerArray.$create();\n\t\t\t}\n\t\t\tvar parent = this.getParent(id);\n\t\t\treturn this.getChildren(parent);\n\n\t\t},\n\t\tgetNextSibling: function(id){\n\t\t\tvar siblings = this.getSiblings(id);\n\t\t\tfor(var i= 0, len = siblings.length; i < len; i++){\n\t\t\t\tif(siblings[i] == id)\n\t\t\t\t\treturn siblings[i+1] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tgetPrevSibling: function(id){\n\t\t\tvar siblings = this.getSiblings(id);\n\t\t\tfor(var i= 0, len = siblings.length; i < len; i++){\n\t\t\t\tif(siblings[i] == id)\n\t\t\t\t\treturn siblings[i-1] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tgetParent: function(id){\n\t\t\tvar item = null;\n\t\t\tif(id.id !== undefined){\n\t\t\t\titem = id;\n\t\t\t}else{\n\t\t\t\titem = this.getItem(id);\n\t\t\t}\n\n\t\t\tvar parent;\n\t\t\tif(item){\n\t\t\t\tparent = item[this.$parentProperty];\n\t\t\t}else{\n\t\t\t\tparent = this.$getRootId();\n\t\t\t}\n\t\t\treturn parent;\n\n\t\t},\n\n\t\tclearAll: function(){\n\t\t\tthis._branches = {};\n\t\t\tDataStore.prototype.clearAll.call(this);\n\t\t},\n\n\t\tcalculateItemLevel: function(item){\n\t\t\tvar level = 0;\n\t\t\tthis.eachParent(function(){\n\t\t\t\tlevel++;\n\t\t\t}, item);\n\t\t\treturn level;\n\t\t},\n\n\t\t_setParentInner: function(item, new_pid, silent){\n\t\t\tif(!silent){\n\t\t\t\tif(item.hasOwnProperty(\"$rendered_parent\")){\n\t\t\t\t\tthis._move_branch(item, item.$rendered_parent, new_pid);\n\t\t\t\t}else{\n\t\t\t\t\tthis._move_branch(item, item[this.$parentProperty], new_pid);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetParent: function(item, new_pid, silent){\n\t\t\tthis._setParentInner(item, new_pid, silent);\n\n\t\t\titem[this.$parentProperty] = new_pid;\n\t\t},\n\t\teachItem: function(code, parent){\n\t\t\tparent = parent || this.$getRootId();\n\n\n\t\t\tvar branch = this.getChildren(parent);\n\t\t\tif (branch)\n\t\t\t\tfor (var i=0; i<branch.length; i++){\n\t\t\t\t\tvar item = this.pull[branch[i]];\n\t\t\t\t\tcode.call(this, item);\n\t\t\t\t\tif (this.hasChild(item.id))\n\t\t\t\t\t\tthis.eachItem(code, item.id);\n\t\t\t\t}\n\t\t},\n\t\teachParent: function(code, startItem) {\n\t\t\tvar parentsHash = {};\n\t\t\tvar item = startItem;\n\t\t\tvar parent = this.getParent(item);\n\n\t\t\twhile (this.exists(parent)) {\n\t\t\t\tif (parentsHash[parent]) {\n\t\t\t\t\tthrow new Error(\"Invalid tasks tree. Cyclic reference has been detected on task \" + parent);\n\t\t\t\t}\n\t\t\t\tparentsHash[parent] = true;\n\t\t\t\titem = this.getItem(parent);\n\t\t\t\tcode.call(this, item);\n\t\t\t\tparent = this.getParent(item);\n\t\t\t}\n\t\t},\n\t\t_add_branch: function(item, index, parent){\n\t\t\tvar pid = parent === undefined ? this.getParent(item) : parent;\n\t\t\tif (!this.hasChild(pid))\n\t\t\t\tthis._branches[pid] = powerArray.$create();\n\t\t\tvar branch = this.getChildren(pid);\n\t\t\tvar added_already = false;\n\t\t\tfor(var i = 0, length = branch.length; i < length; i++){\n\t\t\t\tif(branch[i] == item.id){\n\t\t\t\t\tadded_already = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!added_already){\n\t\t\t\tif(index*1 == index){\n\n\t\t\t\t\tbranch.splice(index, 0, item.id);\n\t\t\t\t}else{\n\t\t\t\t\tbranch.push(item.id);\n\t\t\t\t}\n\n\t\t\t\titem.$rendered_parent = pid;\n\t\t\t}\n\t\t},\n\t\t_move_branch: function(item, old_parent, new_parent){\n\t\t\t//this.setParent(item, new_parent);\n\t\t\t//this._sync_parent(task);\n\t\t\tthis._replace_branch_child(old_parent, item.id);\n\t\t\tif(this.exists(new_parent) || new_parent == this.$getRootId()){\n\n\t\t\t\tthis._add_branch(item, undefined, new_parent);\n\t\t\t}else{\n\t\t\t\tdelete this._branches[item.id];\n\t\t\t}\n\t\t\titem.$level =  this.calculateItemLevel(item);\n\t\t\tthis.eachItem(function(child){\n\t\t\t\tchild.$level = this.calculateItemLevel(child);\n\t\t\t}, item.id);\n\t\t},\n\n\t\t_replace_branch_child: function(node, old_id, new_id){\n\t\t\tvar branch = this.getChildren(node);\n\t\t\tif (branch && node !== undefined){\n\t\t\t\tvar newbranch = powerArray.$create();\n\t\t\t\tfor (var i=0; i<branch.length; i++){\n\t\t\t\t\tif (branch[i] != old_id)\n\t\t\t\t\t\tnewbranch.push(branch[i]);\n\t\t\t\t\telse if (new_id)\n\t\t\t\t\t\tnewbranch.push(new_id);\n\t\t\t\t}\n\t\t\t\tthis._branches[node] = newbranch;\n\t\t\t}\n\n\t\t},\n\n\t\tsort: function(field, desc, parent){\n\t\t\tif (!this.exists(parent)) {\n\t\t\t\tparent = this.$getRootId();\n\t\t\t}\n\n\t\t\tif (!field) field = \"order\";\n\t\t\tvar criteria = (typeof(field) == \"string\") ? (function(a, b) {\n\t\t\t\tif(a[field] == b[field]){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar result = a[field] > b[field];\n\t\t\t\treturn result ? 1 : -1;\n\t\t\t}) : field;\n\n\t\t\tif (desc) {\n\t\t\t\tvar original_criteria = criteria;\n\t\t\t\tcriteria = function (a, b) {\n\t\t\t\t\treturn original_criteria(b, a);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar els = this.getChildren(parent);\n\n\t\t\tif (els){\n\t\t\t\tvar temp = [];\n\t\t\t\tfor (var i = els.length - 1; i >= 0; i--)\n\t\t\t\t\ttemp[i] = this.getItem(els[i]);\n\n\t\t\t\ttemp.sort(criteria);\n\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\n\t\t\t\t\tels[i] = temp[i].id;\n\t\t\t\t\tthis.sort(field, desc, els[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tfilter: function(rule){\n\t\t\tfor(var i  in this.pull){\n\t\t\t\tif(this.pull[i].$rendered_parent !== this.getParent(this.pull[i])){\n\t\t\t\t\tthis._move_branch(this.pull[i], this.pull[i].$rendered_parent, this.getParent(this.pull[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn DataStore.prototype.filter.apply(this, arguments);\n\t\t},\n\n\t\topen: function(id){\n\t\t\tif(this.exists(id)){\n\t\t\t\tthis.getItem(id).$open = true;\n\t\t\t\tthis.callEvent(\"onItemOpen\", [id]);\n\t\t\t}\n\t\t},\n\n\t\tclose: function(id){\n\t\t\tif(this.exists(id)){\n\t\t\t\tthis.getItem(id).$open = false;\n\t\t\t\tthis.callEvent(\"onItemClose\", [id]);\n\t\t\t}\n\t\t},\n\n\t\tdestructor: function(){\n\t\t\tDataStore.prototype.destructor.call(this);\n\t\t\tthis._branches = null;\n\t\t}\n\t},\n\tDataStore.prototype\n);\n\nmodule.exports = TreeDataStore;", "var utils = require(\"../../utils/utils\");\n\n\nvar createLinksStoreFacade = function(){\n\treturn {\n\tgetLinkCount: function () {\n\t\treturn this.$data.linksStore.count();\n\t},\n\n\tgetLink : function (id) {\n\t\treturn this.$data.linksStore.getItem(id);\n\t},\n\n\tgetLinks : function () {\n\t\treturn this.$data.linksStore.getItems();\n\t},\n\n\tisLinkExists : function (id) {\n\t\treturn this.$data.linksStore.exists(id);\n\t},\n\n\taddLink : function (link) {\n\t\treturn this.$data.linksStore.addItem(link);\n\t},\n\n\tupdateLink : function (id, data) {\n\t\tif (!utils.defined(data))\n\t\t\tdata = this.getLink(id);\n\t\tthis.$data.linksStore.updateItem(id, data);\n\t},\n\n\tdeleteLink : function (id) {\n\t\treturn this.$data.linksStore.removeItem(id);\n\t},\n\n\tchangeLinkId : function (oldid, newid) {\n\t\treturn this.$data.linksStore.changeId(oldid, newid);\n\t}\n};\n};\n\nmodule.exports = createLinksStoreFacade;", "var utils = require(\"../../utils/utils\");\n\nvar createTasksDatastoreFacade = function(){\n\treturn {\n\tgetTask: function (id) {\n\t\tthis.assert(id, \"Invalid argument for gantt.getTask\");\n\t\tvar task = this.$data.tasksStore.getItem(id);\n\t\tthis.assert(task, \"Task not found id=\" + id);\n\t\treturn task;\n\t},\n\tgetTaskByTime: function (from, to) {\n\t\tvar p = this.$data.tasksStore.getItems();\n\n\t\tvar res = [];\n\n\t\tif (!(from || to)) {\n\t\t\tres = p;\n\t\t} else {\n\t\t\tfrom = +from || -Infinity;\n\t\t\tto = +to || Infinity;\n\t\t\tfor (var t = 0; t < p.length; t++){\n\t\t\t\tvar task = p[t];\n\t\t\t\tif (+task.start_date < to && +task.end_date > from)\n\t\t\t\t\tres.push(task);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\tisTaskExists: function (id) {\n\t\treturn this.$data.tasksStore.exists(id);\n\t},\n\tupdateTask: function (id, item) {\n\t\tif (!utils.defined(item)) item = this.getTask(id);\n\t\tthis.$data.tasksStore.updateItem(id, item);\n\t\tif(this.isTaskExists(id))\n\t\t\tthis.refreshTask(id);\n\t},\n\taddTask: function (item, parent, index) {\n\t\tif (!utils.defined(item.id))\n\t\t\titem.id = utils.uid();\n\n\t\tif (!utils.defined(parent)) parent = this.getParent(item) || 0;\n\t\tif (!this.isTaskExists(parent)) parent = 0;\n\t\tthis.setParent(item, parent);\n\n\t\treturn this.$data.tasksStore.addItem(item, index, parent);\n\t},\n\tdeleteTask: function (id) {\n\t\treturn this.$data.tasksStore.removeItem(id);\n\t},\n\tgetTaskCount: function () {\n\t\treturn this.$data.tasksStore.count();\n\t},\n\tgetVisibleTaskCount: function () {\n\t\treturn this.$data.tasksStore.countVisible();\n\t},\n\tgetTaskIndex: function (id) {\n\t\treturn this.$data.tasksStore.getBranchIndex(id);\n\t},\n\tgetGlobalTaskIndex: function (id) {\n\t\tthis.assert(id, \"Invalid argument\");\n\t\treturn this.$data.tasksStore.getIndexById(id);\n\t},\n\teachTask: function (code, parent, master) {\n\t\treturn this.$data.tasksStore.eachItem(utils.bind(code, master||this), parent);\n\t},\n\teachParent: function (callback, startTask, master) {\n\t\treturn this.$data.tasksStore.eachParent(utils.bind(callback, master || this), startTask);\n\t},\n\tchangeTaskId: function (oldid, newid) {\n\t\tthis.$data.tasksStore.changeId(oldid, newid);\n\t\tvar task = this.$data.tasksStore.getItem(newid);\n\n\t\tvar links = [];\n\n\t\tif (task.$source) {\n\t\t\tlinks = links.concat(task.$source);\n\t\t}\n\t\tif (task.$target) {\n\t\t\tlinks = links.concat(task.$target);\n\t\t}\n\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar link = this.getLink(links[i]);\n\t\t\tif (link.source == oldid) {\n\t\t\t\tlink.source = newid;\n\t\t\t}\n\t\t\tif (link.target == oldid) {\n\t\t\t\tlink.target = newid;\n\t\t\t}\n\t\t}\n\t},\n\tcalculateTaskLevel: function (item) {\n\t\treturn this.$data.tasksStore.calculateItemLevel(item);\n\t},\n\tgetNext: function (id) {\n\t\treturn this.$data.tasksStore.getNext(id);\n\t},\n\tgetPrev: function (id) {\n\t\treturn this.$data.tasksStore.getPrev(id);\n\t},\n\tgetParent: function (id) {\n\t\treturn this.$data.tasksStore.getParent(id);\n\t},\n\tsetParent: function (task, new_pid, silent) {\n\t\treturn this.$data.tasksStore.setParent(task, new_pid, silent);\n\t},\n\tgetSiblings: function (id) {\n\t\treturn this.$data.tasksStore.getSiblings(id).slice();\n\t},\n\tgetNextSibling: function (id) {\n\t\treturn this.$data.tasksStore.getNextSibling(id);\n\t},\n\tgetPrevSibling: function (id) {\n\t\treturn this.$data.tasksStore.getPrevSibling(id);\n\t},\n\tgetTaskByIndex: function(index){\n\t\tvar id = this.$data.tasksStore.getIdByIndex(index);\n\t\tif(this.isTaskExists(id)){\n\t\t\treturn this.getTask(id);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t},\n\tgetChildren: function (id) {\n\t\tif(!this.hasChild(id)){\n\t\t\treturn [];\n\t\t}else{\n\t\t\treturn this.$data.tasksStore.getChildren(id).slice();\n\t\t}\n\t},\n\thasChild: function (id) {\n\t\treturn this.$data.tasksStore.hasChild(id);\n\t},\n\topen: function (id) {\n\t\tthis.$data.tasksStore.open(id);\n\t},\n\tclose: function (id) {\n\t\tthis.$data.tasksStore.close(id);\n\t},\n\tmoveTask: function (sid, tindex, parent) {\n\t\tthis.$data.tasksStore.move.apply(this.$data.tasksStore, arguments);\n\t},\n\tsort: function(field, desc, parent, silent) {\n\t\tvar render = !silent;//4th argument to cancel redraw after sorting\n\n\t\tthis.$data.tasksStore.sort(field, desc, parent);\n\t\tif (render) {\n\t\t\tthis.render();\n\t\t}\n\t\tthis.callEvent(\"onAfterSort\", [field, desc, parent]);\n\t}\n};\n};\n\nmodule.exports = createTasksDatastoreFacade;\n\n\n", "var utils = require(\"../../utils/utils\");\nvar createTasksFacade = require(\"./datastore_tasks\"),\n\tcreateLinksFacade = require(\"./datastore_links\"),\n\tDataStore = require(\"../datastore/datastore\"),\n\tTreeDataStore = require(\"../datastore/treedatastore\"),\n\tcreateDatastoreSelect = require(\"../datastore/select\");\nvar datastoreRender = require(\"../datastore/datastore_render\");\n\nfunction getDatastores(){\n\tvar storeNames = this.$services.getService(\"datastores\");\n\tvar res = [];\n\tfor(var i = 0; i < storeNames.length; i++){\n\t\tres.push(this.getDatastore(storeNames[i]));\n\t}\n\treturn res;\n}\n\nvar createDatastoreFacade = function(){\n\treturn {\n\tcreateDatastore: function(config){\n\n\t\tvar $StoreType = (config.type || \"\").toLowerCase() == \"treedatastore\" ? TreeDataStore : DataStore;\n\n\t\tif(config){\n\t\t\tvar self = this;\n\t\t\tconfig.openInitially = function(){ return self.config.open_tree_initially; };\n\t\t}\n\n\t\tvar store = new $StoreType(config);\n\t\tthis.mixin(store, createDatastoreSelect(store));\n\n\t\tif(config.name){\n\n\t\t\tthis.$services.setService(\"datastore:\" + config.name, function(){return store;});\n\t\t\tvar storeList = this.$services.getService(\"datastores\");\n\t\t\tif(!storeList){\n\t\t\t\tstoreList = [];\n\t\t\t\tthis.$services.setService(\"datastores\", function(){return storeList;});\n\t\t\t}\n\t\t\tstoreList.push(config.name);\n\n\t\t\tdatastoreRender.bindDataStore(config.name, this);\n\t\t}\n\n\t\treturn store;\n\t},\n\tgetDatastore: function(name){\n\t\treturn this.$services.getService(\"datastore:\" + name);\n\t},\n\n\trefreshData: function () {\n\t\tvar scrollState = this.getScrollState();\n\t\tthis.callEvent(\"onBeforeDataRender\", []);\n\n\t\tvar stores = getDatastores.call(this);\n\t\tfor(var i = 0; i < stores.length; i++){\n\t\t\tstores[i].refresh();\n\t\t}\n\n\t\tif(scrollState.x || scrollState.y){\n\t\t\tthis.scrollTo(scrollState.x, scrollState.y);\n\t\t}\n\t\tthis.callEvent(\"onDataRender\", []);\n\t},\n\n\tisChildOf: function(childId, parentId){\n\t\treturn this.$data.tasksStore.isChildOf(childId, parentId);\n\t},\n\n\trefreshTask: function (taskId, refresh_links) {\n\t\tvar task = this.getTask(taskId);\n\t\tif (task && this.isTaskVisible(taskId)) {\n\n\t\t\tthis.$data.tasksStore.refresh(taskId, !!this.getState().drag_id);// do quick refresh during drag and drop\n\n\t\t\tif (refresh_links !== undefined && !refresh_links)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0; i < task.$source.length; i++) {\n\t\t\t\tthis.refreshLink(task.$source[i]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < task.$target.length; i++) {\n\t\t\t\tthis.refreshLink(task.$target[i]);\n\t\t\t}\n\t\t}else if(this.isTaskExists(taskId) && this.isTaskExists(this.getParent(taskId))){\n\t\t\tthis.refreshTask(this.getParent(taskId));\n\t\t}\n\n\t},\n\trefreshLink: function (linkId) {\n\t\tthis.$data.linksStore.refresh(linkId, !!this.getState().drag_id);// do quick refresh during drag and drop\n\t},\n\n\tsilent: function(code){\n\t\tvar gantt = this;\n\t\tgantt.$data.tasksStore.silent(function(){\n\t\t\tgantt.$data.linksStore.silent(function(){\n\t\t\t\tcode();\n\t\t\t});\n\t\t});\n\t},\n\n\tclearAll: function () {\n\t\tvar stores = getDatastores.call(this);\n\t\tfor(var i = 0; i < stores.length; i++){\n\t\t\tstores[i].clearAll();\n\t\t}\n\n\t\tthis._update_flags();\n\t\tthis.userdata = {};\n\t\tthis.callEvent(\"onClear\", []);\n\t\tthis.render();\n\t},\n\t_clear_data: function () {\n\t\tthis.$data.tasksStore.clearAll();\n\t\tthis.$data.linksStore.clearAll();\n\t\tthis._update_flags();\n\t\tthis.userdata = {};\n\t},\n\n\tselectTask: function(id){\n\t\tvar store = this.$data.tasksStore;\n\t\tif(!this.config.select_task)\n\t\t\treturn false;\n\t\tif (id){\n\n\t\t\tstore.select(id);\n\t\t}\n\t\treturn store.getSelectedId();\n\t},\n\tunselectTask: function(id){\n\t\tvar store = this.$data.tasksStore;\n\t\tstore.unselect(id);\n\t},\n\tgetSelectedId: function() {\n\t\treturn this.$data.tasksStore.getSelectedId();\n\t}\n};\n};\n\nfunction createFacade(){\n\tvar res = utils.mixin({}, createDatastoreFacade());\n\tutils.mixin(res, createTasksFacade());\n\tutils.mixin(res, createLinksFacade());\n\treturn res;\n}\n\n\n\n\nmodule.exports = {create: createFacade};", "var utils = require(\"../../utils/utils\");\nvar facadeFactory = require(\"./../facades/datastore\");\nvar calculateScaleRange = require(\"../gantt_data_range\");\nfunction initDataStores(gantt){\n\n\tvar facade = facadeFactory.create();\n\tutils.mixin(gantt, facade);\n\tvar tasksStore = gantt.createDatastore({\n\t\tname: \"task\",\n\t\ttype: \"treeDatastore\",\n\t\trootId: function(){return gantt.config.root_id;},\n\t\tinitItem: utils.bind(_init_task, gantt)\n\t});\n\n\tvar linksStore = gantt.createDatastore({\n\t\tname: \"link\",\n\t\tinitItem: utils.bind(_init_link, gantt)\n\t});\n\n\ttasksStore.attachEvent(\"onBeforeRefreshAll\", function(){\n\n\t\tvar order = tasksStore.getVisibleItems();\n\n\t\tfor(var i=0; i < order.length; i++){\n\t\t\tvar item = order[i];\n\t\t\titem.$index = i;\n\t\t\tgantt.resetProjectDates(item);\n\t\t}\n\n\t});\n\n\ttasksStore.attachEvent(\"onFilterItem\", function(id, task){\n\t\tvar min = null, max = null;\n\t\tif (gantt.config.start_date && gantt.config.end_date) {\n\t\t\tif (gantt._isAllowedUnscheduledTask(task)) return true;\n\t\t\tmin = gantt.config.start_date.valueOf();\n\t\t\tmax = gantt.config.end_date.valueOf();\n\n\t\t\tif (+task.start_date > max || +task.end_date < +min)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\ttasksStore.attachEvent(\"onIdChange\", function(oldId, newId){\n\t\tgantt._update_flags(oldId, newId);\n\t});\n\n\ttasksStore.attachEvent(\"onAfterUpdate\", function(id){\n\t\tgantt._update_parents(id);\n\t\tif(gantt.getState(\"batchUpdate\").batch_update){\n\t\t\treturn true;\n\t\t}\n\n\t\tvar task = tasksStore.getItem(id);\n\t\tfor (var i = 0; i < task.$source.length; i++) {\n\t\t\tlinksStore.refresh(task.$source[i]);\n\t\t}\n\t\tfor (var i = 0; i < task.$target.length; i++) {\n\t\t\tlinksStore.refresh(task.$target[i]);\n\t\t}\n\t});\n\n\ttasksStore.attachEvent(\"onAfterItemMove\", function(sid, parent, tindex){\n\t\tvar source = gantt.getTask(sid);\n\n\t\tif(this.getNextSibling(sid) !== null){\n\t\t\tsource.$drop_target = this.getNextSibling(sid);\n\t\t} else if(this.getPrevSibling(sid) !== null){\n\t\t\tsource.$drop_target = \"next:\" + this.getPrevSibling(sid);\n\t\t}else{\n\t\t\tsource.$drop_target = \"next:null\";\n\t\t}\n\n\t});\n\n\ttasksStore.attachEvent(\"onStoreUpdated\", function(id, item, action){\n\t\tif(action == \"delete\"){\n\t\t\tgantt._update_flags(id, null);\n\t\t}\n\n\t\tvar state = gantt.$services.getService(\"state\");\n\t\tif(state.getState(\"batchUpdate\").batch_update){\n\t\t\treturn;\n\t\t}\n\n\t\tif(gantt.config.fit_tasks && action !== \"paint\"){\n\t\t\tvar oldState = gantt.getState();\n\t\t\tcalculateScaleRange(gantt);\n\t\t\tvar newState = gantt.getState();\n\n\t\t\t//this._init_tasks_range();\n\t\t\tif (+oldState.min_date != +newState.min_date || +oldState.max_date != +newState.max_date) {\n\t\t\t\tgantt.render();\n\n\t\t\t\tgantt.callEvent(\"onScaleAdjusted\", []);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t}\n\n\t\tif(action == \"add\" || action == \"move\" || action == \"delete\"){\n\t\t\tgantt.$layout.resize();\n\t\t}else if(!id){\n\t\t\tlinksStore.refresh();\n\t\t}\n\n\t});\n\n\tlinksStore.attachEvent(\"onAfterAdd\", function(id, link){\n\t\tsync_link(link);\n\t});\n\tlinksStore.attachEvent(\"onAfterUpdate\", function(id, link){\n\t\tsync_links();\n\t});\n\tlinksStore.attachEvent(\"onAfterDelete\", function(id, link){\n\t\tsync_link_delete(link);\n\t});\n\tlinksStore.attachEvent(\"onBeforeIdChange\", function(oldId, newId){\n\t\tsync_link_delete(gantt.mixin({id:oldId}, gantt.$data.linksStore.getItem(newId)));\n\t\tsync_link(gantt.$data.linksStore.getItem(newId));\n\t});\n\n\tfunction checkLinkedTaskVisibility(taskId){\n\t\tvar isVisible = gantt.isTaskVisible(taskId);\n\t\tif(!isVisible && gantt.isTaskExists(taskId)){\n\t\t\tvar parent = gantt.getParent(taskId);\n\t\t\tif(gantt.isTaskExists(parent) && gantt.isTaskVisible(parent)){\n\t\t\t\tparent = gantt.getTask(parent);\n\t\t\t\tif(gantt.isSplitTask(parent)){\n\t\t\t\t\tisVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isVisible;\n\t}\n\n\tlinksStore.attachEvent(\"onFilterItem\", function(id, link){\n\t\tif (!gantt.config.show_links) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar sourceVisible = checkLinkedTaskVisibility(link.source);\n\t\tvar targetVisible = checkLinkedTaskVisibility(link.target);\n\n\t\tif (!(sourceVisible && targetVisible) ||\n\t\t\tgantt._isAllowedUnscheduledTask(gantt.getTask(link.source)) || gantt._isAllowedUnscheduledTask(gantt.getTask(link.target)))\n\t\t\treturn false;\n\n\t\treturn gantt.callEvent(\"onBeforeLinkDisplay\", [id, link]);\n\t});\n\n\n\t(function(){\n\t\t// delete all connected links after task is deleted\n\t\tvar treeHelper = require(\"../../utils/task_tree_helpers\");\n\t\tvar deletedLinks = {};\n\n\t\tgantt.attachEvent(\"onBeforeTaskDelete\", function(id, item){\n\t\t\tdeletedLinks[id] = treeHelper.getSubtreeLinks(gantt, id);\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onAfterTaskDelete\", function(id, item) {\n\t\t\tif(deletedLinks[id]){\n\t\t\t\tgantt.$data.linksStore.silent(function(){\n\t\t\t\t\tfor(var i in deletedLinks[id]){\n\t\t\t\t\t\tgantt.$data.linksStore.removeItem(i);\n\t\t\t\t\t\tsync_link_delete(deletedLinks[id][i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tdeletedLinks[id] = null;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t})();\n\n\tgantt.attachEvent(\"onAfterLinkDelete\", function(id, link) {\n\t\tgantt.refreshTask(link.source);\n\t\tgantt.refreshTask(link.target);\n\t});\n\n\tgantt.attachEvent(\"onParse\", sync_links);\n\n\tmapEvents({\n\t\tsource: linksStore,\n\t\ttarget: gantt,\n\t\tevents:{\n\t\t\t\"onItemLoading\":\"onLinkLoading\",\n\t\t\t\"onBeforeAdd\":\"onBeforeLinkAdd\",\n\t\t\t\"onAfterAdd\":\"onAfterLinkAdd\",\n\t\t\t\"onBeforeUpdate\":\"onBeforeLinkUpdate\",\n\t\t\t\"onAfterUpdate\":\"onAfterLinkUpdate\",\n\t\t\t\"onBeforeDelete\":\"onBeforeLinkDelete\",\n\t\t\t\"onAfterDelete\":\"onAfterLinkDelete\",\n\t\t\t\"onIdChange\":\"onLinkIdChange\"\n\t\t}\n\t});\n\n\tmapEvents({\n\t\tsource: tasksStore,\n\t\ttarget: gantt,\n\t\tevents:{\n\t\t\t\"onItemLoading\":\"onTaskLoading\",\n\t\t\t\"onBeforeAdd\":\"onBeforeTaskAdd\",\n\t\t\t\"onAfterAdd\":\"onAfterTaskAdd\",\n\t\t\t\"onBeforeUpdate\":\"onBeforeTaskUpdate\",\n\t\t\t\"onAfterUpdate\":\"onAfterTaskUpdate\",\n\t\t\t\"onBeforeDelete\":\"onBeforeTaskDelete\",\n\t\t\t\"onAfterDelete\":\"onAfterTaskDelete\",\n\t\t\t\"onIdChange\":\"onTaskIdChange\",\n\t\t\t\"onBeforeItemMove\":\"onBeforeTaskMove\",\n\t\t\t\"onAfterItemMove\":\"onAfterTaskMove\",\n\t\t\t\"onFilterItem\":\"onBeforeTaskDisplay\",\n\t\t\t\"onItemOpen\":\"onTaskOpened\",\n\t\t\t\"onItemClose\":\"onTaskClosed\",\n\t\t\t\"onBeforeSelect\":\"onBeforeTaskSelected\",\n\t\t\t\"onAfterSelect\":\"onTaskSelected\",\n\t\t\t\"onAfterUnselect\":\"onTaskUnselected\"\n\t\t}\n\t});\n\n\tgantt.$data = {\n\t\ttasksStore: tasksStore,\n\t\tlinksStore: linksStore\n\t};\n\n\tfunction sync_link(link){\n\t\tif(gantt.isTaskExists(link.source)){\n\t\t\tvar sourceTask = gantt.getTask(link.source);\n\t\t\tsourceTask.$source = sourceTask.$source || [];\n\t\t\tsourceTask.$source.push(link.id);\n\t\t}\n\t\tif(gantt.isTaskExists(link.target)){\n\t\t\tvar targetTask = gantt.getTask(link.target);\n\t\t\ttargetTask.$target = targetTask.$target || [];\n\t\t\ttargetTask.$target.push(link.id);\n\t\t}\n\t}\n\n\tfunction sync_link_delete(link){\n\t\tif(gantt.isTaskExists(link.source)){\n\t\t\tvar sourceTask = gantt.getTask(link.source);\n\t\t\tfor(var i = 0; i < sourceTask.$source.length; i++){\n\t\t\t\tif(sourceTask.$source[i] == link.id){\n\t\t\t\t\tsourceTask.$source.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(gantt.isTaskExists(link.target)){\n\t\t\tvar targetTask = gantt.getTask(link.target);\n\t\t\tfor(var i = 0; i < targetTask.$target.length; i++){\n\t\t\t\tif(targetTask.$target[i] == link.id){\n\t\t\t\t\ttargetTask.$target.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction sync_links() {\n\t\tvar task = null;\n\t\tvar tasks = gantt.$data.tasksStore.getItems();\n\n\t\tfor(var i = 0, len = tasks.length; i < len; i++){\n\t\t\ttask = tasks[i];\n\t\t\ttask.$source = [];\n\t\t\ttask.$target = [];\n\t\t}\n\n\t\tvar links = gantt.$data.linksStore.getItems();\n\t\tfor (var i = 0, len = links.length; i < len; i++) {\n\n\t\t\tvar link = links[i];\n\t\t\tsync_link(link);\n\t\t}\n\t}\n\n\tfunction mapEvents(conf){\n\t\tvar mapFrom = conf.source;\n\t\tvar mapTo = conf.target;\n\t\tfor(var i in conf.events){\n\t\t\t(function(sourceEvent, targetEvent){\n\t\t\t\tmapFrom.attachEvent(sourceEvent, function(){\n\t\t\t\t\treturn mapTo.callEvent(targetEvent, Array.prototype.slice.call(arguments));\n\t\t\t\t}, targetEvent);\n\t\t\t})(i, conf.events[i]);\n\t\t}\n\t}\n\n\tfunction _init_task(task) {\n\t\tif (!this.defined(task.id))\n\t\t\ttask.id = this.uid();\n\n\t\tif (task.start_date)\n\t\t\ttask.start_date = gantt.date.parseDate(task.start_date, \"xml_date\");\n\t\tif (task.end_date)\n\t\t\ttask.end_date = gantt.date.parseDate(task.end_date, \"xml_date\");\n\n\n\t\tvar duration = null;\n\t\tif (task.duration || task.duration === 0) {\n\t\t\ttask.duration = duration = task.duration * 1;\n\t\t}\n\n\t\tif (duration) {\n\t\t\tif (task.start_date && !task.end_date) {\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t} else if (!task.start_date && task.end_date) {\n\t\t\t\ttask.start_date = this.calculateEndDate({\n\t\t\t\t\tstart_date: task.end_date,\n\t\t\t\t\tduration: -task.duration,\n\t\t\t\t\ttask: task\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\tif (this._isAllowedUnscheduledTask(task)) {\n\t\t\tthis._set_default_task_timing(task);\n\t\t}\n\t\tthis._init_task_timing(task);\n\t\tif (task.start_date && task.end_date)\n\t\t\tthis.correctTaskWorkTime(task);\n\n\t\ttask.$source = [];\n\t\ttask.$target = [];\n\t\tif (task.parent === undefined) {\n\t\t\tthis.setParent(task, this.config.root_id);\n\t\t}\n\n\t\treturn task;\n\t}\n\n\tfunction _init_link(link) {\n\t\tif (!this.defined(link.id))\n\t\t\tlink.id = this.uid();\n\t\treturn link;\n\t}\n}\n\n\nmodule.exports = initDataStores;\n", "function createLayoutFacade(){\n\n\tfunction getTimeline(gantt){\n\t\treturn gantt.$ui.getView(\"timeline\");\n\t}\n\n\tfunction getGrid(gantt){\n\t\treturn gantt.$ui.getView(\"grid\");\n\t}\n\n\tfunction getVerticalScrollbar(gantt){\n\t\treturn gantt.$ui.getView(\"scrollVer\");\n\t}\n\n\tfunction getHorizontalScrollbar(gantt){\n\t\treturn gantt.$ui.getView(\"scrollHor\");\n\t}\n\n\tvar DEFAULT_VALUE = \"DEFAULT_VALUE\";\n\n\tfunction tryCall(getView, method, args, fallback){\n\t\tvar view = getView(this);\n\t\tif (!(view && view.isVisible())) {\n\t\t\tif(fallback){\n\t\t\t\treturn fallback();\n\t\t\t}else{\n\t\t\t\treturn DEFAULT_VALUE;\n\t\t\t}\n\t\t} else {\n\t\t\treturn view[method].apply(view, args);\n\t\t}\n\t}\n\n\treturn {\n\n\t\tgetColumnIndex: function(name) {\n\t\t\tvar res = tryCall.call(this, getGrid, \"getColumnIndex\", [name]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tdateFromPos: function(x) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"dateFromPos\", Array.prototype.slice.call(arguments));\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn this.getState().min_date;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tposFromDate: function(date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"posFromDate\", [date]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetRowTop: function(index) {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getRowTop\", [index],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getRowTop\", [index]);}\n\t\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskTop: function(id) {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getItemTop\", [id],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getItemTop\", [id]);}\n\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\n\t\tgetTaskPosition: function(task, start_date, end_date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"getItemPosition\", [task, start_date, end_date]);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\tvar top = this.getTaskTop(task.id);\n\t\t\t\tvar height = this.getTaskHeight();\n\n\t\t\t\treturn {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: top,\n\t\t\t\t\theight: height,\n\t\t\t\t\twidth: 0\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskHeight: function() {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getItemHeight\", [],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getItemHeight\", []);}\n\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\n\t\tcolumnIndexByDate: function(date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"columnIndexByDate\", [date]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\troundTaskDates: function() {\n\t\t\ttryCall.call(this, getTimeline, \"roundTaskDates\", []);\n\t\t},\n\n\t\tgetScale: function() {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"getScale\", []);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn null;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskNode: function(id) {\n\t\t\tvar timeline = getTimeline(this);\n\t\t\tif (!timeline || !timeline.isVisible()) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn timeline._taskRenderer.rendered[id];\n\t\t\t}\n\t\t},\n\n\n\t\tgetLinkNode: function(id) {\n\t\t\tvar timeline = getTimeline(this);\n\t\t\tif (!timeline.isVisible()) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn timeline._linkRenderer.rendered[id];\n\t\t\t}\n\t\t},\n\n\t\tscrollTo: function(left, top){\n\t\t\tvar vertical = getVerticalScrollbar(this);\n\t\t\tvar horizontal = getHorizontalScrollbar(this);\n\n\t\t\tvar oldH = {position: 0},\n\t\t\t\toldV = {position: 0};\n\n\t\t\tif(vertical){\n\t\t\t\toldV = vertical.getScrollState();\n\t\t\t}\n\t\t\tif(horizontal){\n\t\t\t\toldH = horizontal.getScrollState();\n\t\t\t}\n\n\t\t\tif (horizontal && left*1 == left){\n\t\t\t\thorizontal.scroll(left);\n\t\t\t}\n\t\t\tif(vertical && top*1 == top){\n\t\t\t\tvertical.scroll(top);\n\t\t\t}\n\n\t\t\tvar newV = {position: 0},\n\t\t\t\tnewH = {position: 0};\n\t\t\tif(vertical){\n\t\t\t\tnewV = vertical.getScrollState();\n\t\t\t}\n\t\t\tif(horizontal){\n\t\t\t\tnewH = horizontal.getScrollState();\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onGanttScroll\", [oldH.position, oldV.position, newH.position, newV.position]);\n\t\t},\n\n\t\tshowDate: function(date){\n\t\t\tvar date_x = this.posFromDate(date);\n\t\t\tvar scroll_to = Math.max(date_x - this.config.task_scroll_offset, 0);\n\t\t\tthis.scrollTo(scroll_to);\n\t\t},\n\t\tshowTask: function(id) {\n\t\t\tvar pos = this.getTaskPosition(this.getTask(id));\n\n\t\t\tvar left = Math.max(pos.left - this.config.task_scroll_offset, 0);\n\n\t\t\tvar dataHeight = this._scroll_state().y;\n\t\t\tvar top;\n\t\t\tif(!dataHeight){\n\t\t\t\ttop = pos.top;\n\t\t\t}else{\n\t\t\t\ttop = pos.top - (dataHeight - this.config.row_height)/2;\n\t\t\t}\n\n\t\t\tthis.scrollTo(left, top);\n\t\t},\n\t\t_scroll_state: function(){\n\t\t\tvar result = {\n\t\t\t\tx: false,\n\t\t\t\ty: false,\n\t\t\t\tx_pos: 0,\n\t\t\t\ty_pos: 0,\n\t\t\t\tscroll_size: this.config.scroll_size + 1,//1px for inner content\n\t\t\t\tx_inner: 0,\n\t\t\t\ty_inner: 0\n\t\t\t};\n\n\t\t\tvar scrollVer = getVerticalScrollbar(this),\n\t\t\t\tscrollHor = getHorizontalScrollbar(this);\n\t\t\tif(scrollHor){\n\t\t\t\tvar horState = scrollHor.getScrollState();\n\t\t\t\tif(horState.visible){\n\t\t\t\t\tresult.x = horState.size;\n\t\t\t\t\tresult.x_inner = horState.scrollSize;\n\t\t\t\t}\n\t\t\t\tresult.x_pos = horState.position || 0;\n\t\t\t}\n\n\t\t\tif(scrollVer){\n\t\t\t\tvar verState = scrollVer.getScrollState();\n\t\t\t\tif(verState.visible){\n\t\t\t\t\tresult.y = verState.size;\n\n\t\t\t\t\tresult.y_inner = verState.scrollSize;\n\t\t\t\t}\n\t\t\t\tresult.y_pos = verState.position || 0;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\tgetScrollState: function(){\n\t\t\tvar state = this._scroll_state();\n\t\t\treturn { x:state.x_pos, y:state.y_pos, inner_width:state.x, inner_height:state.y, width: state.x_inner, height: state.y_inner };\n\t\t}\n\n\t};\n\n}\n\nmodule.exports = createLayoutFacade;", "module.exports = function(gantt) {\n\tdelete gantt.addTaskLayer;\n\tdelete gantt.addLinkLayer;\n};", "var domHelpers = require(\"../../utils/dom_helpers\");\n\nvar initializer = (function() {\n\treturn function (gantt) {\n\t\treturn {\n\n\t\t\tgetVerticalScrollbar: function(){\n\t\t\t\treturn gantt.$ui.getView(\"scrollVer\");\n\t\t\t},\n\t\t\tgetHorizontalScrollbar: function(){\n\t\t\t\treturn gantt.$ui.getView(\"scrollHor\");\n\t\t\t},\n\n\t\t\t_legacyGridResizerClass: function(layout){\n\t\t\t\tvar resizers = layout.getCellsByType(\"resizer\");\n\t\t\t\tfor(var i = 0; i < resizers.length; i++){\n\t\t\t\t\tvar r = resizers[i];\n\t\t\t\t\tvar gridResizer = false;\n\n\t\t\t\t\tvar prev = r.$parent.getPrevSibling(r.$id);\n\t\t\t\t\tif(prev && prev.$config && prev.$config.id === \"grid\"){\n\t\t\t\t\t\tgridResizer= true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar next = r.$parent.getNextSibling(r.$id);\n\t\t\t\t\t\tif(next && next.$config && next.$config.id === \"grid\"){\n\t\t\t\t\t\t\tgridResizer= true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(gridResizer){\n\t\t\t\t\t\tr.$config.css = (r.$config.css ? r.$config.css + \" \" : \"\") + \"gantt_grid_resize_wrap\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCreated: function(layout) {\n\t\t\t\tvar first = true;\n\n\t\t\t\tthis._legacyGridResizerClass(layout);\n\n\t\t\t\tlayout.attachEvent(\"onBeforeResize\", function() {\n\t\t\t\t\tvar mainTimeline = gantt.$ui.getView(\"timeline\");\n\t\t\t\t\tif (mainTimeline)\n\t\t\t\t\t\tmainTimeline.$config.hidden = mainTimeline.$parent.$config.hidden = !gantt.config.show_chart;\n\n\t\t\t\t\tvar mainGrid = gantt.$ui.getView(\"grid\");\n\n\t\t\t\t\tif(!mainGrid)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tvar showGrid = gantt.config.show_grid;\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tvar colsWidth = mainGrid._getColsTotalWidth();\n\t\t\t\t\t\tif (colsWidth !== false){\n\t\t\t\t\t\t\tgantt.config.grid_width = colsWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshowGrid = showGrid && !!gantt.config.grid_width;\n\t\t\t\t\t\tgantt.config.show_grid = showGrid;\n\t\t\t\t\t}\n\t\t\t\t\tmainGrid.$config.hidden = mainGrid.$parent.$config.hidden = !showGrid;\n\n\t\t\t\t\tif (!mainGrid.$config.hidden) {\n\t\t\t\t\t\t/* restrict grid width due to min_width, max_width, min_grid_column_width */\n\t\t\t\t\t\tvar grid_limits = mainGrid._getGridWidthLimits();\n\t\t\t\t\t\tif (grid_limits[0] && gantt.config.grid_width < grid_limits[0])\n\t\t\t\t\t\t\tgantt.config.grid_width = grid_limits[0];\n\t\t\t\t\t\tif (grid_limits[1] && gantt.config.grid_width > grid_limits[1])\n\t\t\t\t\t\t\tgantt.config.grid_width = grid_limits[1];\n\t\t\t\t\t\tif (mainTimeline && gantt.config.show_chart){\n\n\t\t\t\t\t\t\tmainGrid.$config.width = gantt.config.grid_width - 1;\n\t\t\t\t\t\t\tif (!first) {\n\t\t\t\t\t\t\t\tif (mainTimeline && !domHelpers.isChildOf(mainTimeline.$task, layout.$view)) {\n\t\t\t\t\t\t\t\t\t// timeline is being displayed after being not visible, reset grid with from full screen\n\t\t\t\t\t\t\t\t\tif (!mainGrid.$config.original_grid_width) {\n\t\t\t\t\t\t\t\t\t\tvar skinSettings = gantt.skins[gantt.skin];\n\t\t\t\t\t\t\t\t\t\tif(skinSettings && skinSettings.config && skinSettings.config.grid_width){\n\t\t\t\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width =  skinSettings.config.grid_width;\n\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width = 0;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tgantt.config.grid_width = mainGrid.$config.original_grid_width;\n\t\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = gantt.config.grid_width;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmainGrid.$parent._setContentSize(mainGrid.$config.width, mainGrid.$config.height);\n\t\t\t\t\t\t\t\t\tgantt.$layout._syncCellSizes(mainGrid.$parent.$config.group, gantt.config.grid_width);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = gantt.config.grid_width;\n\t\t\t\t\t\t\t\tif (mainGrid.$parent.$config.group) {\n\t\t\t\t\t\t\t\t\tgantt.$layout._syncCellSizes(mainGrid.$parent.$config.group, mainGrid.$parent.$config.width);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (mainTimeline && domHelpers.isChildOf(mainTimeline.$task, layout.$view)) {\n\t\t\t\t\t\t\t\t// hiding timeline, remember grid with to restore it when timeline is displayed again\n\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width = gantt.config.grid_width;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!first) {\n\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfirst = false;\n\t\t\t\t});\n\t\t\t\tthis._initScrollStateEvents(layout);\n\t\t\t},\n\n\t\t\t_initScrollStateEvents: function(layout) {\n\t\t\t\tgantt._getVerticalScrollbar = this.getVerticalScrollbar;\n\t\t\t\tgantt._getHorizontalScrollbar = this.getHorizontalScrollbar;\n\n\t\t\t\tvar vertical = this.getVerticalScrollbar();\n\t\t\t\tvar horizontal = this.getHorizontalScrollbar();\n\t\t\t\tif (vertical) {\n\t\t\t\t\tvertical.attachEvent(\"onScroll\", function(oldPos, newPos, dir){\n\t\t\t\t\t\tvar scrollState = gantt.getScrollState();\n\t\t\t\t\t\tgantt.callEvent(\"onGanttScroll\", [scrollState.x, oldPos, scrollState.x, newPos]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (horizontal) {\n\t\t\t\t\thorizontal.attachEvent(\"onScroll\", function(oldPos, newPos, dir){\n\t\t\t\t\t\tvar scrollState = gantt.getScrollState();\n\t\t\t\t\t\tgantt.callEvent(\"onGanttScroll\", [oldPos, scrollState.y, newPos, scrollState.y]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlayout.attachEvent(\"onResize\", function(){\n\t\t\t\t\tif (vertical && !gantt.$scroll_ver){\n\t\t\t\t\t\tgantt.$scroll_ver = vertical.$scroll_ver;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (horizontal && !gantt.$scroll_hor){\n\t\t\t\t\t\tgantt.$scroll_hor = horizontal.$scroll_hor;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_findGridResizer: function(layout, grid){\n\t\t\t\tvar resizers = layout.getCellsByType(\"resizer\");\n\n\t\t\t\tvar gridFirst = true;\n\t\t\t\tvar gridResizer;\n\t\t\t\tfor(var i = 0; i < resizers.length; i++){\n\t\t\t\t\tvar res = resizers[i];\n\t\t\t\t\tres._getSiblings();\n\t\t\t\t\tvar prev = res._behind;\n\t\t\t\t\tvar next = res._front;\n\t\t\t\t\tif(prev && prev.$content === grid || (prev.isChild && prev.isChild(grid))){\n\t\t\t\t\t\tgridResizer = res;\n\t\t\t\t\t\tgridFirst = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(next && next.$content === grid || (next.isChild && next.isChild(grid))){\n\t\t\t\t\t\tgridResizer = res;\n\t\t\t\t\t\tgridFirst = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tresizer: gridResizer,\n\t\t\t\t\tgridFirst: gridFirst\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tonInitialized: function (layout) {\n\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\n\t\t\t\tvar resizeInfo = this._findGridResizer(layout, grid);\n\n\t\t\t\t// expose grid resize events\n\t\t\t\tif(resizeInfo.resizer){\n\t\t\t\t\tvar gridFirst = resizeInfo.gridFirst,\n\t\t\t\t\t\tnext = resizeInfo.resizer;\n\t\t\t\t\tvar initialWidth;\n\t\t\t\t\tnext.attachEvent(\"onResizeStart\", function(prevCellWidth, nextCellWidth){\n\n\t\t\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\t\t\t\t\t\tvar viewCell = grid ? grid.$parent : null;\n\t\t\t\t\t\tif(viewCell){\n\t\t\t\t\t\t\tvar limits = grid._getGridWidthLimits();\n\n\t\t\t\t\t\t\t// min grid width is defined by min widths of its columns, unless grid has horizontal scroll\n\t\t\t\t\t\t\tif(!grid.$config.scrollable)\n\t\t\t\t\t\t\t\tviewCell.$config.minWidth = limits[0];\n\n\t\t\t\t\t\t\tviewCell.$config.maxWidth = limits[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinitialWidth = gridFirst ? prevCellWidth : nextCellWidth;\n\t\t\t\t\t\treturn gantt.callEvent(\"onGridResizeStart\", [initialWidth]);\n\t\t\t\t\t});\n\t\t\t\t\tnext.attachEvent(\"onResize\", function(newBehindSize, newFrontSize){\n\t\t\t\t\t\tvar newSize = gridFirst ? newBehindSize : newFrontSize;\n\t\t\t\t\t\treturn gantt.callEvent(\"onGridResize\", [initialWidth, newSize]);\n\t\t\t\t\t});\n\t\t\t\t\tnext.attachEvent(\"onResizeEnd\", function(oldBackSize, oldFrontSize, newBackSize, newFrontSize){\n\n\t\t\t\t\t\tvar oldSize = gridFirst ? oldBackSize : oldFrontSize;\n\t\t\t\t\t\tvar newSize = gridFirst ? newBackSize : newFrontSize;\n\t\t\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\t\t\t\t\t\tvar viewCell = grid ? grid.$parent : null;\n\t\t\t\t\t\tif(viewCell){\n\t\t\t\t\t\t\tviewCell.$config.minWidth = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar res = gantt.callEvent(\"onGridResizeEnd\", [oldSize, newSize]);\n\t\t\t\t\t\tif(res){\n\t\t\t\t\t\t\tgantt.config.grid_width = newSize;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tonDestroyed: function (timeline) {\n\n\t\t\t}\n\t\t};\n\n\t};\n})();\n\nmodule.exports = initializer;", "var domHelpers = require(\"../../../utils/dom_helpers\");\n\nvar initLinksDND = function(timeline, gantt) {\n\tvar _link_landing,\n\t\t_link_target_task,\n\t\t_link_target_task_start,\n\t\t_link_source_task,\n\t\t_link_source_task_start;\n\n\n\tfunction getVisibleMilestoneWidth() {\n\t\tvar origWidth = timeline.getItemHeight();//m-s have square shape\n\t\treturn Math.round(Math.sqrt(2 * origWidth * origWidth)) - 2;\n\t}\n\n\tfunction isMilestone(task) {\n\t\treturn gantt.getTaskType(task.type) == gantt.config.types.milestone;\n\t}\n\n\tfunction getDndState(){\n\t\treturn {\n\t\t\tlink_source_id : _link_source_task,\n\t\t\tlink_target_id : _link_target_task,\n\t\t\tlink_from_start : _link_source_task_start,\n\t\t\tlink_to_start : _link_target_task_start,\n\t\t\tlink_landing_area : _link_landing\n\t\t};\n\t}\n\n\tvar services = gantt.$services;\n\n\tvar state = services.getService(\"state\");\n\tvar DnD = services.getService(\"dnd\");\n\n\tstate.registerProvider(\"linksDnD\", getDndState);\n\n\tvar dnd = new DnD(timeline.$task_bars, { sensitivity : 0, updates_per_second : 60 }),\n\t\tstart_marker = \"task_start_date\",\n\t\tend_marker = \"task_end_date\",\n\t\tlink_edge_marker = \"gantt_link_point\",\n\t\tlink_landing_hover_area = \"gantt_link_control\";\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function(obj,e) {\n\t\tvar target = (e.target||e.srcElement);\n\t\tresetDndState();\n\t\tif(gantt.getState().drag_id)\n\t\t\treturn false;\n\n\t\tif(domHelpers.locateClassName(target, link_edge_marker)){\n\t\t\tif(domHelpers.locateClassName(target, start_marker))\n\t\t\t\t_link_source_task_start = true;\n\n\t\t\tvar sid = gantt.locate(e);\n\t\t\t_link_source_task = sid;\n\n\t\t\tvar t = gantt.getTask(sid);\n\t\t\tif(gantt.isReadonly(t)){\n\t\t\t\tresetDndState();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar shift = 0;\n\n\t\t\tthis._dir_start = getLinePos(t, !!_link_source_task_start, shift, timeline.$getConfig(), true);\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\n\t}, this));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function(obj,e) {\n\t\tif(gantt.config.touch) {\n\t\t\tgantt.refreshData();\n\t\t}\n\t\tupdateMarkedHtml(dnd.config.marker);\n\t}, this));\n\n\tfunction getLinePos(task, to_start, shift, cfg, isStart){\n\t\tvar taskPos = getMilestonePosition(task, function(task){ return gantt.getTaskPosition(task);}, cfg);\n\n\t\tvar pos = {x: taskPos.x, y: taskPos.y};\n\t\tif(!to_start){\n\t\t\tpos.x = taskPos.xEnd;\n\t\t}\n\n\t\t//var pos = gantt._get_task_pos(task, !!to_start);\n\t\tpos.y += gantt.config.row_height/2;\n\n\t\tvar offset = isMilestone(task) && isStart ? 2 : 0;\n\n\t\tshift = shift || 0;\n\t\tif(cfg.rtl)\n\t\t\tshift = shift * -1;\n\n\t\tpos.x += (to_start ? -1 : 1)*shift  - offset;\n\t\treturn pos;\n\t}\n\n\tfunction getMilestonePosition(task, getTaskPosition, cfg){\n\t\tvar pos = getTaskPosition(task);\n\n\t\tvar res = {\n\t\t\tx: pos.left,\n\t\t\ty: pos.top,\n\t\t\twidth: pos.width,\n\t\t\theight: pos.height\n\t\t};\n\n\t\tif(cfg.rtl){\n\t\t\tres.xEnd = res.x;\n\t\t\tres.x = res.xEnd + res.width;\n\t\t}else{\n\t\t\tres.xEnd = res.x + res.width;\n\t\t}\n\t\tres.yEnd = res.y + res.height;\n\n\t\tif(gantt.getTaskType(task.type) == gantt.config.types.milestone){\n\t\t\tvar milestoneWidth = getVisibleMilestoneWidth();\n\n\t\t\tres.x += (!cfg.rtl ? -1 : 1)*(milestoneWidth / 2);\n\t\t\tres.xEnd += (!cfg.rtl ? 1 : -1)*(milestoneWidth / 2);\n\n\t\t\t//pos.x -= milestoneWidth / 2;\n\t\t\t//pos.xEnd += milestoneWidth / 2;\n\t\t\tres.width = pos.xEnd - pos.x;\n\t\t}\n\n\n\t\treturn res;\n\t}\n\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function(obj,e) {\n\t\tvar dd = dnd.config;\n\t\tvar pos = dnd.getPosition(e);\n\t\tadvanceMarker(dd.marker, pos);\n\t\tvar landing = !!domHelpers.locateClassName(e, link_landing_hover_area);\n\n\t\tvar prevTarget = _link_target_task;\n\t\tvar prevLanding = _link_landing;\n\t\tvar prevToStart = _link_target_task_start;\n\n\t\tvar targ = gantt.locate(e),\n\t\t\tto_start = true;\n\t\tif(landing){\n\t\t\t//refreshTask\n\t\t\tto_start = !domHelpers.locateClassName(e, end_marker);\n\t\t\tlanding = !!targ;\n\t\t}\n\n\t\t_link_target_task = targ;\n\t\t_link_landing = landing;\n\t\t_link_target_task_start = to_start;\n\n\t\tif(landing){\n\t\t\tvar t = gantt.getTask(targ);\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar node = domHelpers.locateClassName(e, link_landing_hover_area);\n\t\t\tvar shift = 0;\n\t\t\tif(node){\n\t\t\t\tshift = Math.floor(node.offsetWidth  / 2);\n\t\t\t}\n\n\t\t\tthis._dir_end = getLinePos(t, !!_link_target_task_start,shift, config);\n\t\t}else{\n\t\t\tthis._dir_end = domHelpers.getRelativeEventPosition(e, timeline.$task_data);\n\t\t}\n\n\t\tvar targetChanged = !(prevLanding == landing && prevTarget == targ && prevToStart == to_start);\n\t\tif(targetChanged){\n\t\t\tif(prevTarget)\n\t\t\t\tgantt.refreshTask(prevTarget, false);\n\t\t\tif(targ)\n\t\t\t\tgantt.refreshTask(targ, false);\n\t\t}\n\n\t\tif(targetChanged){\n\t\t\tupdateMarkedHtml(dd.marker);\n\t\t}\n\n\t\tshowDirectingLine(this._dir_start.x, this._dir_start.y, this._dir_end.x, this._dir_end.y);\n\n\t\treturn true;\n\t}, this));\n\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function() {\n\t\tvar drag = getDndState();\n\n\t\tif(drag.link_source_id && drag.link_target_id && drag.link_source_id != drag.link_target_id){\n\t\t\tvar type = gantt._get_link_type(drag.link_from_start, drag.link_to_start);\n\n\t\t\tvar link = {source : drag.link_source_id, target: drag.link_target_id, type:type};\n\t\t\tif(link.type && gantt.isLinkAllowed(link))\n\t\t\t\tgantt.addLink(link);\n\t\t}\n\n\t\tresetDndState();\n\n\t\tif(gantt.config.touch) {\n\t\t\tgantt.refreshData();\n\t\t}\n\t\telse {\n\t\t\tif (drag.link_source_id)\n\t\t\t\tgantt.refreshTask(drag.link_source_id, false);\n\t\t\tif (drag.link_target_id)\n\t\t\t\tgantt.refreshTask(drag.link_target_id, false);\n\t\t}\n\t\tremoveDirectionLine();\n\t}, this));\n\n\tfunction updateMarkedHtml(marker){\n\t\tvar link = getDndState();\n\n\t\tvar css = [\"gantt_link_tooltip\"];\n\t\tif(link.link_source_id && link.link_target_id){\n\t\t\tif(gantt.isLinkAllowed(link.link_source_id, link.link_target_id, link.link_from_start, link.link_to_start)){\n\t\t\t\tcss.push(\"gantt_allowed_link\");\n\t\t\t}else{\n\t\t\t\tcss.push(\"gantt_invalid_link\");\n\t\t\t}\n\t\t}\n\n\t\tvar className = gantt.templates.drag_link_class(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start);\n\t\tif(className)\n\t\t\tcss.push(className);\n\n\t\tvar html = \"<div class='\"+className+ \"'>\" +\n\t\t\tgantt.templates.drag_link(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start) +\n\t\t\t\"</div>\";\n\t\tmarker.innerHTML = html;\n\t}\n\n\tfunction advanceMarker(marker, pos){\n\t\tmarker.style.left = pos.x + 5 + \"px\";\n\t\tmarker.style.top = pos.y + 5 + \"px\";\n\t}\n\n\tfunction resetDndState(){\n\t\t_link_source_task =\n\t\t\t_link_source_task_start =\n\t\t\t\t_link_target_task = null;\n\t\t_link_target_task_start = true;\n\t}\n\tfunction showDirectingLine(s_x, s_y, e_x, e_y){\n\t\tvar div = getDirectionLine();\n\n\t\tvar link = getDndState();\n\n\t\tvar css = [\"gantt_link_direction\"];\n\t\tif(gantt.templates.link_direction_class){\n\t\t\tcss.push(gantt.templates.link_direction_class(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start));\n\t\t}\n\n\t\tvar dist =Math.sqrt( (Math.pow(e_x - s_x, 2)) + (Math.pow(e_y - s_y, 2)) );\n\t\tdist = Math.max(0, dist - 3);\n\t\tif(!dist)\n\t\t\treturn;\n\n\t\tdiv.className = css.join(\" \");\n\t\tvar tan = (e_y - s_y)/(e_x - s_x),\n\t\t\tangle = Math.atan(tan);\n\n\t\tif(coordinateCircleQuarter(s_x, e_x, s_y, e_y) == 2){\n\t\t\tangle += Math.PI;\n\t\t}else if(coordinateCircleQuarter(s_x, e_x, s_y, e_y) == 3){\n\t\t\tangle -= Math.PI;\n\t\t}\n\n\n\n\t\tvar sin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\ttop = Math.round(s_y),\n\t\t\tleft = Math.round(s_x);\n\n\n\t\tvar style = [\n\t\t\t\"-webkit-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-moz-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-ms-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-o-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"width:\" + Math.round(dist) + \"px\"\n\t\t];\n\n\t\tif(window.navigator.userAgent.indexOf(\"MSIE 8.0\") != -1){\n\t\t\t//ms-filter breaks styles in ie9, so add it only for 8th\n\t\t\tstyle.push(\"-ms-filter: \\\"\" + ieTransform(sin, cos) + \"\\\"\");\n\n\t\t\tvar shiftLeft = Math.abs(Math.round(s_x - e_x)),\n\t\t\t\tshiftTop = Math.abs(Math.round(e_y - s_y));\n\t\t\t//fix rotation axis\n\t\t\tswitch(coordinateCircleQuarter(s_x, e_x, s_y, e_y)){\n\t\t\t\tcase 1:\n\t\t\t\t\ttop -= shiftTop;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tleft -= shiftLeft;\n\t\t\t\t\ttop -= shiftTop;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tleft -= shiftLeft;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t\tstyle.push(\"top:\" +  top + \"px\");\n\t\tstyle.push(\"left:\" +  left + \"px\");\n\n\t\tdiv.style.cssText = style.join(\";\");\n\t}\n\n\tfunction ieTransform(sin, cos){\n\t\treturn \"progid:DXImageTransform.Microsoft.Matrix(\"+\n\t\t\t\"M11 = \"+cos+\",\"+\n\t\t\t\"M12 = -\"+sin+\",\"+\n\t\t\t\"M21 = \"+sin+\",\"+\n\t\t\t\"M22 = \"+cos+\",\"+\n\t\t\t\"SizingMethod = 'auto expand'\"+\n\t\t\")\";\n\t}\n\tfunction coordinateCircleQuarter(sX, eX, sY, eY){\n\t\tif(eX >= sX){\n\t\t\tif(eY <= sY){\n\t\t\t\treturn 1;\n\t\t\t}else{\n\t\t\t\treturn 4;\n\t\t\t}\n\t\t}else{\n\t\t\tif(eY <= sY){\n\t\t\t\treturn 2;\n\t\t\t}else{\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t}\n\n\t}\n\tfunction getDirectionLine(){\n\t\tif(!dnd._direction){\n\t\t\tdnd._direction = document.createElement(\"div\");\n\t\t\ttimeline.$task_links.appendChild(dnd._direction);\n\t\t}\n\t\treturn dnd._direction;\n\t}\n\tfunction removeDirectionLine(){\n\t\tif(dnd._direction){\n\t\t\tif (dnd._direction.parentNode)\t//the event line can be detached because of data refresh\n\t\t\t\tdnd._direction.parentNode.removeChild(dnd._direction);\n\n\t\t\tdnd._direction = null;\n\t\t}\n\t}\n};\n\nmodule.exports = {\n\tcreateLinkDND: function(){\n\t\treturn {\n\t\t\tinit: initLinksDND\n\t\t};\n\t}\n};", "var domHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\");\nvar timeout = require(\"../../../utils/timeout\");\n\nfunction createTaskDND(timeline, gantt){\n\tvar services = gantt.$services;\n\treturn {\n\t\tdrag: null,\n\t\tdragMultiple: {},\n\t\t_events: {\n\t\t\tbefore_start: {},\n\t\t\tbefore_finish: {},\n\t\t\tafter_finish: {}\n\t\t},\n\t\t_handlers: {},\n\t\tinit: function () {\n\t\t\tthis._domEvents = gantt._createDomEventScope();\n\t\t\tthis.clear_drag_state();\n\t\t\tvar drag = gantt.config.drag_mode;\n\t\t\tthis.set_actions();\n\n\t\t\tvar stateService = services.getService(\"state\");\n\t\t\tstateService.registerProvider(\"tasksDnd\", utils.bind(function(){\n\t\t\t\treturn {\n\t\t\t\t\tdrag_id : this.drag ? this.drag.id : undefined,\n\t\t\t\t\tdrag_mode : this.drag ? this.drag.mode : undefined,\n\t\t\t\t\tdrag_from_start : this.drag ? this.drag.left : undefined\n\t\t\t\t};\n\t\t\t}, this));\n\n\t\t\tvar evs = {\n\t\t\t\t\"before_start\": \"onBeforeTaskDrag\",\n\t\t\t\t\"before_finish\": \"onBeforeTaskChanged\",\n\t\t\t\t\"after_finish\": \"onAfterTaskDrag\"\n\t\t\t};\n\t\t\t//for now, all drag operations will trigger the same events\n\t\t\tfor (var stage in this._events) {\n\t\t\t\tfor (var mode in drag) {\n\t\t\t\t\tthis._events[stage][mode] = evs[stage];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handlers[drag.move] = this._move;\n\t\t\tthis._handlers[drag.resize] = this._resize;\n\t\t\tthis._handlers[drag.progress] = this._resize_progress;\n\t\t},\n\t\tset_actions: function () {\n\t\t\tvar data = timeline.$task_data;\n\t\t\tthis._domEvents.attach(data, \"mousemove\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_move(e || event);\n\t\t\t}, this));\n\t\t\tthis._domEvents.attach(data, \"mousedown\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_down(e || event);\n\t\t\t}, this));\n\t\t\tthis._domEvents.attach(data, \"mouseup\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_up(e || event);\n\t\t\t}, this));\n\t\t},\n\n\t\tclear_drag_state: function () {\n\t\t\tthis.drag = {\n\t\t\t\tid: null,\n\t\t\t\tmode: null,\n\t\t\t\tpos: null,\n\t\t\t\tstart_x: null,\n\t\t\t\tstart_y: null,\n\t\t\t\tobj: null,\n\t\t\t\tleft: null\n\t\t\t};\n\t\t\tthis.dragMultiple = {};\n\t\t},\n\t\t_resize: function (ev, shift, drag) {\n\t\t\tvar cfg = timeline.$getConfig();\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\tif (drag.left) {\n\t\t\t\tev.start_date = gantt.dateFromPos(coords_x.start + shift);\n\t\t\t\tif (!ev.start_date) {\n\t\t\t\t\tev.start_date = new Date(gantt.getState().min_date);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tev.end_date = gantt.dateFromPos(coords_x.end + shift);\n\t\t\t\tif (!ev.end_date) {\n\t\t\t\t\tev.end_date = new Date(gantt.getState().max_date);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (ev.end_date - ev.start_date < cfg.min_duration) {\n\t\t\t\tif (drag.left)\n\t\t\t\t\tev.start_date = gantt.calculateEndDate({start_date: ev.end_date, duration: -1, task: ev});\n\t\t\t\telse\n\t\t\t\t\tev.end_date = gantt.calculateEndDate({start_date: ev.start_date, duration: 1, task: ev});\n\t\t\t}\n\t\t\tgantt._init_task_timing(ev);\n\t\t},\n\t\t_resize_progress: function (ev, shift, drag) {\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar diffValue = !config.rtl ? (drag.pos.x - coords_x.start) : (coords_x.start - drag.pos.x);\n\n\t\t\tvar diff = Math.max(0, diffValue);\n\t\t\tev.progress = Math.min(1, diff / Math.abs(coords_x.end - coords_x.start));\n\t\t},\n\n\t\t_find_max_shift: function(dragItems, shift){\n\t\t\tvar correctShift;\n\t\t\tfor(var i in dragItems){\n\t\t\t\tvar drag = dragItems[i];\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\n\t\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\t\tvar minX = gantt.posFromDate( new Date(gantt.getState().min_date)),\n\t\t\t\t\tmaxX = gantt.posFromDate( new Date(gantt.getState().max_date));\n\n\t\t\t\tif(coords_x.end + shift > maxX){\n\t\t\t\t\tvar maxShift = maxX - coords_x.end;\n\t\t\t\t\tif(maxShift < correctShift || correctShift === undefined){\n\t\t\t\t\t\tcorrectShift = maxShift;\n\t\t\t\t\t}\n\t\t\t\t}else if(coords_x.start + shift < minX){\n\t\t\t\t\tvar minShift = minX - coords_x.start;\n\t\t\t\t\tif(minShift < correctShift || correctShift === undefined){\n\t\t\t\t\t\tcorrectShift = minShift;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn correctShift;\n\t\t},\n\t\t_move: function (ev, shift, drag) {\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\tvar new_start = gantt.dateFromPos(coords_x.start + shift),\n\t\t\t\tnew_end = gantt.dateFromPos(coords_x.end + shift);\n\t\t\tif (!new_start) {\n\t\t\t\tev.start_date = new Date(gantt.getState().min_date);\n\t\t\t\tev.end_date = gantt.dateFromPos(gantt.posFromDate(ev.start_date) + (coords_x.end - coords_x.start));\n\t\t\t} else if (!new_end) {\n\t\t\t\tev.end_date = new Date(gantt.getState().max_date);\n\t\t\t\tev.start_date = gantt.dateFromPos(gantt.posFromDate(ev.end_date) - (coords_x.end - coords_x.start));\n\t\t\t} else {\n\t\t\t\tev.start_date = new_start;\n\t\t\t\tev.end_date = new_end;\n\t\t\t}\n\t\t},\n\t\t_drag_task_coords: function (t, drag) {\n\t\t\tvar start = drag.obj_s_x = drag.obj_s_x || gantt.posFromDate(t.start_date);\n\t\t\tvar end = drag.obj_e_x = drag.obj_e_x || gantt.posFromDate(t.end_date);\n\t\t\treturn {\n\t\t\t\tstart: start,\n\t\t\t\tend: end\n\t\t\t};\n\t\t},\n\t\t_mouse_position_change: function (oldPos, newPos) {\n\t\t\tvar dx = oldPos.x - newPos.x,\n\t\t\t\tdy = oldPos.y - newPos.y;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t},\n\t\t_is_number: function (n) {\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\n\t\ton_mouse_move: function (e) {\n\t\t\tif (this.drag.start_drag) {\n\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\n\t\t\t\tvar sX = this.drag.start_drag.start_x,\n\t\t\t\t\tsY = this.drag.start_drag.start_y;\n\n\t\t\t\tif ((Date.now() - this.drag.timestamp > 50) ||\n\t\t\t\t\t(this._is_number(sX) && this._is_number(sY) && this._mouse_position_change({\n\t\t\t\t\t\tx: sX,\n\t\t\t\t\t\ty: sY\n\t\t\t\t\t}, pos) > 20)) {\n\t\t\t\t\tthis._start_dnd(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar drag = this.drag;\n\n\t\t\tif (drag.mode) {\n\t\t\t\tif (!timeout(this, 40))//limit update frequency\n\t\t\t\t\treturn;\n\n\t\t\t\tthis._update_on_move(e);\n\n\t\t\t}\n\t\t},\n\n\t\t_update_item_on_move: function(shift, id, mode, drag, e){\n\t\t\tvar ev = gantt.getTask(id);\n\t\t\tvar original = gantt.mixin({}, ev);\n\t\t\tvar copy = gantt.mixin({}, ev);\n\t\t\tthis._handlers[mode].apply(this, [copy, shift, drag]);\n\t\t\tgantt.mixin(ev, copy, true);\n\t\t\t//gantt._update_parents(drag.id, true);\n\t\t\tgantt.callEvent(\"onTaskDrag\", [ev.id, mode, copy, original, e]);\n\t\t\tgantt.mixin(ev, copy, true);\n\t\t\tgantt.refreshTask(id);\n\t\t},\n\n\t\t_update_on_move: function (e) {\n\t\t\tvar drag = this.drag;\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tif (drag.mode) {\n\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, timeline.$task_data);\n\t\t\t\tif (drag.pos && drag.pos.x == pos.x)\n\t\t\t\t\treturn;\n\n\t\t\t\tdrag.pos = pos;\n\n\t\t\t\tvar curr_date = gantt.dateFromPos(pos.x);\n\t\t\t\tif (!curr_date || isNaN(curr_date.getTime()))\n\t\t\t\t\treturn;\n\n\n\t\t\t\tvar shift = pos.x - drag.start_x;\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\n\t\t\t\tif (this._handlers[drag.mode]) {\n\n\t\t\t\t\tif(gantt.isSummaryTask(ev) && gantt.config.drag_project && drag.mode == config.drag_mode.move){\n\n\t\t\t\t\t\tvar initialDrag = {};\n\t\t\t\t\t\tinitialDrag[drag.id] = utils.copy(drag);\n\t\t\t\t\t\tvar maxShift = this._find_max_shift(utils.mixin(initialDrag, this.dragMultiple), shift);\n\t\t\t\t\t\tif(maxShift !== undefined){\n\t\t\t\t\t\t\tshift = maxShift;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._update_item_on_move(shift, drag.id, drag.mode, drag, e);\n\t\t\t\t\t\tfor(var i in this.dragMultiple){\n\t\t\t\t\t\t\tvar childDrag =  this.dragMultiple[i];\n\t\t\t\t\t\t\tthis._update_item_on_move(shift, childDrag.id, childDrag.mode, childDrag, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._update_item_on_move(shift, drag.id, drag.mode, drag, e);\n\t\t\t\t\t}\n\t\t\t\t\tgantt._update_parents(drag.id);\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\ton_mouse_down: function (e, src) {\n\t\t\t// on Mac we do not get onmouseup event when clicking right mouse button leaving us in dnd state\n\t\t\t// let's ignore right mouse button then\n\t\t\tif (e.button == 2 && e.button !== undefined)\n\t\t\t\treturn;\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar id = gantt.locate(e);\n\t\t\tvar task = null;\n\t\t\tif (gantt.isTaskExists(id)) {\n\t\t\t\ttask = gantt.getTask(id);\n\t\t\t}\n\n\t\t\tif (gantt.isReadonly(task) || this.drag.mode) return;\n\n\t\t\tthis.clear_drag_state();\n\n\t\t\tsrc = src || (e.target || e.srcElement);\n\n\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\tvar drag = this._get_drag_mode(className, src);\n\n\t\t\tif (!className || !drag) {\n\t\t\t\tif (src.parentNode)\n\t\t\t\t\treturn this.on_mouse_down(e, src.parentNode);\n\t\t\t\telse\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!drag) {\n\t\t\t\tif (gantt.checkEvent(\"onMouseDown\") && gantt.callEvent(\"onMouseDown\", [className.split(\" \")[0]])) {\n\t\t\t\t\tif (src.parentNode)\n\t\t\t\t\t\treturn this.on_mouse_down(e, src.parentNode);\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (drag.mode && drag.mode != config.drag_mode.ignore && config[\"drag_\" + drag.mode]) {\n\t\t\t\t\tid = gantt.locate(src);\n\t\t\t\t\ttask = gantt.copy(gantt.getTask(id) || {});\n\n\t\t\t\t\tif (gantt.isReadonly(task)) {\n\t\t\t\t\t\tthis.clear_drag_state();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((gantt.isSummaryTask(task) && !config.drag_project) && drag.mode != config.drag_mode.progress) {//only progress drag is allowed for tasks with flexible duration\n\t\t\t\t\t\tthis.clear_drag_state();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdrag.id = id;\n\t\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\n\t\t\t\t\tdrag.start_x = pos.x;\n\t\t\t\t\tdrag.start_y = pos.y;\n\t\t\t\t\tdrag.obj = task;\n\t\t\t\t\tthis.drag.start_drag = drag;\n\t\t\t\t\tthis.drag.timestamp = Date.now();\n\n\t\t\t\t} else\n\t\t\t\t\tthis.clear_drag_state();\n\t\t\t}\n\t\t},\n\t\t_fix_dnd_scale_time: function (task, drag) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar unit = gantt.getScale().unit,\n\t\t\t\tstep = gantt.getScale().step;\n\t\t\tif (!config.round_dnd_dates) {\n\t\t\t\tunit = 'minute';\n\t\t\t\tstep = config.time_step;\n\t\t\t}\n\n\t\t\tfunction fixStart(task) {\n\t\t\t\tif (!gantt.config.correct_work_time)\n\t\t\t\t\treturn;\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\tif (!gantt.isWorkTime(task.start_date, undefined, task))\n\t\t\t\t\ttask.start_date = gantt.calculateEndDate({\n\t\t\t\t\t\tstart_date: task.start_date,\n\t\t\t\t\t\tduration: -1,\n\t\t\t\t\t\tunit: config.duration_unit,\n\t\t\t\t\t\ttask: task\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction fixEnd(task) {\n\t\t\t\tif (!gantt.config.correct_work_time)\n\t\t\t\t\treturn;\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\tif (!gantt.isWorkTime(new Date(task.end_date - 1), undefined, task))\n\t\t\t\t\ttask.end_date = gantt.calculateEndDate({\n\t\t\t\t\t\tstart_date: task.end_date,\n\t\t\t\t\t\tduration: 1,\n\t\t\t\t\t\tunit: config.duration_unit,\n\t\t\t\t\t\ttask: task\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (drag.mode == config.drag_mode.resize) {\n\t\t\t\tif (drag.left) {\n\t\t\t\t\ttask.start_date = gantt.roundDate({date: task.start_date, unit: unit, step: step});\n\t\t\t\t\tfixStart(task);\n\t\t\t\t} else {\n\t\t\t\t\ttask.end_date = gantt.roundDate({date: task.end_date, unit: unit, step: step});\n\t\t\t\t\tfixEnd(task);\n\t\t\t\t}\n\t\t\t} else if (drag.mode == config.drag_mode.move) {\n\t\t\t\ttask.start_date = gantt.roundDate({date: task.start_date, unit: unit, step: step});\n\t\t\t\tfixStart(task);\n\t\t\t\ttask.end_date = gantt.calculateEndDate(task);\t\t\t\t\n\t\t\t}\n\t\t},\n\t\t_fix_working_times: function (task, drag) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar drag = drag || {mode: config.drag_mode.move};\n\t\t\t\n\t\t\tif (drag.mode == config.drag_mode.resize) {\n\t\t\t\tif (drag.left) {\n\t\t\t\t\ttask.start_date = gantt.getClosestWorkTime({date: task.start_date, dir: 'future', task: task});\n\t\t\t\t} else {\n\t\t\t\t\ttask.end_date = gantt.getClosestWorkTime({date: task.end_date, dir: 'past', task: task});\n\t\t\t\t}\n\t\t\t} else if (drag.mode == config.drag_mode.move) {\n\t\t\t\tgantt.correctTaskWorkTime(task);\n\t\t\t}\n\t\t},\n\n\t\t_finalize_mouse_up: function(taskId, config, drag, e){\n\t\t\tvar ev = gantt.getTask(taskId);\n\n\t\t\tif (config.work_time && config.correct_work_time) {\n\t\t\t\tthis._fix_working_times(ev, drag);\n\t\t\t}\n\n\t\t\tthis._fix_dnd_scale_time(ev, drag);\n\n\t\t\tif (!this._fireEvent(\"before_finish\", drag.mode, [taskId, drag.mode, gantt.copy(drag.obj), e])) {\n\t\t\t\t//drag.obj._dhx_changed = false;\n\t\t\t\tthis.clear_drag_state();\n\t\t\t\tif(taskId == drag.id){\n\t\t\t\t\tdrag.obj._dhx_changed = false;\n\t\t\t\t\tgantt.mixin(ev, drag.obj, true);\n\t\t\t\t}\n\n\n\t\t\t\tgantt.refreshTask(ev.id);\n\t\t\t} else {\n\t\t\t\tvar drag_id = taskId;\n\n\t\t\t\tgantt._init_task_timing(ev);\n\n\t\t\t\tthis.clear_drag_state();\n\t\t\t\tgantt.updateTask(ev.id);\n\t\t\t\tthis._fireEvent(\"after_finish\", drag.mode, [drag_id, drag.mode, e]);\n\t\t\t}\n\n\t\t},\n\n\t\ton_mouse_up: function (e) {\n\n\t\t\tvar drag = this.drag;\n\t\t\tif (drag.mode && drag.id) {\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\t//drop\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\t\t\t\tvar dragMultiple = this.dragMultiple;\n\n\t\t\t\tif(gantt.isSummaryTask(ev) && config.drag_project && drag.mode == config.drag_mode.move){\n\t\t\t\t\tfor(var i in dragMultiple){\n\t\t\t\t\t\tthis._finalize_mouse_up(dragMultiple[i].id, config, dragMultiple[i], e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._finalize_mouse_up(drag.id, config, drag, e);\n\t\t\t}\n\t\t\tthis.clear_drag_state();\n\t\t},\n\t\t_get_drag_mode: function (className, el) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar modes = config.drag_mode;\n\t\t\tvar classes = (className || \"\").split(\" \");\n\t\t\tvar classname = classes[0];\n\t\t\tvar drag = {mode: null, left: null};\n\t\t\tswitch (classname) {\n\t\t\t\tcase \"gantt_task_line\":\n\t\t\t\tcase \"gantt_task_content\":\n\t\t\t\t\tdrag.mode = modes.move;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_task_drag\":\n\t\t\t\t\tdrag.mode = modes.resize;\n\n\t\t\t\t\tvar dragProperty = el.getAttribute(\"data-bind-property\");\n\n\t\t\t\t\tif (dragProperty == \"start_date\") {\n\t\t\t\t\t\tdrag.left = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdrag.left = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_task_progress_drag\":\n\t\t\t\t\tdrag.mode = modes.progress;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_link_control\":\n\t\t\t\tcase \"gantt_link_point\":\n\t\t\t\t\tdrag.mode = modes.ignore;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tdrag = null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn drag;\n\n\t\t},\n\n\t\t_start_dnd: function (e) {\n\t\t\tvar drag = this.drag = this.drag.start_drag;\n\t\t\tdelete drag.start_drag;\n\n\t\t\tvar cfg = timeline.$getConfig();\n\t\t\tvar id = drag.id;\n\t\t\tif (!cfg[\"drag_\" + drag.mode] || !gantt.callEvent(\"onBeforeDrag\", [id, drag.mode, e]) || !this._fireEvent(\"before_start\", drag.mode, [id, drag.mode, e])) {\n\t\t\t\tthis.clear_drag_state();\n\t\t\t} else {\n\t\t\t\tdelete drag.start_drag;\n\n\t\t\t\tvar task = gantt.getTask(id);\n\t\t\t\tif(gantt.isSummaryTask(task) && gantt.config.drag_project && drag.mode == cfg.drag_mode.move){\n\t\t\t\t\tgantt.eachTask(function(child){\n\t\t\t\t\t\tthis.dragMultiple[child.id] = gantt.mixin({\n\t\t\t\t\t\t\tid: child.id,\n\t\t\t\t\t\t\tobj: child\n\t\t\t\t\t\t}, this.drag);\n\t\t\t\t\t}, task.id, this);\n\t\t\t\t}\n\n\t\t\t\tgantt.callEvent(\"onTaskDragStart\", []);\n\t\t\t}\n\n\t\t},\n\t\t_fireEvent: function (stage, mode, params) {\n\t\t\tgantt.assert(this._events[stage], \"Invalid stage:{\" + stage + \"}\");\n\n\t\t\tvar trigger = this._events[stage][mode];\n\n\t\t\tgantt.assert(trigger, \"Unknown after drop mode:{\" + mode + \"}\");\n\t\t\tgantt.assert(params, \"Invalid event arguments\");\n\n\n\t\t\tif (!gantt.checkEvent(trigger))\n\t\t\t\treturn true;\n\n\t\t\treturn gantt.callEvent(trigger, params);\n\t\t},\n\n\t\tround_task_dates: function(task){\n\t\t\tvar drag_state = this.drag;\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tif (!drag_state) {\n\t\t\t\tdrag_state = {mode: config.drag_mode.move};\n\t\t\t}\n\t\t\tthis._fix_dnd_scale_time(task, drag_state);\n\t\t},\n\t\tdestructor: function(){\n\t\t\tthis._domEvents.detachAll();\n\t\t}\n\t};\n}\n\nfunction initTaskDND() {\n\tvar _tasks_dnd;\n\treturn {\n\t\textend: function(timeline){\n\t\t\ttimeline.roundTaskDates = function (task) {\n\t\t\t\t_tasks_dnd.round_task_dates(task);\n\t\t\t};\n\n\t\t},\n\t\tinit: function(timeline, gantt){\n\t\t\t_tasks_dnd = createTaskDND(timeline, gantt);\n\t\t\t// TODO: entry point for touch handlers, move touch to timeline\n\t\t\ttimeline._tasks_dnd = _tasks_dnd;\n\t\t\treturn _tasks_dnd.init(gantt);\n\t\t},\n\t\tdestructor: function(){\n\t\t\t_tasks_dnd.destructor();\n\t\t\t_tasks_dnd = null;\n\t\t}\n\t};\n}\n\nmodule.exports = {\n\tcreateTaskDND: initTaskDND\n};\n", "var utils = require(\"../../../utils/utils\"),\n\ttaskDnD = require(\"./tasks_dnd\"),\n\tlinkDnD = require(\"./links_dnd\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar initializer = (function(){\n\treturn function(gantt){\n\t\tvar services = gantt.$services;\n\t\treturn {\n\t\t\tonCreated: function (timeline) {\n\t\t\t\tvar config = timeline.$config;\n\t\t\t\tconfig.bind = utils.defined(config.bind) ? config.bind : \"task\";\n\t\t\t\tconfig.bindLinks = utils.defined(config.bindLinks) ? config.bindLinks : \"link\";\n\n\t\t\t\ttimeline._linksDnD = linkDnD.createLinkDND();\n\t\t\t\ttimeline._tasksDnD = taskDnD.createTaskDND();\n\t\t\t\ttimeline._tasksDnD.extend(timeline);\n\n\t\t\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\t\t\t},\n\t\t\tonInitialized: function (timeline) {\n\t\t\t\tthis._attachDomEvents(gantt);\n\n\t\t\t\tthis._attachStateProvider(gantt, timeline);\n\n\t\t\t\ttimeline._tasksDnD.init(timeline, gantt);\n\t\t\t\ttimeline._linksDnD.init(timeline, gantt);\n\n\t\t\t\tif(timeline.$config.id == \"timeline\"){\n\t\t\t\t\tthis.extendDom(timeline);\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tonDestroyed: function (timeline) {\n\t\t\t\tthis._clearDomEvents(gantt);\n\t\t\t\tthis._clearStateProvider(gantt);\n\t\t\t},\n\t\t\textendDom: function(timeline){\n\t\t\t\tgantt.$task = timeline.$task;\n\t\t\t\tgantt.$task_scale = timeline.$task_scale;\n\t\t\t\tgantt.$task_data = timeline.$task_data;\n\t\t\t\tgantt.$task_bg = timeline.$task_bg;\n\t\t\t\tgantt.$task_links = timeline.$task_links;\n\t\t\t\tgantt.$task_bars = timeline.$task_bars;\n\t\t\t},\n\n\t\t\t_clearDomEvents: function(){\n\t\t\t\tthis._mouseDelegates.destructor();\n\t\t\t\tthis._mouseDelegates = null;\n\t\t\t},\n\n\t\t\t_attachDomEvents: function(gantt){\n\t\t\t\tfunction _delete_link_handler(id, e) {\n\t\t\t\t\tif (id && this.callEvent(\"onLinkDblClick\", [id, e])) {\n\n\t\t\t\t\t\tvar link = this.getLink(id);\n\t\t\t\t\t\tif (this.isReadonly(link)) return;\n\n\t\t\t\t\t\tvar title = \"\";\n\t\t\t\t\t\tvar question = this.locale.labels.link + \" \" + this.templates.link_description(this.getLink(id)) + \" \" + this.locale.labels.confirm_link_deleting;\n\n\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\tgantt._dhtmlx_confirm(question, title, function () {\n\t\t\t\t\t\t\t\tgantt.deleteLink(id);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, (this.config.touch ? 300 : 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_task_link\", gantt.bind(function (e, trg) {\n\t\t\t\t\tvar id = this.locate(e, this.config.link_attribute);\n\t\t\t\t\tif (id) {\n\t\t\t\t\t\tthis.callEvent(\"onLinkClick\", [id, e]);\n\t\t\t\t\t}\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_scale_cell\", gantt.bind(function (e, trg) {\n\t\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\t\t\t\t\tvar date = gantt.dateFromPos(pos.x);\n\t\t\t\t\tvar coll = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\t\t\tvar coll_date = gantt.getScale().trace_x[coll];\n\n\t\t\t\t\tgantt.callEvent(\"onScaleClick\", [e, coll_date]);\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"doubleclick\", \"gantt_task_link\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar id = this.locate(e, gantt.config.link_attribute);\n\t\t\t\t\t_delete_link_handler.call(this, id, e);\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"doubleclick\", \"gantt_link_point\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar id = this.locate(e),\n\t\t\t\t\t\ttask = this.getTask(id);\n\n\t\t\t\t\tvar link = null;\n\t\t\t\t\tif (trg.parentNode && domHelpers.getClassName(trg.parentNode)) {\n\t\t\t\t\t\tif (domHelpers.getClassName(trg.parentNode).indexOf(\"_left\") > -1) {\n\t\t\t\t\t\t\tlink = task.$target[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlink = task.$source[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (link)\n\t\t\t\t\t\t_delete_link_handler.call(this, link, e);\n\t\t\t\t\treturn false;\n\t\t\t\t}, gantt), this.$task);\n\t\t\t},\n\n\t\t\t_attachStateProvider: function(gantt, timeline){\n\t\t\t\tvar self = timeline;\n\t\t\t\tvar state = services.getService(\"state\");\n\t\t\t\tstate.registerProvider(\"tasksTimeline\", function(){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tscale_unit: self._tasks ? self._tasks.unit : undefined,\n\t\t\t\t\t\tscale_step:  self._tasks ? self._tasks.step  : undefined\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_clearStateProvider: function(){\n\t\t\t\tvar state = services.getService(\"state\");\n\t\t\t\tstate.unregisterProvider(\"tasksTimeline\");\n\t\t\t}\n\t\t};\n\t};\n\n})();\n\nmodule.exports = initializer;", "var domHelpers = require(\"../../../../utils/dom_helpers\");\n\n/**\n * methods for highlighting current drag and drop position\n */\n\nfunction highlightPosition(target, root, grid){\n\tvar markerPos = getTaskMarkerPosition(target, grid);\n\t// setting position of row\n\troot.marker.style.left = 10 + \"px\";\n\troot.marker.style.top = markerPos.y + \"px\";\n\tvar markerLine = root.markerLine;\n\tif(!markerLine){\n\t\tmarkerLine = document.createElement(\"div\");\n\t\tmarkerLine.className = \"gantt_drag_marker gantt_grid_dnd_marker\";\n\t\tmarkerLine.innerHTML = \"<div class='gantt_grid_dnd_marker_line'></div>\";\n\t\tmarkerLine.style.pointerEvents = \"none\";\n\t\tdocument.body.appendChild(markerLine);\n\t\troot.markerLine = markerLine;\n\t}\n\tif(target.child){\n\t\thighlightFolder(target, markerLine, grid);\n\t}else{\n\t\thighlightRow(target, markerLine, grid);\n\t}\n}\n\nfunction removeLineHighlight(root){\n\tif(root.markerLine && root.markerLine.parentNode){\n\t\troot.markerLine.parentNode.removeChild(root.markerLine);\n\t}\n\troot.markerLine = null;\n}\n\nfunction highlightRow(target, markerLine, grid){\n\tvar linePos = getLineMarkerPosition(target, grid);\n\n\tmarkerLine.innerHTML = \"<div class='gantt_grid_dnd_marker_line'></div>\";\n\tmarkerLine.style.left = linePos.x + \"px\";\n\tmarkerLine.style.height = \"4px\";\n\n\tmarkerLine.style.top = (linePos.y - 2) + \"px\";\n\tmarkerLine.style.width = linePos.width + \"px\";\n\n\treturn markerLine;\n}\nfunction highlightFolder(target, markerFolder, grid){\n\tvar id = target.targetParent;\n\tvar pos = gridToPageCoordinates({x: 0, y: grid.getItemTop(id)}, grid);\n\n\tmarkerFolder.innerHTML = \"<div class='gantt_grid_dnd_marker_folder'></div>\";\n\tmarkerFolder.style.width = grid.$grid_data.offsetWidth + \"px\";\n\tmarkerFolder.style.top = pos.y + \"px\";\n\tmarkerFolder.style.left = pos.x  + \"px\";\n\tmarkerFolder.style.height = grid.getItemHeight(id) + \"px\";\n\treturn markerFolder;\n}\n\nfunction getLineMarkerPosition(target, grid){\n\tvar store = grid.$config.rowStore;\n\tvar pos = {x:0, y:0};\n\tvar indentNode = grid.$grid_data.querySelector(\".gantt_tree_indent\");\n\tvar indent = 15;\n\tvar level = 0;\n\tif(indentNode){\n\t\tindent = indentNode.offsetWidth;\n\t}\n\tvar iconWidth = 40;\n\tif(target.targetId !== store.$getRootId()){\n\t\tvar itemTop = grid.getItemTop(target.targetId);\n\t\tvar itemHeight = grid.getItemHeight(target.targetId);\n\t\tlevel = store.exists(target.targetId) ? store.calculateItemLevel(store.getItem(target.targetId)) : 0;\n\n\t\tif(target.prevSibling){\n\t\t\tpos.y = itemTop;\n\t\t}else if(target.nextSibling){\n\t\t\tvar childCount = 0;\n\t\t\tstore.eachItem(function(child){\n\t\t\t\tif(store.getIndexById(child.id) !== -1)\n\t\t\t\t\tchildCount++;\n\t\t\t}, target.targetId);\n\n\t\t\tpos.y = itemTop + itemHeight + childCount*itemHeight;\n\t\t}else {\n\t\t\tpos.y = itemTop + itemHeight;\n\t\t\tlevel += 1;\n\t\t}\n\t}\n\tpos.x = iconWidth + level * indent;\n\tpos.width = Math.max(grid.$grid_data.offsetWidth - pos.x, 0);\n\treturn gridToPageCoordinates(pos, grid);\n}\n\nfunction gridToPageCoordinates(pos, grid){\n\tvar gridPos = domHelpers.getNodePosition(grid.$grid_data);\n\tpos.x += gridPos.x - grid.$grid.scrollLeft;\n\tpos.y += gridPos.y - grid.$grid_data.scrollTop;\n\treturn pos;\n}\n\nfunction getTaskMarkerPosition(e, grid) {\n\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\tvar ePos = domHelpers.getRelativeEventPosition(e, grid.$grid_data);\n\tvar store = grid.$config.rowStore;\n\t// row offset\n\tvar x = pos.x;\n\tvar y = ePos.y - 10;\n\n\tvar config = grid.$getConfig();\n\t// prevent moving row out of grid_data container\n\tif (y < pos.y) y = pos.y;\n\tvar gridHeight = store.countVisible() * config.row_height;\n\tif (y > pos.y + gridHeight - config.row_height) y = pos.y + gridHeight - config.row_height;\n\n\tpos.x = x;\n\tpos.y = y;\n\treturn pos;\n}\n\nmodule.exports = {\n\tremoveLineHighlight: removeLineHighlight,\n\thighlightPosition: highlightPosition\n};\n", "/**\n * resolve dnd position of the task when gantt.config.order_branch_free = true\n */\n\nvar dropTarget = require(\"./drop_target\");\n\nmodule.exports = function getMultiLevelDropPosition(targetTaskId, relTargetPos, eventTop, store){\n\tvar result;\n\n\tif(targetTaskId !== store.$getRootId()){\n\t\tif(relTargetPos < 0.25){\n\t\t\tresult = dropTarget.prevSiblingTarget(targetTaskId, store);\n\t\t}else if(relTargetPos > 0.60 && !(store.hasChild(targetTaskId) && store.getItem(targetTaskId).$open)){\n\t\t\tresult = dropTarget.nextSiblingTarget(targetTaskId, store);\n\t\t}else {\n\t\t\tresult = dropTarget.firstChildTarget(targetTaskId, store);\n\t\t}\n\t}else{\n\t\tvar rootId = store.$getRootId();\n\t\tif(store.hasChild(rootId) && eventTop >= 0){\n\t\t\tresult = dropTarget.lastChildTarget(rootId, store);\n\t\t}else{\n\t\t\tresult = dropTarget.firstChildTarget(rootId, store);\n\t\t}\n\t}\n\n\treturn result;\n};", "/**\n * resolve dnd position of the task when gantt.config.order_branch_free = false\n */\n\nvar dropTarget = require(\"./drop_target\");\n\nfunction getLast(store){\n\tvar current = store.getNext();\n\twhile(store.exists(current)){\n\n\t\tvar next = store.getNext(current);\n\t\tif(!store.exists(next)){\n\t\t\treturn current;\n\t\t}else{\n\t\t\tcurrent = next;\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction findClosesTarget(taskId, allowedLevel, store, up){\n\tvar prev = taskId;\n\twhile(store.exists(prev)){\n\t\tvar targetLevel = store.calculateItemLevel(store.getItem(prev));\n\t\tif((targetLevel === allowedLevel || targetLevel === (allowedLevel - 1)) && store.getBranchIndex(prev) > -1){\n\t\t\tbreak;\n\t\t}else {\n\t\t\tprev = up ? store.getPrev(prev) : store.getNext(prev);\n\t\t}\n\t}\n\n\tif(store.exists(prev)){\n\t\tif(store.calculateItemLevel(store.getItem(prev)) === allowedLevel){\n\t\t\treturn up ? dropTarget.nextSiblingTarget(prev, store) : dropTarget.prevSiblingTarget(prev, store);\n\t\t}else{\n\t\t\treturn dropTarget.firstChildTarget(prev, store);\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction findTargetAbove(taskId, allowedLevel, store){\n\treturn findClosesTarget(taskId, allowedLevel, store, true);\n}\nfunction findTargetBelow(taskId, allowedLevel, store){\n\treturn findClosesTarget(taskId, allowedLevel, store, false);\n}\n\nmodule.exports = function getSameLevelDropPosition(targetTaskId, relTargetPos, eventTop, store, level){\n\tvar result;\n\tif(targetTaskId !== store.$getRootId()) {\n\t\tif (relTargetPos < 0.5) {\n\t\t\tif (store.calculateItemLevel(store.getItem(targetTaskId)) === level) {\n\t\t\t\tresult = dropTarget.prevSiblingTarget(targetTaskId, store);\n\t\t\t} else {\n\t\t\t\tresult = findTargetAbove(targetTaskId, level, store);\n\t\t\t\tif (result) {\n\t\t\t\t\tresult = findTargetBelow(targetTaskId, level, store);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (store.calculateItemLevel(store.getItem(targetTaskId)) === level) {\n\t\t\t\tresult = dropTarget.nextSiblingTarget(targetTaskId, store);\n\t\t\t} else {\n\t\t\t\tresult = findTargetBelow(targetTaskId, level, store);\n\t\t\t\tif (result) {\n\t\t\t\t\tresult = findTargetAbove(targetTaskId, level, store);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tvar rootId = store.$getRootId();\n\t\tvar rootLevel = store.getChildren(rootId);\n\t\tresult = dropTarget.createDropTargetObject();\n\t\tif(rootLevel.length && eventTop >= 0){\n\t\t\tresult = findTargetAbove(getLast(store), level, store);\n\t\t}else{\n\t\t\tresult = findTargetBelow(rootId, level, store);\n\t\t}\n\t}\n\n\treturn result;\n};\n", "var domHelpers = require(\"../../../utils/dom_helpers\");\nvar dropTarget = require(\"./tasks_grid_dnd_marker_helpers/drop_target\");\nvar getLockedLevelTarget = require(\"./tasks_grid_dnd_marker_helpers/locked_level\");\nvar getMultiLevelTarget = require(\"./tasks_grid_dnd_marker_helpers/multi_level\");\nvar higlighter = require(\"./tasks_grid_dnd_marker_helpers/highlight\");\n\nfunction _init_dnd(gantt, grid) {\n\tvar DnD = gantt.$services.getService(\"dnd\");\n\n\tif(!grid.$config.bind || !gantt.getDatastore(grid.$config.bind)){\n\t\treturn;\n\t}\n\n\tfunction locate(e){\n\t\treturn domHelpers.locateAttribute(e, grid.$config.item_attribute);\n\t}\n\n\tvar dnd = new DnD(grid.$grid_data, {updates_per_second: 60});\n\tif (gantt.defined(grid.$getConfig().dnd_sensitivity))\n\t\tdnd.config.sensitivity = grid.$getConfig().dnd_sensitivity;\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tif (!el) return false;\n\t\tif (gantt.hideQuickInfo) gantt._hideQuickInfo();\n\n\t\tvar id = el.getAttribute(grid.$config.item_attribute);\n\t\tvar datastore = grid.$config.rowStore;\n\t\tvar task = datastore.getItem(id);\n\n\t\tif (gantt.isReadonly(task))\n\t\t\treturn false;\n\n\t\tdnd.config.initial_open_state = task.$open;\n\t\tif (!gantt.callEvent(\"onRowDragStart\", [id, e.target || e.srcElement, e])) {\n\t\t\treturn false;\n\t\t}\n\n\t}, gantt));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\n\t\tdnd.config.marker.innerHTML = el.outerHTML;\n\t\tvar element = dnd.config.marker.firstChild;\n\t\tif(element){\n\t\t\tdnd.config.marker.style.opacity = 0.4;\n\t\t\telement.style.position = \"static\";\n\t\t\telement.style.pointerEvents = \"none\";\n\t\t}\n\t\t\n\t\tdnd.config.id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar store = grid.$config.rowStore;\n\n\t\tvar task = store.getItem(dnd.config.id);\n\t\tdnd.config.level = store.calculateItemLevel(task);\n\t\tdnd.config.drop_target = dropTarget.createDropTargetObject({\n\t\t\ttargetParent: store.getParent(task.id),\n\t\t\ttargetIndex: store.getBranchIndex(task.id),\n\t\t\ttargetId: task.id,\n\t\t\tnextSibling: true\n\t\t});\n\n\t\ttask.$open = false;\n\t\ttask.$transparent = true;\n\t\tthis.refreshData();\n\t}, gantt));\n\n\tfunction getTargetTaskId(e){\n\t\tvar y = domHelpers.getRelativeEventPosition(e, grid.$grid_data).y;\n\t\tvar store = grid.$config.rowStore;\n\n\t\ty = y || 0;\n\n\t\tif(y < 0){\n\t\t\treturn store.$getRootId();\n\t\t}\n\n\t\tvar index = Math.floor(y / grid.getItemHeight());\n\n\t\tif (index > store.countVisible() - 1)\n\t\t\treturn store.$getRootId();\n\n\t\treturn store.getIdByIndex(index);\n\t}\n\n\tfunction getDropPosition(e){\n\t\tvar targetTaskId = getTargetTaskId(e);\n\t\tvar relTargetPos = null;\n\t\tvar store = grid.$config.rowStore;\n\t\tvar config = grid.$getConfig();\n\t\tvar lockLevel = !config.order_branch_free;\n\n\t\tvar eventTop = domHelpers.getRelativeEventPosition(e, grid.$grid_data).y;\n\n\t\tif(targetTaskId !== store.$getRootId()) {\n\t\t\tvar rowTop = grid.getItemTop(targetTaskId);\n\t\t\tvar rowHeight = grid.getItemHeight();\n\t\t\trelTargetPos = (eventTop - rowTop) / rowHeight;\n\t\t}\n\n\t\tvar result;\n\t\tif(!lockLevel){\n\t\t\tresult = getMultiLevelTarget(targetTaskId, relTargetPos, eventTop, store);\n\t\t}else{\n\t\t\tresult = getLockedLevelTarget(targetTaskId, relTargetPos, eventTop, store, dnd.config.level);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function (obj, e) {\n\t\tvar target = getDropPosition(e);\n\n\t\tif(!target || \n\t\t\tgantt.callEvent(\"onBeforeRowDragMove\", [dnd.config.id, target.targetParent, target.targetIndex]) === false){\n\t\t\t\ttarget = dropTarget.createDropTargetObject(dnd.config.drop_target);\n\t\t\t}\n\t\t\n\t\thiglighter.highlightPosition(target, dnd.config, grid);\n\t\tdnd.config.drop_target = target;\n\n\t\tthis.callEvent(\"onRowDragMove\", [dnd.config.id, target.targetParent, target.targetIndex]);\n\t\treturn true;\n\t}, gantt));\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function () {\n\t\tvar store = grid.$config.rowStore;\n\t\tvar task = store.getItem(dnd.config.id);\n\n\t\thiglighter.removeLineHighlight(dnd.config);\n\n\t\ttask.$transparent = false;\n\t\ttask.$open = dnd.config.initial_open_state;\n\t\tvar target = dnd.config.drop_target;\n\n\t\tif (this.callEvent(\"onBeforeRowDragEnd\", [dnd.config.id, target.targetParent, target.targetIndex]) === false) {\n\t\t\ttask.$drop_target = null;\n\t\t} else {\n\t\t\tstore.move(dnd.config.id, target.targetIndex, target.targetParent);\n\t\t\tthis.callEvent(\"onRowDragEnd\", [dnd.config.id, target.targetParent, target.targetIndex]);\n\t\t}\n\t\tstore.refresh(task.id);\n\t}, gantt));\n}\n\nmodule.exports = {\n\tinit: _init_dnd\n};", "var domHelpers = require(\"../../../utils/dom_helpers\");\n\nfunction _init_dnd(gantt, grid) {\n\tvar DnD = gantt.$services.getService(\"dnd\");\n\n\tif(!grid.$config.bind || !gantt.getDatastore(grid.$config.bind)){\n\t\treturn;\n\t}\n\n\tfunction locate(e){\n\t\treturn domHelpers.locateAttribute(e, grid.$config.item_attribute);\n\t}\n\n\tfunction getStore(){\n\t\treturn gantt.getDatastore(grid.$config.bind);\n\t}\n\n\tvar dnd = new DnD(grid.$grid_data, {updates_per_second: 60});\n\tif (gantt.defined(grid.$getConfig().dnd_sensitivity))\n\t\tdnd.config.sensitivity = grid.$getConfig().dnd_sensitivity;\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tif (!el) return false;\n\t\tif (gantt.hideQuickInfo) gantt._hideQuickInfo();\n\n\t\tvar id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar datastore = getStore();\n\n\t\tvar task = datastore.getItem(id);\n\n\t\tif (gantt.isReadonly(task))\n\t\t\treturn false;\n\n\t\tdnd.config.initial_open_state = task.$open;\n\t\tif (!gantt.callEvent(\"onRowDragStart\", [id, e.target || e.srcElement, e])) {\n\t\t\treturn false;\n\t\t}\n\n\t}, gantt));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tdnd.config.marker.innerHTML = el.outerHTML;\n\t\tvar element = dnd.config.marker.firstChild;\n\t\tif(element){\n\t\t\telement.style.position = \"static\";\n\t\t}\n\n\t\tdnd.config.id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar store = getStore();\n\n\t\tvar task = store.getItem(dnd.config.id);\n\t\tdnd.config.index = store.getBranchIndex(dnd.config.id);\n\t\tdnd.config.parent = task.parent;\n\t\ttask.$open = false;\n\t\ttask.$transparent = true;\n\t\tthis.refreshData();\n\t}, gantt));\n\n\tdnd.lastTaskOfLevel = function (level) {\n\t\tvar last_item = null;\n\t\tvar store = getStore();\n\t\tvar tasks = store.getItems();\n\t\tfor (var i = 0, len = tasks.length; i < len; i++) {\n\t\t\tif (tasks[i].$level == level) {\n\t\t\t\tlast_item = tasks[i];\n\t\t\t}\n\t\t}\n\t\treturn last_item ? last_item.id : null;\n\t};\n\tdnd._getGridPos = gantt.bind(function (e) {\n\t\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\t\tvar store = getStore();\n\t\t// row offset\n\t\tvar x = pos.x;\n\t\tvar y = e.pos.y - 10;\n\n\t\tvar config = grid.$getConfig();\n\t\t// prevent moving row out of grid_data container\n\t\tif (y < pos.y) y = pos.y;\n\t\tvar gridHeight = store.countVisible() * config.row_height;\n\t\tif (y > pos.y + gridHeight - config.row_height) y = pos.y + gridHeight - config.row_height;\n\n\t\tpos.x = x;\n\t\tpos.y = y;\n\t\treturn pos;\n\t}, gantt);\n\tdnd._getTargetY = gantt.bind(function (e) {\n\t\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\n\t\tvar y = e.pageY - pos.y + (grid.$state.scrollTop || 0);\n\t\tif (y < 0)\n\t\t\ty = 0;\n\t\treturn y;\n\t}, gantt);\n\tdnd._getTaskByY = gantt.bind(function (y, dropIndex) {\n\n\t\tvar config = grid.$getConfig(),\n\t\t\tstore = getStore();\n\n\t\ty = y || 0;\n\n\t\tvar index = Math.floor(y / config.row_height);\n\t\tindex = dropIndex < index ? index - 1 : index;\n\n\t\tif (index > store.countVisible() - 1)\n\t\t\treturn null;\n\n\t\treturn store.getIdByIndex(index);\n\t}, gantt);\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function (obj, e) {\n\t\tvar dd = dnd.config;\n\t\tvar pos = dnd._getGridPos(e);\n\n\t\tvar config = grid.$getConfig(),\n\t\t\tstore = getStore();\n\n\t\t// setting position of row\n\t\tdd.marker.style.left = pos.x + 10 + \"px\";\n\t\tdd.marker.style.top = pos.y + \"px\";\n\n\t\t// highlight row when mouseover\n\t\tvar item = store.getItem(dnd.config.id);\n\t\tvar targetY = dnd._getTargetY(e);\n\t\tvar el = dnd._getTaskByY(targetY, store.getIndexById(item.id));\n\n\t\tif (!store.exists(el)) {\n\t\t\tel = dnd.lastTaskOfLevel(config.order_branch_free ? item.$level : 0);\n\t\t\tif (el == dnd.config.id) {\n\t\t\t\tel = null;\n\t\t\t}\n\t\t}\n\n\t\tfunction allowedLevel(next, item) {\n\t\t\treturn (!(store.isChildOf(over.id, item.id)) && (next.$level == item.$level || config.order_branch_free));\n\t\t}\n\n\t\tif (store.exists(el)) {\n\t\t\tvar over = store.getItem(el);\n\n\t\t\tif (store.getIndexById(over.id) * config.row_height + config.row_height / 2 < targetY) {\n\t\t\t\t//hovering over bottom part of item, check can be drop to bottom\n\t\t\t\tvar index = store.getIndexById(over.id);\n\t\t\t\tvar nextId = store.getNext(over.id);//adds +1 when hovering over placeholder\n\t\t\t\tvar next = store.getItem(nextId);\n\t\t\t\tif (next) {\n\t\t\t\t\tif (next.id != item.id) {\n\t\t\t\t\t\tover = next; //there is a valid target\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (config.order_branch_free) {\n\t\t\t\t\t\t\tif (!(store.isChildOf(item.id, over.id) && store.getChildren(over.id).length == 1))\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tstore.move(item.id, store.getBranchIndex(over.id) + 1, store.getParent(over.id));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//we at end of the list, check and drop at the end of list\n\t\t\t\t\tnextId = store.getIdByIndex(index);\n\t\t\t\t\tnext = store.getItem(nextId);\n\n\t\t\t\t\tif (allowedLevel(next, item) && next.id != item.id) {\n\t\t\t\t\t\tstore.move(item.id, -1, store.getParent(next.id));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (config.order_branch_free) {\n\t\t\t\tif (over.id != item.id && allowedLevel(over, item)) {\n\t\t\t\t\tif (!store.hasChild(over.id)) {\n\t\t\t\t\t\tover.$open = true;\n\t\t\t\t\t\tstore.move(item.id, -1, over.id);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (store.getIndexById(over.id) || config.row_height / 3 < targetY) return;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//if item is on different level, check the one before it\n\t\t\tvar index = store.getIndexById(over.id),\n\t\t\t\tprevId = store.getIdByIndex(index - 1);\n\n\t\t\tvar prev = store.getItem(prevId);\n\n\t\t\tvar shift = 1;\n\t\t\twhile ((!prev || prev.id == over.id) && index - shift >= 0) {\n\n\t\t\t\tprevId = store.getIdByIndex(index - shift);\n\t\t\t\tprev = store.getItem(prevId);\n\t\t\t\tshift++;\n\t\t\t}\n\n\t\t\tif (item.id == over.id) return;\n\t\t\t//replacing item under cursor\n\t\t\tif (allowedLevel(over, item) && item.id != over.id) {\n\t\t\t\tstore.move(item.id, 0, 0, over.id);\n\n\t\t\t} else if (over.$level == item.$level - 1 && !store.getChildren(over.id).length) {\n\t\t\t\tstore.move(item.id, 0, over.id);\n\n\t\t\t} else if (prev && (allowedLevel(prev, item)) && (item.id != prev.id)) {\n\t\t\t\tstore.move(item.id, -1, store.getParent(prev.id));\n\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}, gantt));\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function () {\n\t\tvar store = getStore();\n\t\tvar task = store.getItem(dnd.config.id);\n\t\ttask.$transparent = false;\n\t\ttask.$open = dnd.config.initial_open_state;\n\n\t\tif (this.callEvent(\"onBeforeRowDragEnd\", [dnd.config.id, dnd.config.parent, dnd.config.index]) === false) {\n\t\t\tstore.move(dnd.config.id, dnd.config.index, dnd.config.parent);\n\t\t\ttask.$drop_target = null;\n\t\t} else {\n\t\t\tthis.callEvent(\"onRowDragEnd\", [dnd.config.id, task.$drop_target]);\n\t\t}\n\t\t\n\t\tstore.refresh(task.id);\n\t\t//this.refreshData();\n\t}, gantt));\n}\n\nmodule.exports = {\n\tinit: _init_dnd\n};", "var utils = require(\"../../../utils/utils\");\nvar rowDnd = require(\"./tasks_grid_dnd\");\nvar rowDndMarker = require(\"./tasks_grid_dnd_marker\");\n\nvar initializer = (function(){\n\treturn function(gantt){\n\t\treturn {\n\t\t\tonCreated: function (grid) {\n\t\t\t\tgrid.$config = utils.mixin(grid.$config, {\n\t\t\t\t\tbind: \"task\"\n\t\t\t\t});\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tthis.extendGantt(grid);\n\t\t\t\t\tgantt.ext.inlineEditors = gantt.ext._inlineEditors.createEditors(grid);\n\t\t\t\t\tgantt.ext.inlineEditors.init();\n\t\t\t\t}\n\n\t\t\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\t\t\t},\n\t\t\tonInitialized: function (grid) {\n\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\tif (config.order_branch) {\n\t\t\t\t\tif(config.order_branch == \"marker\"){\n\t\t\t\t\t\trowDndMarker.init(grid.$gantt, grid);\n\t\t\t\t\t}else{\n\t\t\t\t\t\trowDnd.init(grid.$gantt, grid);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.initEvents(grid, gantt);\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tthis.extendDom(grid);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDestroyed: function (grid) {\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tgantt.ext.inlineEditors.destructor();\n\t\t\t\t}\n\t\t\t\tthis.clearEvents(grid, gantt);\n\t\t\t},\n\n\t\t\tinitEvents: function (grid, gantt) {\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_row\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\t\tif (id !== null) {\n\t\t\t\t\t\tvar task = this.getTask(id);\n\t\t\t\t\t\tif (config.scroll_on_click && !gantt._is_icon_open_click(e))\n\t\t\t\t\t\t\tthis.showDate(task.start_date);\n\t\t\t\t\t\tgantt.callEvent(\"onTaskRowClick\", [id, trg]);\n\t\t\t\t\t}\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_grid_head_cell\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar column = trg.getAttribute(\"data-column-id\");\n\n\t\t\t\t\tif (!gantt.callEvent(\"onGridHeaderClick\", [column, e]))\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tvar config = grid.$getConfig();\n\n\t\t\t\t\tif (column == \"add\") {\n\t\t\t\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\t\t\t\tmouseEvents.callHandler(\"click\", \"gantt_add\", grid.$grid, [e, config.root_id]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (config.sort) {\n\t\t\t\t\t\tvar sorting_method = column,\n\t\t\t\t\t\t\tconf;\n\n\t\t\t\t\t\tfor (var i = 0; i < config.columns.length; i++) {\n\t\t\t\t\t\t\tif (config.columns[i].name == column) {\n\t\t\t\t\t\t\t\tconf = config.columns[i];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (conf && conf.sort !== undefined && conf.sort !== true) {\n\t\t\t\t\t\t\tsorting_method = conf.sort;\n\n\t\t\t\t\t\t\tif (!sorting_method) { // column sort property 'false', no sorting\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar sort = (this._sort && this._sort.direction && this._sort.name == column) ? this._sort.direction : \"desc\";\n\t\t\t\t\t\t// invert sort direction\n\t\t\t\t\t\tsort = (sort == \"desc\") ? \"asc\" : \"desc\";\n\t\t\t\t\t\tthis._sort = {\n\t\t\t\t\t\t\tname: column,\n\t\t\t\t\t\t\tdirection: sort\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.sort(sorting_method, sort == \"desc\");\n\t\t\t\t\t}\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_add\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\t\tif (config.readonly) return;\n\n\t\t\t\t\tvar item = {};\n\t\t\t\t\tthis.createTask(item, id ? id : gantt.config.root_id);\n\n\t\t\t\t\treturn false;\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t},\n\n\t\t\tclearEvents: function(grid, gantt){\n\t\t\t\tthis._mouseDelegates.destructor();\n\t\t\t\tthis._mouseDelegates = null;\n\t\t\t},\n\n\t\t\textendDom: function(grid){\n\t\t\t\tgantt.$grid = grid.$grid;\n\t\t\t\tgantt.$grid_scale = grid.$grid_scale;\n\t\t\t\tgantt.$grid_data = grid.$grid_data;\n\t\t\t},\n\t\t\textendGantt: function(grid){\n\t\t\t\tgantt.getGridColumns = gantt.bind(grid.getGridColumns, grid);\n\n\t\t\t\tgrid.attachEvent(\"onColumnResizeStart\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResizeStart\", arguments);\n\t\t\t\t});\n\t\t\t\tgrid.attachEvent(\"onColumnResize\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResize\", arguments);\n\t\t\t\t});\n\t\t\t\tgrid.attachEvent(\"onColumnResizeEnd\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResizeEnd\", arguments);\n\t\t\t\t});\n\n\t\t\t\tgrid.attachEvent(\"onColumnResizeComplete\", function(columns, totalWidth){\n\t\t\t\t\tgantt.config.grid_width = totalWidth;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n})();\n\nmodule.exports = initializer;", "var helpers = require(\"../../../utils/helpers\");\n\nfunction createGridLineRender(gantt){\n\tfunction _render_grid_item(item, view) {\n\t\t//if (!_is_grid_visible.call(this))\n\t\t//\treturn null;\n\n\t\tvar columns = view.getGridColumns();\n\t\tvar config = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\n\t\tvar store = view.$config.rowStore;\n\n\t\tif(config.rtl){\n\t\t\tcolumns = columns.reverse();\n\t\t}\n\n\t\tvar cells = [];\n\t\tvar has_child;\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar last = i == columns.length - 1;\n\t\t\tvar col = columns[i];\n\t\t\tvar cell;\n\n\t\t\tvar value;\n\t\t\tvar textValue;\n\t\t\tif (col.name == \"add\") {\n\t\t\t\tvar aria = gantt._waiAria.gridAddButtonAttrString(col);\n\n\t\t\t\tvalue = \"<div \" + aria + \" class='gantt_add'></div>\";\n\t\t\t\ttextValue = \"\";\n\t\t\t} else {\n\t\t\t\tif (col.template)\n\t\t\t\t\tvalue = col.template(item);\n\t\t\t\telse\n\t\t\t\t\tvalue = item[col.name];\n\n\t\t\t\tif (helpers.isDate(value))\n\t\t\t\t\tvalue = templates.date_grid(value, item);\n\t\t\t\ttextValue = value;\n\t\t\t\tvalue = \"<div class='gantt_tree_content'>\" + value + \"</div>\";\n\t\t\t}\n\t\t\tvar css = \"gantt_cell\" + (last ? \" gantt_last_cell\" : \"\");\n\n\t\t\tvar tree = [];\n\t\t\tif (col.tree) {\n\t\t\t\tfor (var j = 0; j < item.$level; j++)\n\t\t\t\t\ttree.push(templates.grid_indent(item));\n\n\t\t\t\thas_child = store.hasChild(item.id) && !(gantt.isSplitTask(item));\n\t\t\t\tif (has_child) {\n\t\t\t\t\ttree.push(templates.grid_open(item));\n\t\t\t\t\ttree.push(templates.grid_folder(item));\n\t\t\t\t} else {\n\t\t\t\t\ttree.push(templates.grid_blank(item));\n\t\t\t\t\ttree.push(templates.grid_file(item));\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar style = \"width:\" + (col.width - (last ? 1 : 0)) + \"px;\";\n\t\t\tif (this.defined(col.align))\n\t\t\t\tstyle += \"text-align:\" + col.align + \";\";\n\n\t\t\tvar aria = gantt._waiAria.gridCellAttrString(col, textValue);\n\n\t\t\ttree.push(value);\n\t\t\tif(config.rtl){\n\t\t\t\ttree = tree.reverse();\n\t\t\t}\n\t\t\tcell = \"<div class='\" + css + \"' data-column-index='\"+i+\"' data-column-name='\"+col.name+\"' style='\" + style + \"' \" + aria + \">\" + tree.join(\"\") + \"</div>\";\n\t\t\tcells.push(cell);\n\t\t}\n\t\tvar css = gantt.getGlobalTaskIndex(item.id) % 2 === 0 ? \"\" : \" odd\";\n\t\tcss += (item.$transparent) ? \" gantt_transparent\" : \"\";\n\n\t\tcss += (item.$dataprocessor_class ? \" \" + item.$dataprocessor_class : \"\");\n\n\t\tif (templates.grid_row_class) {\n\t\t\tvar css_template = templates.grid_row_class.call(gantt, item.start_date, item.end_date, item);\n\t\t\tif (css_template)\n\t\t\t\tcss += \" \" + css_template;\n\t\t}\n\n\t\tif(store.getSelectedId() == item.id) {\n\t\t\tcss += \" gantt_selected\";\n\t\t}\n\n\t\tvar el = document.createElement(\"div\");\n\t\tel.className = \"gantt_row\" + css + \" gantt_row_\" + gantt.getTaskType(item.type);\n\t\tvar height = view.getItemHeight();\n\t\tel.style.height = height + \"px\";\n\t\tel.style.lineHeight = height + \"px\";\n\n\t\tif(config.smart_rendering){\n\t\t\tel.style.position = \"absolute\";\n\t\t\tel.style.left = \"0px\";\n\t\t\tel.style.top = view.getItemTop(item.id) + \"px\";\n\t\t}\n\n\t\tif(view.$config.item_attribute){\n\t\t\tel.setAttribute(view.$config.item_attribute, item.id);\n\t\t}\n\n\t\tgantt._waiAria.taskRowAttr(item, el);\n\n\t\tel.innerHTML = cells.join(\"\");\n\t\treturn el;\n\t}\n\n\treturn _render_grid_item;\n}\n\nmodule.exports = createGridLineRender;\n\n", "\nfunction createLinkRender(gantt){\n\nfunction _render_link_element(link, view) {\n\tvar config = view.$getConfig();\n\n\tvar pt = path_builder.get_endpoint(link, view);\n\tvar dy = pt.e_y - pt.y;\n\tvar dx = pt.e_x - pt.x;\n\tif(!dx && !dy){\n\t\treturn null;\n\t}\n\n\n\tvar dots = path_builder.get_points(link, view);\n\tvar lines = drawer.get_lines(dots, view);\n\n\tvar div = document.createElement(\"div\");\n\n\tvar css = \"gantt_task_link\";\n\n\tif (link.color) {\n\t\tcss += \" gantt_link_inline_color\";\n\t}\n\tvar cssTemplate = gantt.templates.link_class ? gantt.templates.link_class(link) : \"\";\n\tif (cssTemplate) {\n\t\tcss += \" \" + cssTemplate;\n\t}\n\n\tif (config.highlight_critical_path && gantt.isCriticalLink) {\n\t\tif (gantt.isCriticalLink(link))\n\t\t\tcss += \" gantt_critical_link\";\n\t}\n\n\tdiv.className = css;\n\n\tif(view.$config.link_attribute){\n\t\tdiv.setAttribute(view.$config.link_attribute, link.id);\n\t}\n\n\tfor (var i = 0; i < lines.length; i++) {\n\t\tif (i == lines.length - 1) {\n\t\t\tlines[i].size -= config.link_arrow_size;\n\t\t}\n\t\tvar el = drawer.render_line(lines[i], lines[i + 1], view);\n\t\tif (link.color) {\n\t\t\tel.firstChild.style.backgroundColor = link.color;\n\t\t}\n\t\tdiv.appendChild(el);\n\t}\n\n\tvar direction = lines[lines.length - 1].direction;\n\tvar endpoint = _render_link_arrow(dots[dots.length - 1], direction, view);\n\tif (link.color) {\n\t\tendpoint.style.borderColor = link.color;\n\t}\n\tdiv.appendChild(endpoint);\n\n\tgantt._waiAria.linkAttr(link, div);\n\n\treturn div;\n}\n\nfunction _render_link_arrow(point, direction, view) {\n\tvar config = view.$getConfig();\n\tvar div = document.createElement(\"div\");\n\tvar top = point.y;\n\tvar left = point.x;\n\n\tvar size = config.link_arrow_size;\n\tvar line_width = config.row_height;\n\tvar className = \"gantt_link_arrow gantt_link_arrow_\" + direction;\n\tswitch (direction) {\n\t\tcase drawer.dirs.right:\n\t\t\ttop -= (size - line_width) / 2;\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tcase drawer.dirs.left:\n\t\t\ttop -= (size - line_width) / 2;\n\t\t\tbreak;\n\t\tcase drawer.dirs.up:\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tcase drawer.dirs.down:\n\t\t\ttop += size * 2;\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\tdiv.style.cssText = [\n\t\t\"top:\" + top + \"px\",\n\t\t\"left:\" + left + 'px'].join(';');\n\tdiv.className = className;\n\n\treturn div;\n}\n\n\nvar drawer = {\n\tcurrent_pos: null,\n\tdirs: {\"left\": 'left', \"right\": 'right', \"up\": 'up', \"down\": 'down'},\n\tpath: [],\n\tclear: function () {\n\t\tthis.current_pos = null;\n\t\tthis.path = [];\n\t},\n\tpoint: function (pos) {\n\t\tthis.current_pos = gantt.copy(pos);\n\t},\n\tget_lines: function (dots) {\n\t\tthis.clear();\n\t\tthis.point(dots[0]);\n\t\tfor (var i = 1; i < dots.length; i++) {\n\t\t\tthis.line_to(dots[i]);\n\t\t}\n\t\treturn this.get_path();\n\t},\n\tline_to: function (pos) {\n\t\tvar next = gantt.copy(pos);\n\t\tvar prev = this.current_pos;\n\n\t\tvar line = this._get_line(prev, next);\n\t\tthis.path.push(line);\n\t\tthis.current_pos = next;\n\t},\n\tget_path: function () {\n\t\treturn this.path;\n\t},\n\tget_wrapper_sizes: function (v, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar res,\n\t\t\twrapper_size = config.link_wrapper_width,\n\t\t\ty = v.y + (config.row_height - wrapper_size) / 2;\n\t\tswitch (v.direction) {\n\t\t\tcase this.dirs.left:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y,\n\t\t\t\t\theight: wrapper_size,\n\t\t\t\t\tlineHeight: wrapper_size,\n\t\t\t\t\tleft: v.x - v.size - wrapper_size / 2,\n\t\t\t\t\twidth: v.size + wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.right:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y,\n\t\t\t\t\tlineHeight: wrapper_size,\n\t\t\t\t\theight: wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: v.size + wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.up:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y - v.size,\n\t\t\t\t\tlineHeight: v.size + wrapper_size,\n\t\t\t\t\theight: v.size + wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.down:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y /*- wrapper_size/2*/,\n\t\t\t\t\tlineHeight: v.size + wrapper_size,\n\t\t\t\t\theight: v.size + wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn res;\n\t},\n\tget_line_sizes: function (v, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar res,\n\t\t\tline_size = config.link_line_width,\n\t\t\twrapper_size = config.link_wrapper_width,\n\t\t\tsize = v.size + line_size;\n\t\tswitch (v.direction) {\n\t\t\tcase this.dirs.left:\n\t\t\tcase this.dirs.right:\n\t\t\t\tres = {\n\t\t\t\t\theight: line_size,\n\t\t\t\t\twidth: size,\n\t\t\t\t\tmarginTop: (wrapper_size - line_size) / 2,\n\t\t\t\t\tmarginLeft: (wrapper_size - line_size) / 2\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.up:\n\t\t\tcase this.dirs.down:\n\t\t\t\tres = {\n\t\t\t\t\theight: size,\n\t\t\t\t\twidth: line_size,\n\t\t\t\t\tmarginTop: (wrapper_size - line_size) / 2,\n\t\t\t\t\tmarginLeft: (wrapper_size - line_size) / 2\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\n\t\treturn res;\n\t},\n\trender_line: function (v, end, view) {\n\t\tvar pos = this.get_wrapper_sizes(v, view);\n\t\tvar wrapper = document.createElement(\"div\");\n\t\twrapper.style.cssText = [\n\t\t\t\"top:\" + pos.top + \"px\",\n\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\"height:\" + pos.height + \"px\",\n\t\t\t\"width:\" + pos.width + \"px\"\n\t\t].join(';');\n\t\twrapper.className = \"gantt_line_wrapper\";\n\n\t\tvar innerPos = this.get_line_sizes(v, view);\n\t\tvar inner = document.createElement(\"div\");\n\t\tinner.style.cssText = [\n\t\t\t\"height:\" + innerPos.height + \"px\",\n\t\t\t\"width:\" + innerPos.width + \"px\",\n\t\t\t\"margin-top:\" + innerPos.marginTop + \"px\",\n\t\t\t\"margin-left:\" + innerPos.marginLeft + \"px\"\n\t\t].join(\";\");\n\n\t\tinner.className = \"gantt_link_line_\" + v.direction;\n\t\twrapper.appendChild(inner);\n\n\t\treturn wrapper;\n\t},\n\t_get_line: function (from, to) {\n\t\tvar direction = this.get_direction(from, to);\n\t\tvar vect = {\n\t\t\tx: from.x,\n\t\t\ty: from.y,\n\t\t\tdirection: this.get_direction(from, to)\n\t\t};\n\t\tif (direction == this.dirs.left || direction == this.dirs.right) {\n\t\t\tvect.size = Math.abs(from.x - to.x);\n\t\t} else {\n\t\t\tvect.size = Math.abs(from.y - to.y);\n\t\t}\n\t\treturn vect;\n\t},\n\tget_direction: function (from, to) {\n\t\tvar direction = 0;\n\t\tif (to.x < from.x) {\n\t\t\tdirection = this.dirs.left;\n\t\t} else if (to.x > from.x) {\n\t\t\tdirection = this.dirs.right;\n\t\t} else if (to.y > from.y) {\n\t\t\tdirection = this.dirs.down;\n\t\t} else {\n\t\t\tdirection = this.dirs.up;\n\t\t}\n\t\treturn direction;\n\t}\n\n};\n\nvar path_builder = {\n\n\tpath: [],\n\tclear: function () {\n\t\tthis.path = [];\n\t},\n\tcurrent: function () {\n\t\treturn this.path[this.path.length - 1];\n\t},\n\tpoint: function (next) {\n\t\tif (!next)\n\t\t\treturn this.current();\n\n\t\tthis.path.push(gantt.copy(next));\n\t\treturn next;\n\t},\n\tpoint_to: function (direction, diff, point) {\n\t\tif (!point)\n\t\t\tpoint = gantt.copy(this.point());\n\t\telse\n\t\t\tpoint = {x: point.x, y: point.y};\n\t\tvar dir = drawer.dirs;\n\t\tswitch (direction) {\n\t\t\tcase (dir.left):\n\t\t\t\tpoint.x -= diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.right):\n\t\t\t\tpoint.x += diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.up):\n\t\t\t\tpoint.y -= diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.down):\n\t\t\t\tpoint.y += diff;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this.point(point);\n\t},\n\tget_points: function (link, view) {\n\t\tvar pt = this.get_endpoint(link, view);\n\t\tvar xy = gantt.config;\n\n\t\tvar dy = pt.e_y - pt.y;\n\t\tvar dx = pt.e_x - pt.x;\n\n\t\tvar dir = drawer.dirs;\n\n\t\tthis.clear();\n\t\tthis.point({x: pt.x, y: pt.y});\n\n\t\tvar shiftX = 2 * xy.link_arrow_size;//just random size for first line\n\t\tvar lineType = this.get_line_type(link, view.$getConfig());\n\n\t\tvar forward = (pt.e_x > pt.x);\n\t\tif (lineType.from_start && lineType.to_start) {\n\t\t\tthis.point_to(dir.left, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t}\n\t\t\tthis.point_to(dir.right, shiftX);\n\n\t\t} else if (!lineType.from_start && lineType.to_start) {\n\t\t\tforward = (pt.e_x > (pt.x + 2 * shiftX));\n\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tdx -= shiftX;\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tdx -= 2 * shiftX;\n\t\t\t\tvar sign = dy > 0 ? 1 : -1;\n\n\t\t\t\tthis.point_to(dir.down, sign * (xy.row_height / 2));\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, sign * ( Math.abs(dy) - (xy.row_height / 2)));\n\t\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\t}\n\n\t\t} else if (!lineType.from_start && !lineType.to_start) {\n\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t} else {\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t}\n\t\t\tthis.point_to(dir.left, shiftX);\n\t\t} else if (lineType.from_start && !lineType.to_start) {\n\n\t\t\tforward = (pt.e_x > (pt.x - 2 * shiftX));\n\t\t\tthis.point_to(dir.left, shiftX);\n\n\t\t\tif (!forward) {\n\t\t\t\tdx += shiftX;\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tdx += 2 * shiftX;\n\t\t\t\tvar sign = dy > 0 ? 1 : -1;\n\t\t\t\tthis.point_to(dir.down, sign * (xy.row_height / 2));\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, sign * ( Math.abs(dy) - (xy.row_height / 2)));\n\t\t\t\tthis.point_to(dir.left, shiftX);\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.path;\n\t},\n\tget_line_type: function(link, config){\n\t\tvar types = config.links;\n\t\tvar from_start = false, to_start = false;\n\t\tif (link.type == types.start_to_start) {\n\t\t\tfrom_start = to_start = true;\n\t\t} else if (link.type == types.finish_to_finish) {\n\t\t\tfrom_start = to_start = false;\n\t\t} else if (link.type == types.finish_to_start) {\n\t\t\tfrom_start = false;\n\t\t\tto_start = true;\n\t\t} else if (link.type == types.start_to_finish) {\n\t\t\tfrom_start = true;\n\t\t\tto_start = false;\n\t\t} else {\n\t\t\tgantt.assert(false, \"Invalid link type\");\n\t\t}\n\n\t\tif(config.rtl){\n\t\t\tfrom_start = !from_start;\n\t\t\tto_start = !to_start;\n\t\t}\n\n\t\treturn {from_start: from_start, to_start: to_start};\n\t},\n\n\tget_endpoint: function (link, view) {\n\t\tvar config = view.$getConfig();\n\n\t\tvar lineType = this.get_line_type(link, config);\n\t\tvar from_start = lineType.from_start,\n\t\t\tto_start = lineType.to_start;\n\n\t\tvar source = gantt.getTask(link.source);\n\t\tvar target = gantt.getTask(link.target);\n\n\t\tvar from = getMilestonePosition(source, view),\n\t\t\tto = getMilestonePosition(target, view);\n\n\t\treturn {\n\t\t\tx: from_start ? from.left : (from.left + from.width),\n\t\t\te_x: to_start ? to.left : (to.left + to.width),\n\t\t\ty: from.top,\n\t\t\te_y: to.top\n\t\t};\n\t}\n};\n\nfunction getMilestonePosition(task, view){\n\tvar config = view.$getConfig();\n\tvar pos = view.getItemPosition(task);\n\tif(gantt.getTaskType(task.type) == config.types.milestone){\n\t\tvar milestoneHeight = gantt.getTaskHeight();\n\t\tvar milestoneWidth = Math.sqrt(2*milestoneHeight*milestoneHeight);\n\t\tpos.left -= milestoneWidth / 2;\n\t\tpos.width = milestoneWidth;\n\t}\n\treturn pos;\n}\n\nreturn _render_link_element;\n\n}\n\nmodule.exports = createLinkRender;", "function createTaskBgRender(gantt){\n\t//this.getTaskTop\n\tfunction _render_bg_line(item, view) {\n\t\tvar config = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\t\tvar cfg = view.getScale();\n\t\tvar count = cfg.count;\n\t\tvar row = document.createElement(\"div\");\n\t\tif (config.show_task_cells) {\n\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\tvar width = cfg.width[j],\n\t\t\t\t\tcssclass = \"\";\n\n\t\t\t\tif (width > 0) {//do not render skipped columns\n\t\t\t\t\tvar cell = document.createElement(\"div\");\n\t\t\t\t\tcell.style.width = (width) + \"px\";\n\n\t\t\t\t\tcssclass = \"gantt_task_cell\" + (j == count - 1 ? \" gantt_last_cell\" : \"\");\n\t\t\t\t\tcssTemplate = templates.task_cell_class(item, cfg.trace_x[j]);\n\t\t\t\t\tif (cssTemplate)\n\t\t\t\t\t\tcssclass += \" \" + cssTemplate;\n\t\t\t\t\tcell.className = cssclass;\n\n\t\t\t\t\trow.appendChild(cell);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tvar odd = gantt.getGlobalTaskIndex(item.id) % 2 !== 0;\n\t\tvar cssTemplate = templates.task_row_class(item.start_date, item.end_date, item);\n\t\tvar css = \"gantt_task_row\" + (odd ? \" odd\" : \"\") + (cssTemplate ? ' ' + cssTemplate : '');\n\n\t\tvar store = view.$config.rowStore;\n\t\tif(store.getSelectedId() == item.id) {\n\t\t\tcss += \" gantt_selected\";\n\t\t}\n\n\t\t//var row = \"<div class='\" + css + \"' \" + this.config.task_attribute + \"='\" + item.id + \"'>\" + cells.join(\"\") + \"</div>\";\n\n\t\trow.className = css;\n\n\t\tif (config.smart_rendering) {\n\t\t\trow.style.position = \"absolute\";\n\t\t\trow.style.top = view.getItemTop(item.id) + \"px\";\n\t\t\trow.style.width = \"100%\";\n\t\t}\n\t\trow.style.height = (config.row_height) + \"px\";\n\n\t\tif(view.$config.item_attribute){\n\t\t\trow.setAttribute(view.$config.item_attribute, item.id);\n\t\t}\n\n\t\treturn row;\n\t}\n\n\treturn _render_bg_line;\n}\n\nmodule.exports = createTaskBgRender;", "function createTaskRenderer(gantt){\n\tvar defaultRender = require(\"./task_bar_render\")(gantt);\n\n\treturn function show_children(task, timeline) {\n\t\tif (gantt.isSplitTask(task)) {\n\t\t\tvar el = document.createElement('div'),\n\t\t\t\tsizes = gantt.getTaskPosition(task);\n\n\t\t\tvar sub_tasks = gantt.getChildren(task.id);\n\n\n\t\t\tfor (var i = 0; i < sub_tasks.length; i++) {\n\t\t\t\tvar child = gantt.getTask(sub_tasks[i]);\n\n\t\t\t\tvar element = defaultRender(child, timeline);\n\t\t\t\tif(!element)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar padding = Math.floor((gantt.config.row_height - sizes.height) / 2);\n\n\t\t\t\telement.style.top = (sizes.top + padding) + \"px\";\n\t\t\t\telement.className += \" gantt_split_child\";\n\n\t\t\t\tel.appendChild(element);\n\t\t\t}\n\t\t\treturn el;\n\t\t}\n\t\treturn false;\n\t};\n}\n\nmodule.exports = createTaskRenderer;", "module.exports = function (gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction PredecessorEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(PredecessorEditor, BaseEditor);\n\n\tfunction parseInputString(value, config) {\n\t\tvar predecessors = (value || \"\").split(config.delimiter || \",\");\n\t\tfor (var i = 0; i < predecessors.length; i++) {\n\t\t\tvar val = predecessors[i].trim();\n\t\t\tif (val) {\n\t\t\t\tpredecessors[i] = val;\n\t\t\t} else {\n\t\t\t\tpredecessors.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\tpredecessors.sort();\n\t\treturn predecessors;\n\t}\n\n\tfunction formatPredecessors(task, config, gantt) {\n\t\tvar links = task.$target;\n\t\tvar labels = [];\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar link = gantt.getLink(links[i]);\n\t\t\tvar pred = gantt.getTask(link.source);\n\t\t\tlabels.push(gantt.getWBSCode(pred));\n\t\t}\n\t\treturn labels.join((config.delimiter || \",\") + \" \");\n\t}\n\n\tfunction getSelectedLinks(taskId, predecessorCodes) {\n\t\tvar links = [];\n\t\tpredecessorCodes.forEach(function (code) {\n\t\t\tvar predecessor = gantt.getTaskByWBSCode(code);\n\t\t\tif (predecessor) {\n\t\t\t\tvar link = {\n\t\t\t\t\tsource: predecessor.id,\n\t\t\t\t\ttarget: taskId,\n\t\t\t\t\ttype: gantt.config.links.finish_to_start,\n\t\t\t\t\tlag: 0\n\t\t\t\t};\n\t\t\t\tif (gantt.isLinkAllowed(link)) {\n\t\t\t\t\tlinks.push(link);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn links;\n\t}\n\n\tfunction getLinksDiff(task, predecessorCodes) {\n\t\tvar selectedLinks = getSelectedLinks(task.id, predecessorCodes);\n\t\tvar existingLinksSearch = {};\n\t\ttask.$target.forEach(function (linkId) {\n\t\t\tvar link = gantt.getLink(linkId);\n\t\t\texistingLinksSearch[link.source + \"_\" + link.target] = link.id;\n\t\t});\n\n\t\tvar linksToAdd = [];\n\t\tselectedLinks.forEach(function (link) {\n\t\t\tvar linkKey = link.source + \"_\" + link.target;\n\t\t\tif (!existingLinksSearch[linkKey]) {\n\t\t\t\tlinksToAdd.push(link);\n\t\t\t} else {\n\t\t\t\tdelete existingLinksSearch[linkKey];\n\t\t\t}\n\t\t});\n\n\t\tvar linksToDelete = [];\n\t\tfor (var i in existingLinksSearch) {\n\t\t\tlinksToDelete.push(existingLinksSearch[i]);\n\t\t}\n\n\t\treturn {\n\t\t\tadd: linksToAdd,\n\t\t\tremove: linksToDelete\n\t\t};\n\t}\n\n\tutils.mixin(PredecessorEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><input type='text' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\thide: function () {\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = formatPredecessors(value, column.editor, gantt);\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn parseInputString((this.get_input(node).value || \"\"), column.editor);\n\t\t},\n\t\tsave: function (id, column, node) {\n\t\t\tvar task = gantt.getTask(id);\n\n\t\t\tvar linksDiff = getLinksDiff(task, this.get_value(id, column, node));\n\n\t\t\tif (linksDiff.add.length || linksDiff.remove.length) {\n\t\t\t\tgantt.batchUpdate(function () {\n\t\t\t\t\tlinksDiff.add.forEach(function (link) {\n\t\t\t\t\t\tgantt.addLink(link);\n\t\t\t\t\t});\n\t\t\t\t\tlinksDiff.remove.forEach(function (linkId) {\n\t\t\t\t\t\tgantt.deleteLink(linkId);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (gantt.autoSchedule)\n\t\t\t\t\t\tgantt.autoSchedule();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tis_changed: function (value, id, column, node) {\n\t\t\tvar inputPredecessors = this.get_value(id, column, node);\n\t\t\tvar taskPredecessors = parseInputString(formatPredecessors(value, column.editor, gantt), column.editor);\n\n\t\t\treturn inputPredecessors.join() !== taskPredecessors.join();\n\t\t}\n\t}, true);\n\n\treturn PredecessorEditor;\n};", "module.exports = function(gantt) {\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tvar html5DateFormat = \"%Y-%m-%d\";\n\n\tvar dateToStr = null;\n\tvar strToDate = null;\n\n\tfunction init(){\n\t\tif(!dateToStr){\n\t\t\tdateToStr = gantt.date.date_to_str(html5DateFormat);\n\t\t}\n\t\tif(!strToDate){\n\t\t\tstrToDate = gantt.date.str_to_date(html5DateFormat);\n\t\t}\n\t}\n\n\tfunction DateEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\n\t\treturn self;\n\t}\n\n\t__extends(DateEditor, BaseEditor);\n\n\tutils.mixin(DateEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\n\t\t\tinit();\n\t\t\tvar minValue = dateToStr(config.min || gantt.getState().min_date);\n\t\t\tvar maxValue = dateToStr(config.max || gantt.getState().max_date);\n\n\t\t\tvar html = \"<div style='width:140px'><input type='date' min='\" + minValue + \"' max='\" + maxValue + \"' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = dateToStr(value);\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\tif (!value || isNaN(value.getTime()))\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\tvar parsed;\n\t\t\ttry {\n\t\t\t\tparsed = strToDate(this.get_input(node).value || \"\");\n\t\t\t} catch (e) {\n\t\t\t\tparsed = null;// return null will cancel changes\n\t\t\t}\n\n\t\t\treturn parsed;\n\t\t}\n\t}, true);\n\n\treturn DateEditor;\n};\n", "module.exports = function(gantt) {\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction SelectEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(SelectEditor, BaseEditor);\n\n\tutils.mixin(SelectEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><select name='\" + column.name + \"'>\";\n\t\t\tvar optionsHtml = [],\n\t\t\t\toptions = config.options || [];\n\n\t\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\t\toptionsHtml.push(\"<option value='\" + config.options[i].key + \"'>\" + options[i].label + \"</option>\");\n\t\t\t}\n\n\t\t\thtml += optionsHtml.join(\"\") + \"</select></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tget_input: function (node) {\n\t\t\treturn node.querySelector(\"select\");\n\t\t}\n\t}, true);\n\n\treturn SelectEditor;\n};", "module.exports = function (gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction NumberEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(NumberEditor, BaseEditor);\n\n\tutils.mixin(NumberEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar min = config.min || 0,\n\t\t\t\tmax = config.max || 100;\n\n\t\t\tvar html = \"<div><input type='number' min='\" + min + \"' max='\" + max + \"' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn this.get_input(node).value || \"\";\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\treturn !isNaN(parseInt(value, 10));\n\t\t}\n\t}, true);\n\n\treturn NumberEditor;\n};", "module.exports = function(gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction TextEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(TextEditor, BaseEditor);\n\n\tutils.mixin(TextEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><input type='text' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t}\n\t}, true);\n\n\treturn TextEditor;\n};", "module.exports = {\n\tinit: function(controller, grid){\n\t\tvar self = controller;\n\t\tvar gantt = grid.$gantt;\n\n\t\tvar onBlurDelay = null;\n\t\tvar keyNav = gantt.ext.keyboardNavigation;\n\t\tkeyNav.attachEvent(\"onBeforeFocus\", function (node) {\n\t\t\tvar activeCell = controller.locateCell(node);\n\t\t\tclearTimeout(onBlurDelay);\n\t\t\tif (activeCell) {\n\t\t\t\tvar columnName = activeCell.columnName;\n\t\t\t\tvar id = activeCell.id;\n\n\t\t\t\tvar editorState = self.getState();\n\t\t\t\tif(self.isVisible()){\n\t\t\t\t\tif(editorState.id == id && editorState.columnName === columnName) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onFocus\", function (node) {\n\t\t\tvar activeCell = controller.locateCell(node);\n\t\t\tvar state = controller.getState();\n\t\t\tclearTimeout(onBlurDelay);\n\t\t\tif (activeCell && !(activeCell.id == state.id && activeCell.columnName == state.columnName)) {\n\t\t\t\tif(self.isVisible()){\n\t\t\t\t\tself.save();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tcontroller.attachEvent(\"onHide\", function(){\n\t\t\tclearTimeout(onBlurDelay);\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onBlur\", function () {\n\t\t\tonBlurDelay = setTimeout(function(){\n\t\t\t\tself.save();\n\t\t\t});\n\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskDblClick\", function(id,e){\n\t\t\t// block lightbox on double click inside editor\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\t\t\tif(cell && controller.isVisible() && cell.columnName == state.columnName){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskClick\", function (id, e) {\n\t\t\tif(gantt._is_icon_open_click(e))\n\t\t\t\treturn true;\n\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\n\t\t\tif (cell && controller.getEditorConfig(cell.columnName)) {\n\t\t\t\tif(controller.isVisible() && state.id == cell.id && state.columnName == cell.columnName){\n\t\t\t\t\t// do nothing if editor is already active in this cell\n\t\t\t\t}else{\n\t\t\t\t\tcontroller.startEdit(cell.id, cell.columnName);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tgantt.attachEvent(\"onEmptyClick\", function () {\n\t\t\tself.save();\n\t\t\treturn true;\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onKeyDown\", function(command, e){\n\t\t\tvar activeCell = controller.locateCell(e.target);\n\t\t\tvar hasEditor = activeCell ? controller.getEditorConfig(activeCell.columnName) : false;\n\n\t\t\tvar state = controller.getState();\n\t\t\tvar keyboard = gantt.constants.KEY_CODES;\n\t\t\tvar keyCode = e.keyCode;\n\t\t\tvar preventKeyNav = false;\n\n\t\t\tswitch (keyCode){\n\t\t\t\tcase keyboard.ENTER:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tcontroller.save();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}else if(hasEditor && !(e.ctrlKey || e.metaKey || e.shiftKey)){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.ESC:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tcontroller.hide();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.UP:\n\t\t\t\tcase keyboard.DOWN:\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.LEFT:\n\t\t\t\tcase keyboard.RIGHT:\n\t\t\t\t\tif(state.editorType === \"date\"){\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.SPACE:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.DELETE:\n\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.TAB:\n\t\t\t\t\tif(controller.isVisible()){\n\n\t\t\t\t\t\tif(e.shiftKey){\n\t\t\t\t\t\t\tcontroller.editPrevCell(true);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tcontroller.editNextCell(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar newState = controller.getState();\n\t\t\t\t\t\tif(newState.id){\n\t\t\t\t\t\t\tkeyNav.focus({type:\"taskCell\", id: newState.id, column:newState.columnName});\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(controller.isVisible())\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\telse{\n\n\t\t\t\t\t\t// start editing on character key\n\t\t\t\t\t\tif((keyCode >= 48 && keyCode <= 57) || // [0-9]\n\t\t\t\t\t\t\t(keyCode > 95 && keyCode < 112) || // numpad\n\t\t\t\t\t\t\t(keyCode >= 64 && keyCode <= 91) || // [a-z]\n\t\t\t\t\t\t\t(keyCode > 185 && keyCode < 193) || //;=-,etc\n\t\t\t\t\t\t\t(keyCode > 218  && keyCode < 223)\n\t\t\t\t\t\t){\n\t\t\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (preventKeyNav){\n\t\t\t\treturn false;\n\t\t\t} else{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t},\n\tonShow: function(controller, placeholder, grid){},\n\tonHide: function(controller, placeholder, grid){\n\t\tvar gantt = grid.$gantt;\n\t\tgantt.focus();\n\n\t},\n\tdestroy: function(){}\n};\n\n", "module.exports = {\n\tinit: function(controller, grid){\n\t\tvar gantt = grid.$gantt;\n\n\t\tgantt.attachEvent(\"onTaskClick\", function (id, e) {\n\t\t\tif(gantt._is_icon_open_click(e))\n\t\t\t\treturn true;\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\n\t\t\tif (cell && controller.getEditorConfig(cell.columnName)) {\n\t\t\t\tif(controller.isVisible() && state.id == cell.id && state.columnName == cell.columnName){\n\t\t\t\t\t// do nothing if editor is already active in this cell\n\t\t\t\t}else{\n\t\t\t\t\tcontroller.startEdit(cell.id, cell.columnName);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tgantt.attachEvent(\"onEmptyClick\", function () {\n\t\t\tcontroller.hide();\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskDblClick\", function(id,e){\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\t\t\tif(cell && controller.isVisible() && cell.columnName == state.columnName){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t},\n\n\tonShow: function(controller, placeholder, grid){\n\t\tif(grid.$getConfig().keyboard_navigation){\n\t\t\t// keyboard navigation extension will handle arrows if enabled\n\t\t\treturn;\n\t\t}\n\t\tvar gantt = grid.$gantt;\n\t\tplaceholder.onkeydown = function (e) {\n\t\t\te = e || window.event;\n\n\t\t\tvar keyboard = gantt.constants.KEY_CODES;\n\t\t\tif(e.defaultPrevented || (e.shiftKey && e.keyCode != keyboard.TAB)){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar shouldPrevent = true;\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase gantt.keys.edit_save:\n\t\t\t\t\tcontroller.save();\n\t\t\t\t\tbreak;\n\t\t\t\tcase gantt.keys.edit_cancel:\n\t\t\t\t\tcontroller.hide();\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.TAB:\n\t\t\t\t\tif(e.shiftKey){\n\t\t\t\t\t\tcontroller.editPrevCell(true);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcontroller.editNextCell(true);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tshouldPrevent = false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(shouldPrevent){\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t};\n\t},\n\tonHide: function(){\n\n\t},\n\n\tdestroy: function(){\n\n\t}\n};\n\n", "var defaultMapping = require(\"./keyboard_mappings/default\");\nvar keyNavMappings = require(\"./keyboard_mappings/keyboard_navigation\");\n\nmodule.exports = function(gantt){\n\n\tvar mapping = null;\n\n\treturn {\n\t\tsetMapping: function(map){\n\t\t\tmapping = map;\n\t\t},\n\t\tgetMapping: function(){\n\n\t\t\tif(mapping){\n\t\t\t\treturn mapping;\n\t\t\t}else if(gantt.config.keyboard_navigation_cells){\n\t\t\t\treturn keyNavMappings;\n\t\t\t}else{\n\t\t\t\treturn defaultMapping;\n\t\t\t}\n\t\t}\n\t};\n};\n", "var getKeyboardMapping = require(\"./keyboard_mappings\");\nvar textEditorFactory = require(\"./editors/text\"),\n\tnumberEditorFactory = require(\"./editors/number\"),\n\tselectEditorFactory = require(\"./editors/select\"),\n\tdateEditorFactory = require(\"./editors/date\"),\n\tpredecessorEditorFactory = require(\"./editors/predecessor\");\nvar utils = require(\"../../../../utils/utils\");\nvar domHelpers = require(\"../../../../utils/dom_helpers\");\nvar eventable = require(\"../../../../utils/eventable\");\n\nfunction initConfigs(gantt){\n\tgantt.config.editor_types = {\n\t\ttext: new (textEditorFactory(gantt))(),\n\t\tnumber: new (numberEditorFactory(gantt))(),\n\t\tselect: new (selectEditorFactory(gantt))(),\n\t\tdate: new (dateEditorFactory(gantt))(),\n\t\tpredecessor: new (predecessorEditorFactory(gantt))()\n\t};\n}\n\nfunction create(gantt){\n\tvar keyboardMapping = getKeyboardMapping(gantt);\n\n\tvar eventBus = {};\n\teventable(eventBus);\n\n\tfunction createGridEditors(grid) {\n\n\t\tfunction _getGridCellFromNode(node){\n\t\t\tif(!domHelpers.isChildOf(node, grid.$grid)){\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar row = domHelpers.locateAttribute(node, grid.$config.item_attribute);\n\t\t\tvar cell = domHelpers.locateAttribute(node, \"data-column-name\");\n\t\t\tif(cell){\n\t\t\t\tvar columnName = cell.getAttribute(\"data-column-name\");\n\t\t\t\tvar id = row.getAttribute(grid.$config.item_attribute);\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tcolumnName: columnName\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction _getEditorPosition(itemId, columnName) {\n\t\t\tvar top = grid.getItemTop(itemId);\n\t\t\tvar height = grid.getItemHeight(itemId);\n\t\t\tvar cols = grid.getGridColumns();\n\t\t\tvar left = 0,\n\t\t\t\twidth = 0;\n\n\t\t\tfor (var i = 0; i < cols.length; i++) {\n\t\t\t\tif (cols[i].name == columnName) {\n\t\t\t\t\twidth = cols[i].width;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tleft += cols[i].width;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\theight: height,\n\t\t\t\twidth: width\n\t\t\t};\n\t\t}\n\t\tfunction _createPlaceholder(itemId, columnName) {\n\t\t\tvar pos = _getEditorPosition(itemId, columnName);\n\t\t\tvar el = document.createElement(\"div\");\n\t\t\tel.className = \"gantt_grid_editor_placeholder\";\n\t\t\tel.setAttribute(grid.$config.item_attribute, itemId);\n\t\t\tel.setAttribute(\"data-column-name\", columnName);\n\t\t\tel.setAttribute(\"data-column-index\", grid.getColumnIndex(columnName));\n\n\t\t\tel.style.cssText = [\n\t\t\t\t\"top:\" + pos.top + \"px\",\n\t\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\t\"width:\" + pos.width + \"px\",\n\t\t\t\t\"height:\" + pos.height + \"px\"\n\t\t\t].join(\";\");\n\n\t\t\treturn el;\n\t\t}\n\n\n\t\tvar handlers = [];\n\t\tvar store = null;\n\t\tvar controller = {\n\t\t\t_itemId: null,\n\t\t\t_columnName: null,\n\t\t\t_editor: null,\n\t\t\t_editorType: null,\n\t\t\t_placeholder: null,\n\n\t\t\tlocateCell: _getGridCellFromNode,\n\t\t\tgetEditorConfig: function (columnName) {\n\t\t\t\tvar column = grid.getColumn(columnName);\n\t\t\t\treturn column.editor;\n\t\t\t},\n\n\t\t\tinit: function () {\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.init){\n\t\t\t\t\tmapping.init(this, grid);\n\t\t\t\t}\n\n\t\t\t\tstore = grid.$gantt.getDatastore(grid.$config.bind);\n\n\t\t\t\tvar self = this;\n\n\t\t\t\thandlers.push(store.attachEvent(\"onIdChange\", function(oldId, newId){\n\t\t\t\t\tif(self._itemId == oldId){\n\t\t\t\t\t\tself._itemId = newId;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\thandlers.push(store.attachEvent(\"onStoreUpdated\", function(){\n\t\t\t\t\tif(grid.$gantt.getState(\"batchUpdate\").batch_update){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(self.isVisible() && !store.isVisible(self._itemId)){\n\t\t\t\t\t\tself.hide();\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis.init = function(){};\n\t\t\t},\n\n\t\t\tgetState: function(){\n\t\t\t\treturn {\n\t\t\t\t\teditor: this._editor,\n\t\t\t\t\teditorType: this._editorType,\n\t\t\t\t\tplaceholder: this._placeholder,\n\t\t\t\t\tid: this._itemId,\n\t\t\t\t\tcolumnName: this._columnName\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tstartEdit: function(itemId, columnName) {\n\t\t\t\tif (this.isVisible()) {\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\n\t\t\t\tif(!store.exists(itemId)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar editorState = {id: itemId, columnName: columnName};\n\t\t\t\tif(this.callEvent(\"onBeforeEditStart\", [editorState]) === false){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.show(editorState.id, editorState.columnName);\n\t\t\t\tthis.setValue();\n\n\t\t\t\tthis.callEvent(\"onEditStart\", [editorState]);\n\t\t\t},\n\t\t\tisVisible: function(){\n\t\t\t\treturn !!(this._editor && domHelpers.isChildOf(this._placeholder, document.body));\n\t\t\t},\n\t\t\tshow: function (itemId, columnName) {\n\t\t\t\tif (this.isVisible()) {\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\t\t\t\tvar editorState = {id: itemId, columnName: columnName};\n\n\t\t\t\tvar column = grid.getColumn(editorState.columnName);\n\t\t\t\tvar editorConfig = this.getEditorConfig(column.name);\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar editor = grid.$getConfig().editor_types[editorConfig.type];\n\n\t\t\t\tvar placeholder = _createPlaceholder(editorState.id, editorState.columnName);\n\t\t\t\tgrid.$grid_data.appendChild(placeholder);\n\t\t\t\teditor.show(editorState.id, column, editorConfig, placeholder);\n\t\t\t\tthis._editor = editor;\n\t\t\t\tthis._placeholder = placeholder;\n\t\t\t\tthis._itemId = editorState.id;\n\t\t\t\tthis._columnName = editorState.columnName;\n\t\t\t\tthis._editorType = editorConfig.type;\n\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.onShow){\n\t\t\t\t\tmapping.onShow(this, placeholder, grid);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsetValue: function () {\n\t\t\t\tvar state = this.getState();\n\t\t\t\tvar itemId = state.id,\n\t\t\t\t\tcolumnName = state.columnName;\n\n\t\t\t\tvar column = grid.getColumn(columnName);\n\t\t\t\tvar item = store.getItem(itemId);\n\t\t\t\tvar editorConfig = this.getEditorConfig(columnName);\n\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar value = item[editorConfig.map_to];\n\t\t\t\tif(editorConfig.map_to == \"auto\"){\n\t\t\t\t\tvalue = store.getItem(itemId);\n\t\t\t\t}\n\n\t\t\t\tthis._editor.set_value(value, itemId, column, this._placeholder);\n\t\t\t\tthis.focus();\n\t\t\t},\n\n\t\t\tfocus: function(){\n\t\t\t\tthis._editor.focus(this._placeholder);\n\t\t\t},\n\n\t\t\tgetValue: function () {\n\t\t\t\tvar column = grid.getColumn(this._columnName);\n\t\t\t\treturn this._editor.get_value(this._itemId, column, this._placeholder);\n\t\t\t},\n\n\t\t\t_getItemValue: function() {\n\t\t\t\tvar editorConfig = this.getEditorConfig(this._columnName);\n\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar item = gantt.getTask(this._itemId);\n\t\t\t\tvar value = item[editorConfig.map_to];\n\t\t\t\tif(editorConfig.map_to == \"auto\"){\n\t\t\t\t\tvalue = store.getItem(this._itemId);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\n\t\t\tisChanged: function(){\n\n\t\t\t\tvar column = grid.getColumn(this._columnName);\n\n\t\t\t\tvar value = this._getItemValue();\n\n\t\t\t\treturn this._editor.is_changed(value, this._itemId, column, this._placeholder);\n\t\t\t},\n\n\t\t\thide: function () {\n\t\t\t\tif(!this._itemId)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar itemId = this._itemId,\n\t\t\t\t\tcolumnName = this._columnName;\n\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.onHide){\n\t\t\t\t\tmapping.onHide(this, this._placeholder, grid);\n\t\t\t\t}\n\n\t\t\t\tthis._itemId = null;\n\t\t\t\tthis._columnName = null;\n\t\t\t\tthis._editorType = null;\n\t\t\t\tif (!this._placeholder) return;\n\n\t\t\t\tif (this._editor) {\n\t\t\t\t\tthis._editor.hide(this._placeholder);\n\t\t\t\t}\n\t\t\t\tthis._editor = null;\n\t\t\t\tif (this._placeholder.parentNode) {\n\t\t\t\t\tthis._placeholder.parentNode.removeChild(this._placeholder);\n\t\t\t\t}\n\t\t\t\tthis._placeholder = null;\n\n\t\t\t\tthis.callEvent(\"onEditEnd\", [{id: itemId, columnName: columnName}]);\n\t\t\t},\n\t\t\tsave: function () {\n\t\t\t\tif(!(this.isVisible() && store.exists(this._itemId) && this.isChanged())) {\n\t\t\t\t\tthis.hide();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar itemId = this._itemId,\n\t\t\t\t\tcolumnName = this._columnName;\n\n\t\t\t\tif(!store.exists(itemId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar item = store.getItem(itemId);\n\t\t\t\tvar editorConfig = this.getEditorConfig(columnName);\n\t\t\t\tvar editorState = {\n\t\t\t\t\tid: itemId,\n\t\t\t\t\tcolumnName: columnName,\n\t\t\t\t\tnewValue: this.getValue(),\n\t\t\t\t\toldValue: this._getItemValue()\n\t\t\t\t};\n\t\t\t\tif(this.callEvent(\"onBeforeSave\", [editorState]) !== false) {\n\t\t\t\t\tif(this._editor.is_valid(editorState.newValue, editorState.id, editorState.columnName, this._placeholder)){\n\n\n\t\t\t\t\t\tvar mapTo = editorConfig.map_to;\n\t\t\t\t\t\tvar value = editorState.newValue;\n\t\t\t\t\t\tif (mapTo != \"auto\") {\n\t\t\t\t\t\t\titem[mapTo] = value;\n\t\t\t\t\t\t\tif (mapTo == \"duration\") {\n\t\t\t\t\t\t\t\titem.end_date = gantt.calculateEndDate(item);\n\t\t\t\t\t\t\t} else if (mapTo == \"end_date\") {\n\t\t\t\t\t\t\t\titem.start_date = gantt.calculateEndDate({\n\t\t\t\t\t\t\t\t\tstart_date: item.end_date,\n\t\t\t\t\t\t\t\t\tduration: -item.duration,\n\t\t\t\t\t\t\t\t\ttask: item}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (mapTo == \"start_date\") {\n\t\t\t\t\t\t\t\titem.end_date = gantt.calculateEndDate(item);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstore.updateItem(itemId);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis._editor.save(itemId, grid.getColumn(columnName), this._placeholder);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.callEvent(\"onSave\", [editorState]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hide();\n\t\t\t},\n\n\t\t\t_findEditableCell: function findEditableCell(start, direction){\n\t\t\t\tvar nextIndex = start;\n\t\t\t\tvar columns = grid.getGridColumns();\n\t\t\t\tvar nextColumn = columns[nextIndex];\n\n\t\t\t\tvar columnName = nextColumn ? nextColumn.name : null;\n\t\t\t\tif(columnName){\n\t\t\t\t\twhile(columnName && !this.getEditorConfig(columnName)){\n\t\t\t\t\t\tcolumnName = this._findEditableCell(start + direction, direction);\n\t\t\t\t\t}\n\t\t\t\t\treturn columnName;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\n\t\t\tgetNextCell: function moveCell(dir){\n\t\t\t\treturn this._findEditableCell(grid.getColumnIndex(this._columnName) + dir, dir);\n\t\t\t},\n\n\t\t\tgetFirstCell: function getFirstCell(){\n\t\t\t\treturn this._findEditableCell(0, 1);\n\t\t\t},\n\n\t\t\tgetLastCell: function getLastCell(){\n\t\t\t\treturn this._findEditableCell(grid.getGridColumns().length - 1, -1);\n\t\t\t},\n\n\t\t\teditNextCell: function nextCell(canChangeRow){\n\t\t\t\tvar cell = this.getNextCell(1);\n\t\t\t\tif(cell){\n\t\t\t\t\tvar nextColumn = this.getNextCell(1);\n\t\t\t\t\tif(nextColumn && this.getEditorConfig(nextColumn)){\n\t\t\t\t\t\tthis.startEdit(this._itemId, nextColumn);\n\t\t\t\t\t}\n\t\t\t\t}else if(canChangeRow && this.moveRow(1)){\n\t\t\t\t\tvar task = this.moveRow(1);\n\t\t\t\t\tcell = this.getFirstCell();\n\t\t\t\t\tif(cell && this.getEditorConfig(cell)){\n\t\t\t\t\t\tthis.startEdit(task, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditPrevCell: function prevCell(canChangeRow){\n\t\t\t\tvar cell = this.getNextCell(-1);\n\t\t\t\tif(cell){\n\t\t\t\t\tvar nextColumn = this.getNextCell(-1);\n\t\t\t\t\tif(nextColumn && this.getEditorConfig(nextColumn)){\n\t\t\t\t\t\tthis.startEdit(this._itemId, nextColumn);\n\t\t\t\t\t}\n\t\t\t\t}else if(canChangeRow && this.moveRow(-1)){\n\t\t\t\t\tvar task = this.moveRow(-1);\n\t\t\t\t\tcell = this.getLastCell();\n\t\t\t\t\tif(cell && this.getEditorConfig(cell)){\n\t\t\t\t\t\tthis.startEdit(task, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tmoveRow: function moveRow(dir){\n\t\t\t\tif(dir > 0){\n\t\t\t\t\treturn gantt.getNext(this._itemId);\n\t\t\t\t}else {\n\t\t\t\t\treturn  gantt.getPrev(this._itemId);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditNextRow: function nextRow(){\n\t\t\t\tvar row = this.getNextCell(1);\n\t\t\t\tif(row){\n\t\t\t\t\tthis.startEdit(row, this._columnName);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditPrevRow: function prevRow(){\n\t\t\t\tvar row = this.getNextCell(-1);\n\t\t\t\tif(row){\n\t\t\t\t\tthis.startEdit(row, this._columnName);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdestructor: function(){\n\t\t\t\thandlers.forEach(function(handlerId){\n\t\t\t\t\tstore.detachEvent(handlerId);\n\t\t\t\t});\n\t\t\t\tstore = null;\n\t\t\t\tthis.hide();\n\t\t\t\tthis.detachAllEvents();\n\t\t\t}\n\t\t};\n\n\t\tutils.mixin(controller, keyboardMapping);\n\t\tutils.mixin(controller, eventBus);\n\n\t\treturn controller;\n\t}\n\n\n\tvar inlineEditController = {\n\t\tinit: initConfigs,\n\t\tcreateEditors: createGridEditors\n\t};\n\n\tutils.mixin(inlineEditController, keyboardMapping);\n\tutils.mixin(inlineEditController, eventBus);\n\n\treturn inlineEditController;\n}\n\nmodule.exports = create;", "function createResizer(gantt, grid){\n\treturn {\n\t\tinit: function(){},\n\t\tdoOnRender: function(){}\n\t};\n}\n\nmodule.exports = createResizer;", "var createStaticBgHelper = function(){\n\treturn {\n\t\trender: function(){}\n\t};\n};\n\nmodule.exports = {\n\tcreate: function(){\n\t\treturn createStaticBgHelper();\n\t}\n};\n\n", "var __extends = require(\"../../../utils/extends\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\tenv = require(\"../../../utils/env\"),\n\tCell = require(\"./cell\");\n\nvar ScrollbarCell = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ScrollbarCell, _super);\n\tfunction ScrollbarCell(parent, config, factory, gantt) {\n\n\t\tvar _this = _super.apply(this, arguments) || this;\n\t\tthis.$config = utils.mixin(config, {scroll: \"x\"});\n\t\t_this._scrollHorizontalHandler = utils.bind(_this._scrollHorizontalHandler, _this);\n\t\t_this._scrollVerticalHandler = utils.bind(_this._scrollVerticalHandler, _this);\n\t\t_this._outerScrollVerticalHandler = utils.bind(_this._outerScrollVerticalHandler, _this);\n\t\t_this._outerScrollHorizontalHandler = utils.bind(_this._outerScrollHorizontalHandler, _this);\n\t\t_this._mouseWheelHandler = utils.bind(_this._mouseWheelHandler, _this);\n\n\t\tthis.$config.hidden = true;\n\t\tvar size = gantt.config.scroll_size;\n\n\t\tif(gantt.env.isIE){\n\t\t\t// full element height/width must be bigger than just a browser scrollbar,\n\t\t\t// otherwise the scrollbar element won't be scrolled on click\n\t\t\tsize += 1;\n\t\t}\n\n\t\tif(this._isHorizontal()){\n\t\t\t_this.$config.height = size;\n\t\t\t_this.$parent.$config.height = size;\n\t\t}else{\n\t\t\t_this.$config.width = size;\n\t\t\t_this.$parent.$config.width = size;\n\t\t}\n\n\t\tthis.$config.scrollPosition = 0;\n\n\t\t_this.$name = \"scroller\";\n\t\treturn _this;\n\t}\n\n\tScrollbarCell.prototype.init = function(container){\n\t\tcontainer.innerHTML = this.$toHTML();\n\t\tthis.$view = container.firstChild;\n\n\t\tif(!this.$view){\n\t\t\tthis.init();\n\t\t}\n\t\tif(this._isVertical()){\n\t\t\tthis._initVertical();\n\t\t}else{\n\t\t\tthis._initHorizontal();\n\t\t}\n\t\tthis._initMouseWheel();\n\t\tthis._initLinkedViews();\n\t};\n\n\tScrollbarCell.prototype.$toHTML = function () {\n\t\tvar className = this._isHorizontal() ? \"gantt_hor_scroll\" : \"gantt_ver_scroll\";\n\t\treturn \"<div class='gantt_layout_cell \"+className+\"'><div style='\"+(this._isHorizontal() ? \"width:2000px\" : \"height:2000px\")+\"'></div></div>\";\n\t};\n\n\tScrollbarCell.prototype._getRootParent = function(){\n\t\tvar parent = this.$parent;\n\t\twhile(parent && parent.$parent){\n\t\t\tparent = parent.$parent;\n\t\t}\n\t\tif(parent){\n\t\t\treturn parent;\n\t\t}\n\t};\n\n\n\tfunction eachCell(root, res){\n\t\tres.push(root);\n\t\tif(root.$cells){\n\t\t\tfor(var i = 0; i < root.$cells.length; i++){\n\t\t\t\teachCell(root.$cells[i], res);\n\t\t\t}\n\t\t}\n\t}\n\tScrollbarCell.prototype._eachView = function(){\n\t\tvar res = [];\n\t\teachCell(this._getRootParent(), res);\n\t\treturn res;\n\t};\n\n\tScrollbarCell.prototype._getLinkedViews = function(){\n\t\tvar views = this._eachView();\n\t\tvar res = [];\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].$config && ((this._isVertical() && views[i].$config.scrollY == this.$id) || (this._isHorizontal() && views[i].$config.scrollX == this.$id)) ){\n\t\t\t\tres.push(views[i]);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\n\n\tScrollbarCell.prototype._initHorizontal = function(){\n\t\tthis.$scroll_hor = this.$view;\n\t\tthis.$domEvents.attach(this.$view, \"scroll\", this._scrollHorizontalHandler);\n\n\t};\n\n\tScrollbarCell.prototype._initLinkedViews = function(){\n\t\tvar views = this._getLinkedViews();\n\t\tvar css = this._isVertical() ?\"gantt_layout_outer_scroll gantt_layout_outer_scroll_vertical\" : \"gantt_layout_outer_scroll gantt_layout_outer_scroll_horizontal\";\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\t//views[i].$config.css = [views[i].$config.css || \"\", css].join(\" \");\n\t\t\tdomHelpers.addClassName(views[i].$view || views[i].getNode(), css);\n\t\t}\n\t};\n\n\tScrollbarCell.prototype._initVertical = function(){\n\t\tthis.$scroll_ver = this.$view;\n\t\tthis.$domEvents.attach(this.$view, \"scroll\", this._scrollVerticalHandler);\n\t};\n\n\tScrollbarCell.prototype._updateLinkedViews = function(){\n\t};\n\n\tScrollbarCell.prototype._initMouseWheel = function(){\n\t\tvar ff = env.isFF;\n\t\tif (ff)\n\t\t\tthis.$domEvents.attach(this._getRootParent().$view, \"wheel\", this._mouseWheelHandler);\n\t\telse\n\t\t\tthis.$domEvents.attach(this._getRootParent().$view, \"mousewheel\", this._mouseWheelHandler);\n\t};\n\n\n\n\n\tScrollbarCell.prototype.scrollHorizontally = function(left){\n\t\tif(this._scrolling) return;\n\t\tthis._scrolling = true;\n\n\t\tthis.$scroll_hor.scrollLeft = left;\n\t\tthis.$config.codeScrollLeft = left;\n\t\tleft = this.$scroll_hor.scrollLeft;\n\n\t\tvar views = this._getLinkedViews();\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].scrollTo){\n\t\t\t\tviews[i].scrollTo(left, undefined);\n\t\t\t}\n\t\t}\n\t\tvar oldSize = this.$config.scrollPosition;\n\t\tthis.$config.scrollPosition = left;\n\t\tthis.callEvent(\"onScroll\", [oldSize, left, this.$config.scroll]);\n\t\tthis._scrolling = false;\n\t};\n\tScrollbarCell.prototype.scrollVertically = function(top){\n\t\tif(this._scrolling) return;\n\t\tthis._scrolling = true;\n\n\t\tthis.$scroll_ver.scrollTop = top;\n\t\ttop = this.$scroll_ver.scrollTop;\n\n\t\tvar views = this._getLinkedViews();\n\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].scrollTo){\n\t\t\t\tviews[i].scrollTo(undefined, top);\n\t\t\t}\n\t\t}\n\t\tvar oldSize = this.$config.scrollPosition;\n\t\tthis.$config.scrollPosition = top;\n\t\tthis.callEvent(\"onScroll\", [oldSize, top, this.$config.scroll]);\n\t\tthis._scrolling = false;\n\t};\n\n\tScrollbarCell.prototype._isVertical = function(){\n\t\treturn this.$config.scroll == \"y\";\n\t};\n\tScrollbarCell.prototype._isHorizontal = function(){\n\t\treturn this.$config.scroll == \"x\";\n\t};\n\tScrollbarCell.prototype._scrollHorizontalHandler = function (e) {\n\t\tif(this._isVertical() || this._scrolling){\n\t\t\treturn;\n\t\t}\n\n\t\t//in safari we can catch previous onscroll after setting new value from mouse-wheel event\n\t\t//set delay to prevent value drifiting\n\t\tif ((new Date()) - ( this._wheel_time || 0 ) < 100) return true;\n\t\tif (this.$gantt._touch_scroll_active) return;\n\t\tvar left = this.$scroll_hor.scrollLeft;\n\n\t\tthis.scrollHorizontally(left);\n\n\t\tthis._oldLeft = this.$scroll_hor.scrollLeft;\n\t};\n\tScrollbarCell.prototype._outerScrollHorizontalHandler = function(e){\n\t\tif(this._isVertical()){\n\t\t\treturn;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.show = function(){\n\t\tthis.$parent.show();\n\t};\n\tScrollbarCell.prototype.hide = function(){\n\t\tthis.$parent.hide();\n\t};\n\n\tScrollbarCell.prototype._getScrollSize = function(){\n\t\tvar scrollSize = 0;\n\t\tvar outerSize = 0;\n\t\tvar isHorizontal = this._isHorizontal();\n\n\t\tvar linked = this._getLinkedViews();\n\t\tvar view;\n\t\tvar scrollProperty = isHorizontal ? \"scrollWidth\" : \"scrollHeight\",\n\t\t\tinnerSizeProperty = isHorizontal ? \"contentX\" : \"contentY\";\n\t\tvar outerProperty = isHorizontal ? \"x\" : \"y\";\n\t\tvar offset = this._getScrollOffset();\n\n\t\tfor(var i = 0; i < linked.length; i++){\n\t\t\tview = linked[i];\n\t\t\tif(!(view && view.$content && view.$content.getSize && !view.$config.hidden)) continue;\n\n\t\t\tvar sizes = view.$content.getSize();\n\t\t\tvar cellScrollSize;\n\t\t\tif(sizes.hasOwnProperty(scrollProperty)){\n\t\t\t\tcellScrollSize = sizes[scrollProperty];\n\t\t\t}else{\n\t\t\t\tcellScrollSize = sizes[innerSizeProperty];\n\t\t\t}\n\n\t\t\tif(offset){\n\t\t\t\t// precalculated vertical/horizontal offsets of scrollbar to emulate 4.x look\n\t\t\t\tif(sizes[innerSizeProperty] > sizes[outerProperty] && sizes[innerSizeProperty] > scrollSize && (cellScrollSize > (sizes[outerProperty] - offset + 2))){\n\t\t\t\t\tscrollSize = cellScrollSize + (isHorizontal ? 0 : 2);\n\t\t\t\t\touterSize = sizes[outerProperty];\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tvar nonScrollableSize = Math.max(sizes[innerSizeProperty] - cellScrollSize, 0);\n\t\t\t\tvar scrollableViewPortSize = Math.max(sizes[outerProperty] - nonScrollableSize, 0);\n\t\t\t\tcellScrollSize = cellScrollSize + nonScrollableSize;\n\n\t\t\t\tif(cellScrollSize > scrollableViewPortSize && (cellScrollSize > scrollSize) ){\n\t\t\t\t\t//|| (cellScrollSize === scrollSize && sizes[outerProperty] < outerSize) // same scroll width but smaller scrollable view port\n\n\t\t\t\t\tscrollSize = cellScrollSize;\n\t\t\t\t\touterSize = sizes[outerProperty];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\touterScroll: outerSize,\n\t\t\tinnerScroll: scrollSize\n\t\t};\n\t};\n\n\tScrollbarCell.prototype.scroll = function(position){\n\t\tif(this._isHorizontal()){\n\t\t\tthis.scrollHorizontally(position);\n\t\t}else{\n\t\t\tthis.scrollVertically(position);\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.getScrollState = function(){\n\t\treturn {\n\t\t\tvisible: this.isVisible(),\n\t\t\tdirection: this.$config.scroll,\n\t\t\tsize: this.$config.outerSize,\n\t\t\tscrollSize: this.$config.scrollSize || 0,\n\t\t\tposition: this.$config.scrollPosition || 0\n\t\t};\n\t};\n\n\tScrollbarCell.prototype.setSize = function(width, height){\n\t\t_super.prototype.setSize.apply(this, arguments);\n\n\t\tvar scrollSizes = this._getScrollSize();\n\n\t\tvar ownSize = (this._isVertical() ? height : width) - this._getScrollOffset() + (this._isHorizontal() ? 1 : 0);\n\n\t\tif(scrollSizes.innerScroll && ownSize > scrollSizes.outerScroll){\n\t\t\tscrollSizes.innerScroll += (ownSize - scrollSizes.outerScroll);\n\t\t}\n\t\tthis.$config.scrollSize = scrollSizes.innerScroll;\n\n\t\tthis.$config.width = width;\n\t\tthis.$config.height = height;\n\t\tthis._setScrollSize(scrollSizes.innerScroll);\n\t};\n\n\tScrollbarCell.prototype.isVisible = function(){\n\t\treturn !!(this.$parent && this.$parent.$view.parentNode);\n\t};\n\n\tScrollbarCell.prototype.shouldShow = function(){\n\t\tvar scrollSizes = this._getScrollSize();\n\t\tif(!scrollSizes.innerScroll && (this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn false;\n\t\t}else if(scrollSizes.innerScroll && !(this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.shouldHide = function(){\n\t\tvar scrollSizes = this._getScrollSize();\n\t\tif(!scrollSizes.innerScroll && (this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t};\n\n\n\tScrollbarCell.prototype.toggleVisibility = function(){\n\t\tif(this.shouldHide()){\n\t\t\tthis.hide();\n\t\t}else if(this.shouldShow()){\n\t\t\tthis.show();\n\t\t}\n\t};\n\t\n\tScrollbarCell.prototype._getScaleOffset = function(view){\n\t\tvar offset = 0;\n\t\tif(view && (view.$config.view == \"timeline\" || view.$config.view == \"grid\")){\n\t\t\toffset = view.$content.$getConfig().scale_height;\n\t\t}\n\t\treturn offset;\n\t};\n\n\tScrollbarCell.prototype._getScrollOffset = function(){\n\t\tvar offset = 0;\n\t\tif(this._isVertical()){\n\t\t\tvar parentLayout = this.$parent.$parent;\n\t\t\toffset = Math.max(\n\t\t\t\tthis._getScaleOffset(parentLayout.getPrevSibling(this.$parent.$id)),\n\t\t\t\tthis._getScaleOffset(parentLayout.getNextSibling(this.$parent.$id))\n\t\t\t\t);\n\t\t}else{\n\t\t\tvar linked = this._getLinkedViews();\n\n\t\t\tfor (var i = 0; i < linked.length; i++) {\n\t\t\t\tvar view = linked[i],\n\t\t\t\t\tvparent = view.$parent;\n\t\t\t\tvar cells = vparent.$cells;\n\n\t\t\t\tvar last = cells[cells.length - 1];\n\n\t\t\t\tif (last && last.$config.view == \"scrollbar\" && last.$config.hidden === false) {\n\t\t\t\t\toffset = last.$config.width;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn offset || 0;\n\t};\n\n\tScrollbarCell.prototype._setScrollSize = function(size){\n\t\tvar property = this._isHorizontal() ? \"width\" : \"height\";\n\t\tvar scrollbar = this._isHorizontal() ? this.$scroll_hor : this.$scroll_ver;\n\n\t\tvar offset = this._getScrollOffset();\n\n\t\tvar node = scrollbar.firstChild;\n\n\t\tif(offset){\n\t\t\tif(this._isVertical()){\n\n\t\t\t\tthis.$config.outerSize = (this.$config.height - offset + 3);\n\t\t\t\tscrollbar.style.height = this.$config.outerSize + \"px\";\n\t\t\t\tscrollbar.style.top = (offset-1) + \"px\";\n\t\t\t\tdomHelpers.addClassName(scrollbar, this.$parent._borders.top);\n\t\t\t\tdomHelpers.addClassName(scrollbar.parentNode, \"gantt_task_vscroll\");\n\t\t\t}else{\n\t\t\t\tthis.$config.outerSize = (this.$config.width - offset + 1);\n\t\t\t\tscrollbar.style.width = this.$config.outerSize + \"px\";\n\t\t\t\t//domHelpers.addClassName(scrollbar, this.$parent._borders.right);\n\t\t\t}\n\t\t}else{\n\t\t\tscrollbar.style.top = \"auto\";\n\t\t\tdomHelpers.removeClassName(scrollbar, this.$parent._borders.top);\n\t\t\tdomHelpers.removeClassName(scrollbar.parentNode, \"gantt_task_vscroll\");\n\t\t\tthis.$config.outerSize = this.$config.height;\n\t\t}\n\n\t\tnode.style[property] = size + \"px\";\n\t};\n\n\tScrollbarCell.prototype._scrollVerticalHandler = function (e) {\n\t\tif(this._scrollHorizontalHandler() || this._scrolling){\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.$gantt._touch_scroll_active) return;\n\t\tvar top = this.$scroll_ver.scrollTop;\n\t\tvar prev = this._oldTop;\n\t\tif(top == prev) return;\n\n\t\tthis.scrollVertically(top);\n\n\t\tthis._oldTop = this.$scroll_ver.scrollTop;\n\n\t};\n\tScrollbarCell.prototype._outerScrollVerticalHandler = function(e){\n\t\tif(this._scrollHorizontalHandler()){\n\t\t\treturn;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype._checkWheelTarget = function(targetNode){\n\t\tvar connectedViews = this._getLinkedViews().concat(this);\n\n\t\tfor(var i = 0; i < connectedViews.length; i++){\n\t\t\tvar node = connectedViews[i].$view;\n\t\t\tif(domHelpers.isChildOf(targetNode, node)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tScrollbarCell.prototype._mouseWheelHandler = function(e){\n\t\tvar target = e.target || e.srcElement;\n\n\t\tif(!this._checkWheelTarget(target))\n\t\t\treturn;\n\n\t\tthis._wheel_time = new Date();\n\n\t\tvar res = {};\n\t\tvar ff = env.isFF;\n\t\tvar wx = ff ? (e.deltaX*-20) : e.wheelDeltaX*2;\n\t\tvar wy = ff ? (e.deltaY*-40) : e.wheelDelta;\n\n\t\tif(e.shiftKey && !(e.deltaX || e.wheelDeltaX)){\n\t\t\t// shift+mousewheel for horizontal scroll\n\t\t\twx = wy*2;\n\t\t\twy = 0;\n\t\t}\n\n\t\tif (wx && Math.abs(wx) > Math.abs(wy)){\n\t\t\tif(this._isVertical()){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(res.x) return true;//no horisontal scroll, must not block scrolling\n\t\t\tif(!this.$scroll_hor || !this.$scroll_hor.offsetWidth) return true;\n\n\t\t\tvar dir  = wx/-40;\n\t\t\tvar oldLeft = this._oldLeft;\n\t\t\tvar left = oldLeft+dir*30;\n\t\t\tthis.scrollHorizontally(left);\n\t\t\tthis.$scroll_hor.scrollLeft = left;\n\t\t\t// not block scroll if position hasn't changed\n\t\t\tif(oldLeft == this.$scroll_hor.scrollLeft){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthis._oldLeft = this.$scroll_hor.scrollLeft;\n\t\t} else {\n\t\t\tif(this._isHorizontal()){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(res.y) return true;//no vertical scroll, must not block scrolling\n\t\t\tif(!this.$scroll_ver || !this.$scroll_ver.offsetHeight) return true;\n\n\t\t\tvar dir  = wy/-40;\n\t\t\tif (typeof wy == \"undefined\")\n\t\t\t\tdir = e.detail;\n\n\t\t\tvar oldTop = this._oldTop;\n\t\t\tvar top = this.$scroll_ver.scrollTop+dir*30;\n\n\t\t\t//if(!this.$gantt.config.prevent_default_scroll &&\n\t\t\t//\t(this.$gantt._cached_scroll_pos && ((this.$gantt._cached_scroll_pos.y == top) || (this.$gantt._cached_scroll_pos.y <= 0 && top <= 0)))) return true;\n\n\n\t\t\tthis.scrollVertically(top);\n\t\t\tthis.$scroll_ver.scrollTop = top;\n\n\t\t\t// not block scroll if position hasn't changed\n\t\t\tif(oldTop == this.$scroll_ver.scrollTop){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthis._oldTop = this.$scroll_ver.scrollTop;\n\t\t}\n\n\t\tif (e.preventDefault)\n\t\t\te.preventDefault();\n\t\te.cancelBubble=true;\n\t\treturn false;\n\t};\n\n\treturn ScrollbarCell;\n})(Cell);\n\nmodule.exports = ScrollbarCell;", "module.exports = null;", "var __extends = require(\"../../../utils/extends\"),\n\tutils = require(\"../../../utils/utils\"),\n\tCell = require(\"./cell\");\n\nvar ViewCell = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ViewCell, _super);\n\tfunction ViewCell(parent, config, factory) {\n\n\t\tvar _this = _super.apply(this, arguments) || this;\n\n\t\tif(config.view){\n\t\t\tif(config.id){\n\t\t\t\t// pass id to the nested view\n\t\t\t\tthis.$id = utils.uid();\n\t\t\t}\n\t\t\tvar childConfig = utils.copy(config);\n\t\t\tdelete childConfig.config;\n\t\t\tdelete childConfig.templates;\n\n\t\t\tthis.$content = this.$factory.createView(config.view, this, childConfig, this);\n\t\t\tif(!this.$content)\n\t\t\t\treturn false;\n\t\t}\n\n\t\t_this.$name = \"viewCell\";\n\t\treturn _this;\n\t}\n\n\tViewCell.prototype.destructor = function(){\n\t\tthis.clear();\n\t\t_super.prototype.destructor.call(this);\n\t};\n\n\tViewCell.prototype.clear = function(){\n\n\t\tthis.$initialized = false;\n\n\t\t// call destructor\n\t\tif (this.$content){\n\t\t\tvar method = this.$content.unload || this.$content.destructor;\n\t\t\tif (method){\n\t\t\t\tmethod.call(this.$content);\n\t\t\t}\n\t\t}\n\n\t\t_super.prototype.clear.call(this);\n\n\t};\n\n\tViewCell.prototype.scrollTo = function(left, top){\n\n\t\tif(this.$content && this.$content.scrollTo){\n\t\t\tthis.$content.scrollTo(left, top);\n\t\t}else{\n\t\t\t_super.prototype.scrollTo.call(this, left, top);\n\t\t}\n\t};\n\n\tViewCell.prototype._setContentSize = function(x, y){\n\t\tvar borders = this._getBorderSizes();\n\t\tvar outerX = x + borders.horizontal;\n\t\tvar outerY = y + borders.vertical;\n\t\tthis.$config.width = outerX;\n\t\tthis.$config.height = outerY;\n\t};\n\n\tViewCell.prototype.setSize = function(x, y){\n\t\t_super.prototype.setSize.call(this, x, y);\n\n\t\tif(!this.$preResize && this.$content) {\n\t\t\tif (!this.$initialized) {\n\t\t\t\tthis.$initialized = true;\n\t\t\t\tvar header = this.$view.childNodes[0];\n\t\t\t\tvar content = this.$view.childNodes[1];\n\t\t\t\tif(!content) content = header;\n\n\t\t\t\t/*if(this.$content.$config){\n\t\t\t\t\tthis.$content.$config.width = this.$lastSize.contentX;\n\t\t\t\t\tthis.$content.$config.height = this.$lastSize.contentY;\n\t\t\t\t}*/\n\t\t\t\tthis.$content.init(content);\n\t\t\t}\n\t\t}\n\t};\n\n\tViewCell.prototype.setContentSize = function(){\n\t\tif(!this.$preResize && this.$content) {\n\t\t\tif (this.$initialized) {\n\t\t\t\tthis.$content.setSize(this.$lastSize.contentX, this.$lastSize.contentY);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tViewCell.prototype.getContentSize = function(){\n\t\tvar size = _super.prototype.getContentSize.call(this);\n\n\t\tif(this.$content && this.$initialized){\n\t\t\tvar childSize = this.$content.getSize();\n\t\t\tsize.width = childSize.contentX === undefined ? childSize.width : childSize.contentX;\n\t\t\tsize.height = childSize.contentY === undefined ? childSize.height : childSize.contentY;\n\t\t}\n\n\t\tvar borders = this._getBorderSizes();\n\t\tsize.width += borders.horizontal;\n\t\tsize.height += borders.vertical;\n\n\t\treturn size;\n\t};\n\n\treturn ViewCell;\n}(Cell));\n\nmodule.exports = ViewCell;", "var __extends = require(\"../../../utils/extends\"),\n\tLayout = require(\"./layout\"),\n\tCell = require(\"./cell\");\n\nvar ViewLayout = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ViewLayout, _super);\n\tfunction ViewLayout(parent, config, factory) {\n\t\tvar _this = _super.apply(this, arguments) || this;\n\t\tfor (var i = 0; i < _this.$cells.length; i++) {\n\t\t\t_this.$cells[i].$config.hidden = (i !== 0);\n\t\t}\n\t\t_this.$cell = _this.$cells[0];\n\t\t_this.$name = \"viewLayout\";\n\n\t\treturn _this;\n\t}\n\tViewLayout.prototype.cell = function (id) {\n\t\tvar cell = _super.prototype.cell.call(this, id);\n\t\tif (!cell.$view) {\n\t\t\tthis.$fill(null, this);\n\t\t}\n\t\treturn cell;\n\t};\n\tViewLayout.prototype.moveView = function (view) {\n\t\tvar body = this.$view;\n\t\tif (this.$cell) {\n\t\t\tthis.$cell.$config.hidden = true;\n\t\t\tbody.removeChild(this.$cell.$view);\n\t\t}\n\t\tthis.$cell = view;\n\t\tbody.appendChild(view.$view);\n\t};\n\tViewLayout.prototype.setSize = function (x, y) {\n\t\tCell.prototype.setSize.call(this, x, y);\n\t};\n\n\tViewLayout.prototype.setContentSize = function(){\n\t\tvar size = this.$lastSize;\n\t\tthis.$cell.setSize(size.contentX, size.contentY);\n\t};\n\n\tViewLayout.prototype.getSize = function () {\n\t\tvar sizes = _super.prototype.getSize.call(this);\n\t\tif (this.$cell) {\n\t\t\tvar cellSize = this.$cell.getSize();\n\t\t\tif (this.$config.byMaxSize) {\n\t\t\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\t\t\tvar otherCell = this.$cells[i].getSize();\n\t\t\t\t\tfor (var cell in cellSize) {\n\t\t\t\t\t\tcellSize[cell] = Math.max(cellSize[cell], otherCell[cell]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var size in sizes) {\n\t\t\t\tsizes[size] = sizes[size] || cellSize[size];\n\t\t\t}\n\t\t\tsizes.gravity = Math.max(sizes.gravity, cellSize.gravity);\n\t\t}\n\t\treturn sizes;\n\t};\n\treturn ViewLayout;\n}(Layout));\n\nmodule.exports = ViewLayout;", "var rendererFactory = function(gantt){\n\tvar services = gantt.$services;\n\n\t//hash of dom elements is needed to redraw single bar/link\n\tvar task_area_pulls = {},\n\t\ttask_area_renderers = {};\n\n\tfunction getRenderer(id, layer, node) {\n\n\t\tif (task_area_renderers[id])\n\t\t\treturn task_area_renderers[id];\n\n\t\tif (!layer.renderer)\n\t\t\tgantt.assert(false, \"Invalid renderer call\");\n\n\t\tvar renderOne = function(item){\n\t\t\treturn layer.renderer.call(this, item, layer.host);\n\t\t} ;\n\n\t\tvar filter = layer.filter;\n\n\t\tif (node)\n\t\t\tnode.setAttribute(services.config().layer_attribute, true);\n\n\t\ttask_area_renderers[id] = {\n\t\t\trender_item: function (item, container) {\n\t\t\t\tcontainer = container || node;\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tif (!filter(item)) {\n\t\t\t\t\t\tthis.remove_item(item.id);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar dom = renderOne.call(gantt, item);\n\t\t\t\tthis.append(item, dom, container);\n\n\t\t\t},\n\n\t\t\tclear: function (container) {\n\n\t\t\t\tthis.rendered = task_area_pulls[id] = {};\n\t\t\t\tif(!layer.append)\n\t\t\t\t\tthis.clear_container(container);\n\t\t\t},\n\t\t\tclear_container: function (container) {\n\t\t\t\tcontainer = container || node;\n\t\t\t\tif (container)\n\t\t\t\t\tcontainer.innerHTML = \"\";\n\t\t\t},\n\t\t\trender_items: function (items, container) {\n\t\t\t\tcontainer = container || node;\n\n\t\t\t\tvar buffer = document.createDocumentFragment();\n\t\t\t\tthis.clear(container);\n\t\t\t\tfor (var i = 0, vis = items.length; i < vis; i++) {\n\t\t\t\t\tthis.render_item(items[i], buffer);\n\t\t\t\t}\n\n\t\t\t\tcontainer.appendChild(buffer);\n\t\t\t},\n\t\t\tappend: function (item, node, container) {\n\t\t\t\tif (!node) {\n\t\t\t\t\tif (this.rendered[item.id]) {\n\t\t\t\t\t\tthis.remove_item(item.id);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.rendered[item.id] && this.rendered[item.id].parentNode) {\n\t\t\t\t\tthis.replace_item(item.id, node);\n\t\t\t\t} else {\n\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t}\n\t\t\t\tthis.rendered[item.id] = node;\n\n\t\t\t},\n\t\t\treplace_item: function (item_id, newNode) {\n\t\t\t\tvar item = this.rendered[item_id];\n\t\t\t\tif (item && item.parentNode) {\n\t\t\t\t\titem.parentNode.replaceChild(newNode, item);\n\t\t\t\t}\n\t\t\t\tthis.rendered[item_id] = newNode;\n\t\t\t},\n\t\t\tremove_item: function (item_id) {\n\t\t\t\tthis.hide(item_id);\n\t\t\t\tdelete this.rendered[item_id];\n\t\t\t},\n\t\t\thide: function (item_id) {\n\t\t\t\tvar item = this.rendered[item_id];\n\t\t\t\tif (item && item.parentNode) {\n\t\t\t\t\titem.parentNode.removeChild(item);\n\t\t\t\t}\n\t\t\t},\n\t\t\trestore: function (item) {\n\t\t\t\tvar dom = this.rendered[item.id];\n\t\t\t\tif (dom) {\n\t\t\t\t\tif (!dom.parentNode) {\n\t\t\t\t\t\tthis.append(item, dom, node);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.render_item(item, node);\n\t\t\t\t}\n\t\t\t},\n\t\t\tchange_id: function (oldid, newid) {\n\t\t\t\tthis.rendered[newid] = this.rendered[oldid];\n\t\t\t\tdelete this.rendered[oldid];\n\t\t\t},\n\t\t\trendered: task_area_pulls[id],\n\t\t\tnode: node,\n\t\t\tdestructor: function () {\n\t\t\t\tthis.clear();\n\t\t\t\tdelete task_area_renderers[id];\n\t\t\t\tdelete task_area_pulls[id];\n\t\t\t}\n\t\t};\n\n\t\treturn task_area_renderers[id];\n\t}\n\n\n\tfunction clearRenderers() {\n\t\tfor (var i in task_area_renderers) {\n\t\t\tgetRenderer(i).destructor();\n\t\t}\n\t}\n\n\treturn {\n\t\tgetRenderer: getRenderer,\n\t\tclearRenderers: clearRenderers\n\t};\n\n};\n\nmodule.exports = rendererFactory;", "var renderFactoryProvider = require(\"./render_factory\");\nvar utils = require(\"../../../utils/utils\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar layerFactory = function(gantt){\n\n\tvar renderFactory = renderFactoryProvider(gantt);\n\treturn {\n\tcreateGroup: function (get_container, rel_root, defaultFilters) {\n\n\t\tvar renderGroup = {\n\t\t\ttempCollection: [],\n\t\t\trenderers: {},\n\t\t\tcontainer: get_container,\n\t\t\tfilters: [],\n\t\t\tgetLayers: function () {\n\t\t\t\tthis._add();// add pending layers\n\n\t\t\t\tvar res = [];\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tres.push(this.renderers[i]);\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t},\n\t\t\tgetLayer: function (id) {\n\t\t\t\treturn this.renderers[id];\n\t\t\t},\n\t\t\t_add: function (layer) {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.id = layer.id || utils.uid();\n\t\t\t\t\tthis.tempCollection.push(layer);\n\t\t\t\t}\n\n\t\t\t\tvar container = this.container();\n\n\t\t\t\tvar pending = this.tempCollection;\n\t\t\t\tfor (var i = 0; i < pending.length; i++) {\n\t\t\t\t\tlayer = pending[i];\n\n\t\t\t\t\tif (!this.container() && !(layer && layer.container && domHelpers.isChildOf(layer.container, document.body))) continue;\n\n\t\t\t\t\tvar node = layer.container,\n\t\t\t\t\t\tid = layer.id,\n\t\t\t\t\t\ttopmost = layer.topmost;\n\t\t\t\t\tif (!node.parentNode) {\n\t\t\t\t\t\t//insert on top or below the tasks\n\t\t\t\t\t\tif (topmost) {\n\t\t\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar rel = rel_root ? rel_root() : container.firstChild;\n\t\t\t\t\t\t\tif (rel)\n\t\t\t\t\t\t\t\tcontainer.insertBefore(node, rel);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.renderers[id] = renderFactory.getRenderer(\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tlayer,\n\t\t\t\t\t\tnode\n\t\t\t\t\t);\n\t\t\t\t\tthis.tempCollection.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t},\n\t\t\taddLayer: function (config) {\n\t\t\t\t//config = prepareConfig(config);\n\t\t\t\tif(config){\n\t\t\t\t\tif(typeof config == \"function\"){\n\t\t\t\t\t\tconfig = {renderer: config};\n\t\t\t\t\t}\n\n\t\t\t\t\tif(config.filter === undefined){\n\t\t\t\t\t\tconfig.filter = mergeFilters(defaultFilters || []);\n\t\t\t\t\t}else if(config.filter instanceof Array){\n\t\t\t\t\t\tconfig.filter.push(defaultFilters);\n\t\t\t\t\t\tconfig.filter = mergeFilters(config.filter);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!config.container){\n\t\t\t\t\t\tconfig.container = document.createElement(\"div\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._add(config);\n\t\t\t\treturn (config ? config.id : undefined);\n\t\t\t},\n\t\t\teachLayer: function(code){\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tcode(this.renderers[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tremoveLayer: function (id) {\n\t\t\t\tif(!this.renderers[id])\n\t\t\t\t\treturn;\n\t\t\t\tthis.renderers[id].destructor();\n\t\t\t\tdelete this.renderers[id];\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tthis.renderers[i].destructor();\n\t\t\t\t}\n\t\t\t\tthis.renderers = {};\n\t\t\t}//,\n\t\t\t//prepareConfig: prepareConfig\n\t\t};\n\n\t\tgantt.attachEvent(\"onDestroy\", function(){\n\t\t\trenderGroup.clear();\n\t\t\trenderGroup = null;\n\t\t});\n\n\t\treturn renderGroup;\n\t}\n};};\n\n\nfunction mergeFilters(filter_methods){\n\tif(!(filter_methods instanceof Array)){\n\t\tfilter_methods = Array.prototype.slice.call(arguments, 0);\n\t}\n\n\treturn function(obj){\n\t\tvar res = true;\n\t\tfor(var i = 0, len = filter_methods.length; i < len; i++){\n\t\t\tvar filter_method = filter_methods[i];\n\t\t\tif(filter_method){\n\t\t\t\tres = res && (filter_method(obj.id, obj) !== false);\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t};\n}\n\n\nmodule.exports = layerFactory;\n", "var createLayerFactory = require(\"./render/layer_engine\");\n\nvar createLayerEngine = function(gantt){\n\tvar factory = createLayerFactory(gantt);\n\treturn {\n\t\tgetDataRender: function(name){\n\t\t\treturn gantt.$services.getService(\"layer:\" + name) || null;\n\t\t},\n\t\tcreateDataRender: function(config){\n\t\t\tvar name = config.name,\n\t\t\t\tdefaultContainer = config.defaultContainer,\n\t\t\t\tpreviusSiblingContainer = config.defaultContainerSibling;\n\n\t\t\tvar layers = factory.createGroup(\n\t\t\t\tdefaultContainer,\n\t\t\t\tpreviusSiblingContainer,\n\t\t\t\tfunction(itemId, item){\n\t\t\t\t\tif(layers.filters){\n\t\t\t\t\t\tfor(var i = 0; i < layers.filters.length; i++){\n\t\t\t\t\t\t\tif(layers.filters[i](itemId, item) === false){\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tgantt.$services.setService(\"layer:\" + name, function(){\n\t\t\t\treturn layers;\n\t\t\t});\n\n\t\t\tgantt.attachEvent(\"onGanttReady\", function () {\n\t\t\t\tlayers.addLayer();// init layers on start\n\t\t\t});\n\n\t\t\treturn layers;\n\t\t},\n\t\tinit: function(){\n\t\t\tvar taskLayers = this.createDataRender({\n\t\t\t\tname: \"task\",\n\t\t\t\tdefaultContainer: function(){\n\t\t\t\t\tif(gantt.$task_data){\n\t\t\t\t\t\treturn gantt.$task_data;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_data;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdefaultContainerSibling: function(){\n\t\t\t\t\tif(gantt.$task_links){\n\t\t\t\t\t\treturn gantt.$task_links;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_links;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfilter: function(item){\n\n\t\t\t\t}\n\t\t\t}, gantt);\n\n\t\t\tvar linkLayers = this.createDataRender({\n\t\t\t\tname: \"link\",\n\t\t\t\tdefaultContainer: function(){\n\t\t\t\t\tif(gantt.$task_data){\n\t\t\t\t\t\treturn gantt.$task_data;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, gantt);\n\n\t\t\treturn {\n\t\t\t\taddTaskLayer: function(config){\n\t\t\t\t\treturn taskLayers.addLayer(config);\n\t\t\t\t},\n\n\t\t\t\t/*getTaskLayer: function(id){\n\t\t\t\t\treturn taskLayers.getLayer(id);\n\t\t\t\t},*/\n\n\t\t\t\t_getTaskLayers: function(){\n\t\t\t\t\treturn taskLayers.getLayers();\n\t\t\t\t},\n\t\t\t\tremoveTaskLayer: function(id){\n\t\t\t\t\ttaskLayers.removeLayer(id);\n\t\t\t\t},\n\t\t\t\t/*eachTaskLayer: function(code){\n\t\t\t\t\ttaskLayers.eachLayer(code);\n\t\t\t\t},*/\n\t\t\t\t_clearTaskLayers: function(){\n\t\t\t\t\ttaskLayers.clear();\n\t\t\t\t},\n\t\t\t\taddLinkLayer: function(config){\n\t\t\t\t\treturn linkLayers.addLayer(config);\n\t\t\t\t},\n\t\t\t\t/*getLinkLayer: function(id){\n\t\t\t\t\treturn linkLayers.getLayer(id);\n\t\t\t\t},*/\n\t\t\t\t_getLinkLayers: function(){\n\t\t\t\t\treturn linkLayers.getLayers();\n\t\t\t\t},\n\t\t\t\tremoveLinkLayer: function(id){\n\t\t\t\t\tlinkLayers.removeLayer(id);\n\t\t\t\t},\n\t\t\t\t/*eachLinkLayer: function(code){\n\t\t\t\t\tlinkLayers.eachLayer(code);\n\t\t\t\t},*/\n\t\t\t\t_clearLinkLayers: function(){\n\t\t\t\t\tlinkLayers.clear();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n};\n\nmodule.exports = createLayerEngine;", "var domHelpers = require(\"../../utils/dom_helpers\");\n\nvar createMouseHandler = (function(domHelpers) {\n\treturn function (gantt) {\n\t\tvar eventHandlers = {\n\t\t\t\"click\": {},\n\t\t\t\"doubleclick\": {},\n\t\t\t\"contextMenu\": {}\n\t\t};\n\n\t\tfunction addEventTarget(event, className, handler, root) {\n\t\t\tif(!eventHandlers[event][className]){\n\t\t\t\teventHandlers[event][className] = [];\n\t\t\t}\n\n\t\t\teventHandlers[event][className].push({\n\t\t\t\thandler: handler,\n\t\t\t\troot: root\n\t\t\t});\n\t\t}\n\n\t\tfunction callHandler(eventName, className, root, args) {\n\t\t\tvar handlers = eventHandlers[eventName][className];\n\t\t\tif(handlers){\n\t\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\t\tif(!(root || handlers[i].root) || handlers[i].root === root){\n\t\t\t\t\t\thandlers[i].handler.apply(this, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onClick(e) {\n\t\t\te = e || window.event;\n\t\t\tvar id = gantt.locate(e);\n\n\t\t\tvar handlers = findEventHandlers(e, eventHandlers.click);\n\t\t\tvar res = true;\n\t\t\tif (id !== null) {\n\t\t\t\tres = !gantt.checkEvent(\"onTaskClick\") || gantt.callEvent(\"onTaskClick\", [id, e]);\n\t\t\t} else {\n\t\t\t\tgantt.callEvent(\"onEmptyClick\", [e]);\n\t\t\t}\n\n\t\t\tif (res) {\n\t\t\t\tvar default_action = callEventHandlers(handlers, e, id);\n\t\t\t\tif (!default_action)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (id && gantt.getTask(id) && gantt.config.select_task && !gantt.config.multiselect) {\n\t\t\t\t\tgantt.selectTask(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onContextMenu(e) {\n\t\t\te = e || window.event;\n\t\t\tvar src = e.target || e.srcElement,\n\t\t\t\ttaskId = gantt.locate(src),\n\t\t\t\tlinkId = gantt.locate(src, gantt.config.link_attribute);\n\n\t\t\tvar res = !gantt.checkEvent(\"onContextMenu\") || gantt.callEvent(\"onContextMenu\", [taskId, linkId, e]);\n\t\t\tif (!res) {\n\t\t\t\tif (e.preventDefault)\n\t\t\t\t\te.preventDefault();\n\t\t\t\telse\n\t\t\t\t\te.returnValue = false;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tfunction findEventHandlers(e, hash){\n\t\t\tvar trg = e.target || e.srcElement;\n\t\t\tvar handlers = [];\n\t\t\twhile (trg) {\n\t\t\t\tvar css = domHelpers.getClassName(trg);\n\t\t\t\tif (css) {\n\t\t\t\t\tcss = css.split(\" \");\n\t\t\t\t\tfor (var i = 0; i < css.length; i++) {\n\t\t\t\t\t\tif (!css[i]) continue;\n\t\t\t\t\t\tif (hash[css[i]]) {\n\t\t\t\t\t\t\tvar delegateHandlers = hash[css[i]];\n\n\t\t\t\t\t\t\tfor(var h = 0; h < delegateHandlers.length; h++){\n\t\t\t\t\t\t\t\tif(delegateHandlers[h].root){\n\t\t\t\t\t\t\t\t\tif(!domHelpers.isChildOf(trg, delegateHandlers[h].root)){\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\thandlers.push(delegateHandlers[h].handler);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttrg = trg.parentNode;\n\t\t\t}\n\t\t\treturn handlers;\n\t\t}\n\n\t\tfunction callEventHandlers(handlers, e, id){\n\t\t\tvar res = true;\n\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tvar handlerResult =  handlers[i].call(gantt, e, id, e.target || e.srcElement);\n\t\t\t\tres = res && !(typeof handlerResult != \"undefined\" && handlerResult !== true);\n\t\t\t}\n\n\t\t\treturn res;\n\t\t}\n\n\n\t\tfunction onDoubleClick(e) {\n\t\t\te = e || window.event;\n\t\t\tvar id = gantt.locate(e);\n\n\t\t\tvar handlers = findEventHandlers(e, eventHandlers.doubleclick);\n\t\t\tvar res = !gantt.checkEvent(\"onTaskDblClick\") || gantt.callEvent(\"onTaskDblClick\", [id, e]);\n\t\t\tif (res) {\n\t\t\t\tvar default_action = callEventHandlers(handlers, e, id);\n\t\t\t\tif (!default_action)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (id !== null && gantt.getTask(id)) {\n\t\t\t\t\tif (res && gantt.config.details_on_dblclick) {\n\t\t\t\t\t\tgantt.showLightbox(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onMouseMove(e) {\n\t\t\tif (gantt.checkEvent(\"onMouseMove\")) {\n\t\t\t\tvar id = gantt.locate(e);\n\t\t\t\tgantt._last_move_event = e;\n\t\t\t\tgantt.callEvent(\"onMouseMove\", [id, e]);\n\t\t\t}\n\t\t}\n\n\t\tfunction detach(eventName, className, handler, root) {\n\t\t\tif (eventHandlers[eventName] && eventHandlers[eventName][className]) {\n\t\t\t\tvar handlers = eventHandlers[eventName];\n\t\t\t\tvar elementHandlers = handlers[className];\n\t\t\t\tfor(var i = 0; i < elementHandlers.length; i++){\n\t\t\t\t\tif(elementHandlers[i].root == root){\n\t\t\t\t\t\telementHandlers.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!elementHandlers.length){\n\t\t\t\t\tdelete handlers[className];\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tvar domEvents = gantt._createDomEventScope();\n\n\t\tfunction reset(node){\n\n\t\t\tdomEvents.detachAll();\n\n\t\t\tif(node){\n\t\t\t\tdomEvents.attach(node, \"click\", onClick);\n\t\t\t\tdomEvents.attach(node, \"dblclick\", onDoubleClick);\n\t\t\t\tdomEvents.attach(node, \"mousemove\", onMouseMove);\n\t\t\t\tdomEvents.attach(node, \"contextmenu\", onContextMenu);\n\t\t\t}\n\t\t}\n\n\n\n\t\treturn {\n\t\t\treset: reset,\n\t\t\tglobal: function(event, classname, handler){\n\t\t\t\taddEventTarget(event, classname, handler, null);\n\t\t\t},\n\t\t\tdelegate: addEventTarget,\n\t\t\tdetach: detach,\n\t\t\tcallHandler: callHandler,\n\t\t\tonDoubleClick: onDoubleClick,\n\t\t\tonMouseMove: onMouseMove,\n\t\t\tonContextMenu: onContextMenu,\n\t\t\tonClick: onClick,\n\t\t\tdestructor: function(){\n\t\t\t\treset();\n\t\t\t\teventHandlers = null;\n\t\t\t\tdomEvents = null;\n\t\t\t}\n\n\t\t};\n\t};\n\n})(domHelpers);\n\n\nmodule.exports = {\n\tinit:createMouseHandler\n};", "var utils = require(\"../../utils/utils\");\n\nfunction ViewSettings(config){\n\tutils.mixin(this, config, true);\n}\n\n\nfunction extendSettings (store, parentSettings){\n\tvar own = this.$config[store];\n\n\tif(own){\n\t\tif(own instanceof ViewSettings){\n\t\t\treturn own;\n\t\t}else{\n\t\t\tViewSettings.prototype = parentSettings;\n\t\t\tthis.$config[store] = new ViewSettings(own);\n\t\t\treturn this.$config[store];\n\t\t}\n\t}else{\n\t\treturn parentSettings;\n\t}\n}\n\nvar configurable = function(parentView){\n\tvar parentConfig,\n\t\tparentTemplates;\n\n\treturn {\n\t\t$getConfig: function(){\n\t\t\tif(!parentConfig){\n\t\t\t\tparentConfig = parentView ? parentView.$getConfig() : this.$gantt.config;\n\t\t\t}\n\n\t\t\treturn extendSettings.call(this, \"config\", parentConfig);\n\t\t},\n\t\t$getTemplates: function(){\n\t\t\tif(!parentTemplates){\n\t\t\t\tparentTemplates = parentView ? parentView.$getTemplates() : this.$gantt.templates;\n\t\t\t}\n\n\t\t\treturn extendSettings.call(this, \"templates\", parentTemplates);\n\t\t}\n\t};\n};\n\nmodule.exports = function(obj, parent){\n\tutils.mixin(obj, configurable(parent));\n};", "var utils = require(\"../../utils/utils\"),\n\tconfigurable = require(\"./configurable\");\n\nvar uiFactory = function createFactory(gantt){\n\tvar views = {};\n\n\tfunction ui(cell, parentView) {\n\t\tvar content;\n\t\tvar view = \"cell\";\n\t\tif (cell.view){\n\t\t\tview = \"viewcell\";\n\t\t}else if (cell.resizer) {\n\t\t\tview = \"resizer\";\n\t\t}\n\t\telse if (cell.rows || cell.cols) {\n\t\t\tview = \"layout\";\n\t\t}\n\t\telse if (cell.views) {\n\t\t\tview = \"multiview\";\n\t\t}\n\n\t\tcontent = createView.call(this, view, null, cell, parentView);\n\t\treturn content;\n\t}\n\t\n\tvar createdViews = {};\n\n\tfunction createView(name, parent, config, parentView) {\n\t\tvar creator = views[name];\n\n\t\tif(!creator || !creator.create)\n\t\t\treturn false;\n\n\t\tif(name == \"resizer\" && !config.mode){\n\t\t\tif(parentView.$config.cols){\n\t\t\t\tconfig.mode = \"x\";\n\t\t\t}else{\n\t\t\t\tconfig.mode = \"y\";\n\t\t\t}\n\t\t}\n\n\t\tif(name == \"viewcell\" && config.view == \"scrollbar\" && !config.scroll){\n\t\t\tif(parentView.$config.cols){\n\t\t\t\tconfig.scroll = \"y\";\n\t\t\t}else{\n\t\t\t\tconfig.scroll = \"x\";\n\t\t\t}\n\t\t}\n\n\t\tvar config = utils.copy(config);\n\n\t\tif(!config.id && !createdViews[config.view]){\n\t\t\tconfig.id = config.view;\n\t\t}\n\n\t\tif(config.id && !config.css){\n\t\t\tconfig.css = config.id+\"_cell\";\n\t\t}\n\n\t\tvar view = new creator.create(parent, config, this, gantt);\n\n\t\tif(creator.configure){\n\t\t\tcreator.configure(view);\n\t\t}\n\n\t\tconfigurable(view, parentView);\n\t\tif(!view.$id){\n\t\t\tview.$id = config.id || gantt.uid();\n\t\t}\n\n\t\tif(!view.$parent && typeof parent == \"object\"){\n\t\t\tview.$parent = parent;\n\t\t}\n\t\tif(!view.$config){\n\t\t\tview.$config = config;\n\t\t}\n\n\t\tif(createdViews[view.$id]){\n\t\t\tview.$id = gantt.uid();\n\t\t}\n\n\t\tcreatedViews[view.$id] = view;\n\n\t\treturn view;\n\t}\n\n\tfunction reset(){\n\t\tcreatedViews = {};\n\t}\n\n\tfunction register(name, viewConstructor, configure){\n\t\tviews[name] = {create: viewConstructor, configure: configure};\n\t}\n\n\tfunction getView(id){\n\t\treturn createdViews[id];\n\t}\n\n\tvar factory = {\n\t\tinitUI:ui,\n\t\treset: reset,\n\t\tregisterView: register,\n\t\tcreateView: createView,\n\t\tgetView: getView\n\t};\n\n\treturn factory;\n};\n\nmodule.exports = {\n\tcreateFactory: uiFactory\n};\n\n", "var uiFactory = require(\"./ui_factory\"),\n\tmouseEvents = require(\"./mouse\"),\n\tcreateLayers = require(\"./gantt_layers\"),\n\tCell = require(\"./layout/cell\"),\n\tLayout = require(\"./layout/layout\"),\n\tViewLayout = require(\"./layout/view_layout\"),\n\tViewCell = require(\"./layout/view_cell\"),\n\tResizer = require(\"./layout/resizer_cell\"),\n\tScrollbar = require(\"./layout/scrollbar_cell\"),\n\tTimeline = require(\"./timeline/timeline\"),\n\tGrid = require(\"./grid/grid\"),\n\tResourceGrid = require(\"./grid/resource_grid\"),\n\tResourceTimeline = require(\"./timeline/resource_timeline\"),\n\tResourceHistogram = require(\"./timeline/resource_histogram\");\n\n\nvar gridEditorsFactory = require(\"./grid/editors/controller\");\n\n\nvar renderTaskBar = require(\"./render/task_bar_render\"),\n\trenderSplitTaskBar = require(\"./render/task_split_render\"),\n\trenderTaskBg = require(\"./render/task_bg_render\"),\n\trenderLink = require(\"./render/link_render\"),\n\tgridRenderer = require(\"./render/task_grid_line_render\");\n\nvar mainGridInitializer = require(\"./grid/main_grid_initializer\");\nvar mainTimelineInitializer = require(\"./timeline/main_timeline_initializer\");\nvar mainLayoutInitializer = require(\"./main_layout_initializer\");\n\nfunction initUI(gantt){\n\tfunction attachInitializer(view, initializer){\n\t\tvar ext = initializer(gantt);\n\t\tif(ext.onCreated)\n\t\t\text.onCreated(view);\n\t\tview.attachEvent(\"onReady\", function(){\n\t\t\tif(ext.onInitialized)\n\t\t\t\text.onInitialized(view);\n\t\t});\n\t\tview.attachEvent(\"onDestroy\", function(){\n\t\t\tif(ext.onDestroyed)\n\t\t\t\text.onDestroyed(view);\n\t\t});\n\t}\n\n\tvar factory = uiFactory.createFactory(gantt);\n\tfactory.registerView(\"cell\", Cell);\n\tfactory.registerView(\"resizer\", Resizer);\n\tfactory.registerView(\"scrollbar\", Scrollbar);\n\tfactory.registerView(\"layout\", Layout, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"main\"){\n\t\t\tattachInitializer(view, mainLayoutInitializer);\n\t\t}\n\t});\n\tfactory.registerView(\"viewcell\", ViewCell);\n\tfactory.registerView(\"multiview\", ViewLayout);\n\tfactory.registerView(\"timeline\", Timeline, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"timeline\" || view.$config.bind == \"task\"){\n\t\t\tattachInitializer(view, mainTimelineInitializer);\n\t\t}\n\t});\n\tfactory.registerView(\"grid\", Grid, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"grid\" || view.$config.bind == \"task\"){\n\t\t\tattachInitializer(view, mainGridInitializer);\n\t\t}\n\t});\n\n\tfactory.registerView(\"resourceGrid\", ResourceGrid);\n\tfactory.registerView(\"resourceTimeline\", ResourceTimeline);\n\tfactory.registerView(\"resourceHistogram\", ResourceHistogram);\n\n\tvar layersEngine = createLayers(gantt);\n\n\tvar inlineEditors = gridEditorsFactory(gantt);\n\n\tgantt.ext.inlineEditors = inlineEditors;\n\tgantt.ext._inlineEditors = inlineEditors;\n\tinlineEditors.init(gantt);\n\n\treturn {\n\t\tfactory:factory,\n\t\tmouseEvents: mouseEvents.init(gantt),\n\t\tlayersApi: layersEngine.init(),\n\t\trender:{\n\t\t\tgridLine: gridRenderer(gantt),\n\t\t\ttaskBg: renderTaskBg(gantt),\n\t\t\ttaskBar: renderTaskBar(gantt),\n\t\t\ttaskSplitBar: renderSplitTaskBar(gantt),\n\t\t\tlink: renderLink(gantt)\n\t\t},\n\t\tlayersService: {\n\t\t\tgetDataRender: function(name){\n\t\t\t\treturn layersEngine.getDataRender(name, gantt);\n\t\t\t},\n\t\t\tcreateDataRender: function(config){\n\t\t\t\treturn layersEngine.createDataRender(config, gantt);\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = {\n\tinit: initUI\n};", "var utils = require(\"../utils/utils\");\nvar domHelpers = require(\"../utils/dom_helpers\");\n\nmodule.exports = function(gantt) {\n\n\tvar boxAttribute = \"data-dhxbox\";\n\n\tvar _dhx_msg_cfg = null;\n\n\tfunction callback(config, result) {\n\t\tvar usercall = config.callback;\n\t\tmodalBox.hide(config.box);\n\n\t\t_dhx_msg_cfg = config.box = null;\n\t\tif (usercall)\n\t\t\tusercall(result);\n\t}\n\n\tfunction modal_key(e) {\n\t\tif (_dhx_msg_cfg) {\n\t\t\te = e || event;\n\t\t\tvar code = e.which || event.keyCode;\n\t\t\tvar preventDefault = false;\n\n\t\t\tif (messageBox.keyboard) {\n\t\t\t\tif (code == 13 || code == 32) {\n\t\t\t\t\t// default behavior is to confirm/submit popup on space/enter\n\t\t\t\t\t// if browser focus is set on button element - do button click instead of default behavior\n\t\t\t\t\tvar target = e.target || e.srcElement;\n\t\t\t\t\tif (domHelpers.getClassName(target).indexOf(\"gantt_popup_button\") > -1 && target.click) {\n\t\t\t\t\t\ttarget.click();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(_dhx_msg_cfg, true);\n\t\t\t\t\t\tpreventDefault = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (code == 27) {\n\t\t\t\t\tcallback(_dhx_msg_cfg, false);\n\t\t\t\t\tpreventDefault = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (preventDefault) {\n\t\t\t\tif (e.preventDefault)\n\t\t\t\t\te.preventDefault();\n\t\t\t\treturn !(e.cancelBubble = true);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tgantt.event(document, \"keydown\", modal_key, true);\n\n\tfunction modality(mode) {\n\t\tif (!modality.cover) {\n\t\t\tmodality.cover = document.createElement(\"div\");\n\t\t\t//necessary for IE only\n\t\t\tmodality.cover.onkeydown = modal_key;\n\t\t\tmodality.cover.className = \"dhx_modal_cover\";\n\t\t\tdocument.body.appendChild(modality.cover);\n\t\t}\n\n\t\tmodality.cover.style.display = mode ? \"inline-block\" : \"none\";\n\t}\n\n\tfunction button(text, className, result) {\n\t\tvar buttonAriaAttrs = gantt._waiAria.messageButtonAttrString(text);\n\t\tvar name = className.toLowerCase().replace(/ /g, \"_\");\n\t\tvar button_css = \"gantt_\" + name + \"_button\" + \" dhtmlx_\" + name + \"_button\"; // dhtmlx_ok_button, dhtmlx_click_me_button\n\t\treturn \"<div \" + buttonAriaAttrs + \" class='gantt_popup_button dhtmlx_popup_button \" + button_css + \"' data-result='\" + result + \"' result='\" + result + \"' ><div>\" + text + \"</div></div>\";\n\t}\n\n\tfunction info(text) {\n\t\tif (!messageBox.area) {\n\t\t\tmessageBox.area = document.createElement(\"div\");\n\t\t\tmessageBox.area.className = \"gantt_message_area dhtmlx_message_area\";\n\t\t\tmessageBox.area.style[messageBox.position] = \"5px\";\n\t\t\tdocument.body.appendChild(messageBox.area);\n\t\t}\n\n\t\tmessageBox.hide(text.id);\n\t\tvar message = document.createElement(\"div\");\n\t\tmessage.innerHTML = \"<div>\" + text.text + \"</div>\";\n\t\tmessage.className = \"gantt-info dhtmlx-info gantt-\" + text.type + \" dhtmlx-\" + text.type;\n\t\tmessage.onclick = function () {\n\t\t\tmessageBox.hide(text.id);\n\t\t\ttext = null;\n\t\t};\n\n\t\tgantt._waiAria.messageInfoAttr(message);\n\n\t\tif (messageBox.position == \"bottom\" && messageBox.area.firstChild)\n\t\t\tmessageBox.area.insertBefore(message, messageBox.area.firstChild);\n\t\telse\n\t\t\tmessageBox.area.appendChild(message);\n\n\t\tif (text.expire > 0)\n\t\t\tmessageBox.timers[text.id] = window.setTimeout(function () {\n\t\t\t\tmessageBox.hide(text.id);\n\t\t\t}, text.expire);\n\n\t\tmessageBox.pull[text.id] = message;\n\t\tmessage = null;\n\n\t\treturn text.id;\n\t}\n\n\tfunction getFirstDefined() {\n\t\tvar values = [].slice.apply(arguments, [0]);\n\n\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\tif (values[i]) {\n\t\t\t\treturn values[i];\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction _boxStructure(config, ok, cancel) {\n\t\tvar box = document.createElement(\"div\");\n\n\t\tvar contentId = utils.uid();\n\t\tgantt._waiAria.messageModalAttr(box, contentId);\n\n\n\t\tbox.className = \" gantt_modal_box dhtmlx_modal_box gantt-\" + config.type + \" dhtmlx-\" + config.type;\n\t\tbox.setAttribute(boxAttribute, 1);\n\n\t\tvar inner = '';\n\n\t\tif (config.width)\n\t\t\tbox.style.width = config.width;\n\t\tif (config.height)\n\t\t\tbox.style.height = config.height;\n\t\tif (config.title)\n\t\t\tinner += '<div class=\"gantt_popup_title dhtmlx_popup_title\">' + config.title + '</div>';\n\t\tinner += '<div class=\"gantt_popup_text dhtmlx_popup_text\" id=\"' + contentId + '\"><span>' + (config.content ? '' : config.text) + '</span></div><div  class=\"gantt_popup_controls dhtmlx_popup_controls\">';\n\t\tif (ok)\n\t\t\tinner += button(getFirstDefined(config.ok, gantt.locale.labels.message_ok, \"OK\"), \"ok\", true);\n\t\tif (cancel)\n\t\t\tinner += button(getFirstDefined(config.cancel, gantt.locale.labels.message_cancel, \"Cancel\"), \"cancel\", false);\n\n\t\tif (config.buttons) {\n\t\t\tfor (var i = 0; i < config.buttons.length; i++) {\n\t\t\t\tvar btn = config.buttons[i];\n\t\t\t\tif (typeof btn == \"object\") {\n\t\t\t\t\t// Support { label:\"Save\", css:\"main_button\", value:\"save\" }\n\t\t\t\t\tvar label = btn.label;\n\t\t\t\t\tvar css = btn.css || (\"gantt_\" + btn.label.toLowerCase() + \"_button dhtmlx_\" + btn.label.toLowerCase() + \"_button\");\n\t\t\t\t\tvar value = btn.value || i;\n\t\t\t\t\tinner += button(label, css, value);\n\t\t\t\t} else {\n\t\t\t\t\tinner += button(btn, btn, i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinner += '</div>';\n\t\tbox.innerHTML = inner;\n\n\t\tif (config.content) {\n\t\t\tvar node = config.content;\n\t\t\tif (typeof node == \"string\")\n\t\t\t\tnode = document.getElementById(node);\n\t\t\tif (node.style.display == 'none')\n\t\t\t\tnode.style.display = \"\";\n\t\t\tbox.childNodes[config.title ? 1 : 0].appendChild(node);\n\t\t}\n\n\t\tbox.onclick = function (e) {\n\t\t\te = e || event;\n\t\t\tvar source = e.target || e.srcElement;\n\t\t\tif (!source.className) source = source.parentNode;\n\t\t\tif (source.className.split(\" \")[0] == \"gantt_popup_button\") {\n\t\t\t\tvar result = source.getAttribute(\"data-result\");\n\t\t\t\tresult = (result == \"true\") || (result == \"false\" ? false : result);\n\t\t\t\tcallback(config, result);\n\t\t\t}\n\t\t};\n\t\tconfig.box = box;\n\t\tif (ok || cancel)\n\t\t\t_dhx_msg_cfg = config;\n\n\t\treturn box;\n\t}\n\n\tfunction _createBox(config, ok, cancel) {\n\t\tvar box = config.tagName ? config : _boxStructure(config, ok, cancel);\n\n\t\tif (!config.hidden)\n\t\t\tmodality(true);\n\t\tdocument.body.appendChild(box);\n\t\tvar x = Math.abs(Math.floor(((window.innerWidth || document.documentElement.offsetWidth) - box.offsetWidth) / 2));\n\t\tvar y = Math.abs(Math.floor(((window.innerHeight || document.documentElement.offsetHeight) - box.offsetHeight) / 2));\n\t\tif (config.position == \"top\")\n\t\t\tbox.style.top = \"-3px\";\n\t\telse\n\t\t\tbox.style.top = y + 'px';\n\t\tbox.style.left = x + 'px';\n\t\t//necessary for IE only\n\t\tbox.onkeydown = modal_key;\n\n\t\tmodalBox.focus(box);\n\n\t\tif (config.hidden)\n\t\t\tmodalBox.hide(box);\n\n\t\tgantt.callEvent(\"onMessagePopup\", [box]);\n\t\treturn box;\n\t}\n\n\tfunction alertPopup(config) {\n\t\treturn _createBox(config, true, false);\n\t}\n\n\tfunction confirmPopup(config) {\n\t\treturn _createBox(config, true, true);\n\t}\n\n\tfunction boxPopup(config) {\n\t\treturn _createBox(config);\n\t}\n\n\tfunction box_params(text, type, callback) {\n\t\tif (typeof text != \"object\") {\n\t\t\tif (typeof type == \"function\") {\n\t\t\t\tcallback = type;\n\t\t\t\ttype = \"\";\n\t\t\t}\n\t\t\ttext = {text: text, type: type, callback: callback};\n\t\t}\n\t\treturn text;\n\t}\n\n\tfunction params(text, type, expire, id) {\n\t\tif (typeof text != \"object\")\n\t\t\ttext = {text: text, type: type, expire: expire, id: id};\n\t\ttext.id = text.id || utils.uid();\n\t\ttext.expire = text.expire || messageBox.expire;\n\t\treturn text;\n\t}\n\n\tvar alertBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"confirm\";\n\t\treturn alertPopup(text);\n\t};\n\tvar confirmBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"alert\";\n\t\treturn confirmPopup(text);\n\t};\n\tvar modalBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"alert\";\n\t\treturn boxPopup(text);\n\t};\n\tmodalBox.hide = function (node) {\n\t\twhile (node && node.getAttribute && !node.getAttribute(boxAttribute))\n\t\t\tnode = node.parentNode;\n\t\tif (node) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t\tmodality(false);\n\n\t\t\tgantt.callEvent(\"onAfterMessagePopup\", [node]);\n\t\t}\n\t};\n\n\tmodalBox.focus = function (node) {\n\t\tsetTimeout(function () {\n\t\t\tvar focusable = domHelpers.getFocusableNodes(node);\n\t\t\tif (focusable.length) {\n\t\t\t\tif (focusable[0].focus) focusable[0].focus();\n\t\t\t}\n\t\t}, 1);\n\t};\n\n\tvar messageBox = function (text, type, expire, id) {\n\t\ttext = params.apply(this, arguments);\n\t\ttext.type = text.type || \"info\";\n\n\t\tvar subtype = text.type.split(\"-\")[0];\n\t\tswitch (subtype) {\n\t\t\tcase \"alert\":\n\t\t\t\treturn alertPopup(text);\n\t\t\tcase \"confirm\":\n\t\t\t\treturn confirmPopup(text);\n\t\t\tcase \"modalbox\":\n\t\t\t\treturn boxPopup(text);\n\t\t\tdefault:\n\t\t\t\treturn info(text);\n\t\t}\n\t};\n\n\tmessageBox.seed = (new Date()).valueOf();\n\tmessageBox.uid = utils.uid;\n\tmessageBox.expire = 4000;\n\tmessageBox.keyboard = true;\n\tmessageBox.position = \"top\";\n\tmessageBox.pull = {};\n\tmessageBox.timers = {};\n\n\tmessageBox.hideAll = function () {\n\t\tfor (var key in messageBox.pull)\n\t\t\tmessageBox.hide(key);\n\t};\n\tmessageBox.hide = function (id) {\n\t\tvar obj = messageBox.pull[id];\n\t\tif (obj && obj.parentNode) {\n\t\t\twindow.setTimeout(function () {\n\t\t\t\tobj.parentNode.removeChild(obj);\n\t\t\t\tobj = null;\n\t\t\t}, 2000);\n\t\t\tobj.className += \" hidden\";\n\n\t\t\tif (messageBox.timers[id])\n\t\t\t\twindow.clearTimeout(messageBox.timers[id]);\n\t\t\tdelete messageBox.pull[id];\n\t\t}\n\t};\n\n\tvar popups = [];\n\tgantt.attachEvent(\"onMessagePopup\", function(box){\n\t\tpopups.push(box);\n\t});\n\tgantt.attachEvent(\"onAfterMessagePopup\", function(box){\n\t\tfor(var i = 0; i < popups.length; i++){\n\t\t\tif(popups[i] === box){\n\t\t\t\tpopups.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t});\n\n\tgantt.attachEvent(\"onDestroy\", function(){\n\t\tif(modality.cover && modality.cover.parentNode){\n\t\t\tmodality.cover.parentNode.removeChild(modality.cover);\n\t\t}\n\n\t\tfor(var i = 0; i < popups.length; i++){\n\t\t\tif(popups[i].parentNode){\n\t\t\t\tpopups[i].parentNode.removeChild(popups[i]);\n\t\t\t}\n\t\t}\n\t\tpopups = null;\n\n\t\tif(messageBox.area && messageBox.area.parentNode){\n\t\t\tmessageBox.area.parentNode.removeChild(messageBox.area);\n\t\t}\n\t\tmessageBox = null;\n\t});\n\n\treturn {\n\t\talert: alertBox,\n\t\tconfirm: confirmBox,\n\t\tmessage: messageBox,\n\t\tmodalbox: modalBox\n\t};\n};", "var utils = require(\"./utils\");\n\nfunction createScope(addEvent, removeEvent){\n\taddEvent = addEvent || utils.event;\n\tremoveEvent = removeEvent || utils.eventRemove;\n\n\tvar handlers = [];\n\n\treturn {\n\t\tattach: function(el, event, handler, capture){\n\t\t\thandlers.push({element: el, event:event, callback: handler, capture: capture});\n\t\t\taddEvent(el, event, handler, capture);\n\t\t},\n\t\tdetach: function(el, event, handler, capture){\n\t\t\tremoveEvent(el, event, handler, capture);\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tvar handler = handlers[i];\n\t\t\t\tif(handler.element === el && handler.event === event && handler.callback === handler && handler.capture === capture){\n\t\t\t\t\thandlers.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdetachAll: function(){\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, handlers[i].capture);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, undefined);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, false);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, true);\n\t\t\t}\n\t\t\thandlers = [];\n\t\t},\n\t\textend: function(){\n\t\t\treturn createScope(this.event, this.eventRemove);\n\t\t}\n\t};\n}\n\nmodule.exports = createScope;", "var utils = require(\"../../utils/utils\");\n\nvar StateService = (function(){\n\tvar stateProviders = {};\n\n\tfunction getState(name){\n\t\tif(name){\n\t\t\treturn stateProviders[name].method();\n\t\t}else{\n\t\t\tvar res = {};\n\t\t\tfor(var i in stateProviders){\n\t\t\t\tif(!stateProviders[i].internal)\n\t\t\t\t\tutils.mixin(res, stateProviders[i].method(), true);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tfunction registerProvider(name, provider, internal){\n\t\tstateProviders[name] = { method: provider, internal: internal};\n\t}\n\n\tfunction unregisterProvider(name){\n\t\tdelete stateProviders[name];\n\t}\n\n\treturn {\n\t\tgetState: getState,\n\t\tregisterProvider: registerProvider,\n\t\tunregisterProvider: unregisterProvider\n\t};\n});\n\nmodule.exports = StateService;\n\n", "module.exports = function(gantt) {\n\n\tvar regTemplates = {};\n\n\tfunction initTemplate(name, initial, template_name) {\n\t\ttemplate_name = template_name || name;\n\t\tvar config = gantt.config,\n\t\t\ttemplates = gantt.templates;\n\n\t\tif (gantt.config[name] && regTemplates[template_name] != config[name]) {\n\t\t\tif (!(initial && templates[template_name])) {\n\t\t\t\ttemplates[template_name] = gantt.date.date_to_str(config[name]);\n\t\t\t\tregTemplates[template_name] = config[name];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initTemplates() {\n\t\tvar labels = gantt.locale.labels;\n\t\tlabels.gantt_save_btn = labels.icon_save;\n\t\tlabels.gantt_cancel_btn = labels.icon_cancel;\n\t\tlabels.gantt_delete_btn = labels.icon_delete;\n\n\n\t\tvar date = gantt.date;\n\n\t\t//build configuration based templates\n\t\tvar d = date.date_to_str;\n\t\tvar c = gantt.config;\n\t\tinitTemplate(\"date_scale\", true, undefined, gantt.config, gantt.templates);\n\t\tinitTemplate(\"date_grid\", true, \"grid_date_format\", gantt.config, gantt.templates);\n\t\tinitTemplate(\"task_date\", true, undefined, gantt.config, gantt.templates);\n\n\t\tgantt.mixin(gantt.templates, {\n\t\t\txml_date: date.str_to_date(c.xml_date, c.server_utc),\n\t\t\txml_format: d(c.xml_date, c.server_utc),\n\t\t\tapi_date: date.str_to_date(c.api_date),\n\t\t\tprogress_text: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tgrid_header_class: function (column, config) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\ttask_text: function (start, end, task) {\n\t\t\t\treturn task.text;\n\t\t\t},\n\t\t\ttask_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tgrid_row_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\ttask_row_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\ttask_cell_class: function (item, date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tscale_cell_class: function (date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tscale_row_class: function (date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\tgrid_indent: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_indent'></div>\";\n\t\t\t},\n\t\t\tgrid_folder: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_folder_\" + (item.$open ? \"open\" : \"closed\") + \"'></div>\";\n\t\t\t},\n\t\t\tgrid_file: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_file'></div>\";\n\t\t\t},\n\t\t\tgrid_open: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_\" + (item.$open ? \"close\" : \"open\") + \"'></div>\";\n\t\t\t},\n\t\t\tgrid_blank: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_blank'></div>\";\n\t\t\t},\n\t\t\tdate_grid: function (date, item) {\n\t\t\t\tif (item && gantt.isUnscheduledTask(item) && gantt.config.show_unscheduled) {\n\t\t\t\t\treturn gantt.templates.task_unscheduled_time(item);\n\t\t\t\t} else {\n\t\t\t\t\treturn gantt.templates.grid_date_format(date);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttask_time: function (start, end, ev) {\n\t\t\t\tif (gantt.isUnscheduledTask(ev) && gantt.config.show_unscheduled) {\n\t\t\t\t\treturn gantt.templates.task_unscheduled_time(ev);\n\t\t\t\t} else {\n\t\t\t\t\treturn gantt.templates.task_date(start) + \" - \" + gantt.templates.task_date(end);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttask_unscheduled_time: function (task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\ttime_picker: d(c.time_picker),\n\t\t\tlink_class: function (link) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tlink_description: function (link) {\n\t\t\t\tvar from = gantt.getTask(link.source),\n\t\t\t\t\tto = gantt.getTask(link.target);\n\n\t\t\t\treturn \"<b>\" + from.text + \"</b> &ndash;  <b>\" + to.text + \"</b>\";\n\t\t\t},\n\n\t\t\tdrag_link: function (from, from_start, to, to_start) {\n\t\t\t\tfrom = gantt.getTask(from);\n\t\t\t\tvar labels = gantt.locale.labels;\n\n\t\t\t\tvar text = \"<b>\" + from.text + \"</b> \" + (from_start ? labels.link_start : labels.link_end) + \"<br/>\";\n\t\t\t\tif (to) {\n\t\t\t\t\tto = gantt.getTask(to);\n\t\t\t\t\ttext += \"<b> \" + to.text + \"</b> \" + (to_start ? labels.link_start : labels.link_end) + \"<br/>\";\n\t\t\t\t}\n\t\t\t\treturn text;\n\t\t\t},\n\t\t\tdrag_link_class: function (from, from_start, to, to_start) {\n\t\t\t\tvar add = \"\";\n\n\t\t\t\tif (from && to) {\n\t\t\t\t\tvar allowed = gantt.isLinkAllowed(from, to, from_start, to_start);\n\t\t\t\t\tadd = \" \" + (allowed ? \"gantt_link_allow\" : \"gantt_link_deny\");\n\t\t\t\t}\n\n\t\t\t\treturn \"gantt_link_tooltip\" + add;\n\t\t\t},\n\n\t\t\t/* used for aria-labels of bar elements and for tooltip.js */\n\t\t\ttooltip_date_format: date.date_to_str(\"%Y-%m-%d\"),\n\t\t\ttooltip_text: function (start, end, event) {\n\t\t\t\treturn \"<b>Task:</b> \" + event.text + \"<br/><b>Start date:</b> \" + gantt.templates.tooltip_date_format(start) + \"<br/><b>End date:</b> \" + gantt.templates.tooltip_date_format(end);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tinitTemplates: initTemplates,\n\t\tinitTemplate: initTemplate\n\t};\n\n};", "var eventable = require(\"../../utils/eventable\");\nvar utils = require(\"../../utils/utils\");\nvar timeout = require(\"../../utils/timeout\");\n\nmodule.exports = function(gantt){\n\n\tfunction copyDomEvent(e){\n\t\treturn {\n\t\t\ttarget: e.target || e.srcElement,\n\t\t\tpageX: e.pageX,\n\t\t\tpageY: e.pageY,\n\t\t\tclientX: e.clientX,\n\t\t\tclientY: e.clientY,\n\t\t\tmetaKey: e.metaKey,\n\t\t\tshiftKey: e.shiftKey,\n\t\t\tctrlKey: e.ctrlKey,\n\t\t\taltKey: e.altKey\n\t\t};\n\t}\n\n\tfunction DnD(obj, config) {\n\t\tthis._obj = obj;\n\t\tthis._settings = config || {};\n\t\teventable(this);\n\n\t\tvar inputMethods = this.getInputMethods();\n\n\t\tthis._drag_start_timer = null;\n\t\tgantt.attachEvent(\"onGanttScroll\", utils.bind(function (left, top) {\n\t\t\tthis.clearDragTimer();\n\t\t}, this));\n\n\t\tfor(var i = 0; i < inputMethods.length; i++){\n\t\t\t(utils.bind(function(input){\n\n\t\t\t\tgantt.event(obj, input.down, utils.bind(function (e) {\n\t\t\t\t\tif(!input.accessor(e)){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._settings.original_target = copyDomEvent(e);\n\n\t\t\t\t\tif (gantt.config.touch) {\n\t\t\t\t\t\tthis.clearDragTimer();\n\n\t\t\t\t\t\tthis._drag_start_timer = setTimeout(utils.bind(function () {\n\t\t\t\t\t\t\tthis.dragStart(obj, e, input);\n\t\t\t\t\t\t}, this), gantt.config.touch_drag);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.dragStart(obj, e, input);\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\n\t\t\t\tgantt.event(document.body, input.up, utils.bind(function (e) {\n\t\t\t\t\tif(!input.accessor(e)){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.clearDragTimer();\n\t\t\t\t}, this));\n\n\t\t\t}, this))(inputMethods[i]);\n\t\t}\n\t}\n\n\tDnD.prototype = {\n\t\ttraceDragEvents: function (domElement, inputMethod) {\n\t\t\tvar mousemove = utils.bind(function (e) {\n\t\t\t\treturn this.dragMove(domElement, e, inputMethod.accessor);\n\t\t\t}, this);\n\t\t\tutils.bind(function (e) {\n\t\t\t\treturn this.dragScroll(domElement, e);\n\t\t\t}, this);\n\n\t\t\tvar limited_mousemove = utils.bind(function (e) {\n\t\t\t\tif (e && e.preventDefault) //Cancel default action on DND\n\t\t\t\t\te.preventDefault();\n\t\t\t\t(e || event).cancelBubble = true;\n\t\t\t\tif (utils.defined(this.config.updates_per_second)) {\n\t\t\t\t\tif (!timeout(this, this.config.updates_per_second))\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn mousemove(e);\n\t\t\t}, this);\n\n\t\t\tvar mouseup = utils.bind(function (e) {\n\t\t\t\tgantt.eventRemove(document.body, inputMethod.move, limited_mousemove);\n\t\t\t\tgantt.eventRemove(document.body, inputMethod.up, mouseup);\n\t\t\t\treturn this.dragEnd(domElement);\n\t\t\t}, this);\n\n\t\t\tgantt.event(document.body, inputMethod.move, limited_mousemove);\n\t\t\tgantt.event(document.body, inputMethod.up, mouseup);\n\t\t},\n\t\tcheckPositionChange: function (pos) {\n\t\t\tvar diff_x = pos.x - this.config.pos.x;\n\t\t\tvar diff_y = pos.y - this.config.pos.y;\n\t\t\tvar distance = Math.sqrt(Math.pow(Math.abs(diff_x), 2) + Math.pow(Math.abs(diff_y), 2));\n\n\t\t\tif (distance > this.config.sensitivity) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tinitDnDMarker: function () {\n\t\t\t// create dnd placeholder and put it in dom\n\t\t\tvar marker = this.config.marker = document.createElement(\"div\");\n\t\t\tmarker.className = \"gantt_drag_marker\";\n\t\t\tmarker.innerHTML = \"Dragging object\";\n\t\t\tdocument.body.appendChild(marker);\n\t\t},\n\t\tbackupEventTarget: function (domEvent, getEvent) {\n\t\t\tif (!gantt.config.touch) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// keep original event target in DOM in order to keep dnd on touchmove event\n\t\t\tvar e = getEvent(domEvent);\n\n\t\t\tvar el = e.target || e.srcElement;\n\t\t\tvar copy = el.cloneNode(true);\n\t\t\t//this.config.target.target = copy;\n\t\t\tthis.config.original_target = copyDomEvent(e);\n\t\t\tthis.config.original_target.target = copy;\n\t\t\tthis.config.backup_element = el;\n\t\t\tel.parentNode.appendChild(copy);\n\n\t\t\tel.style.display = \"none\";\n\t\t\tdocument.body.appendChild(el);\n\t\t},\n\t\tgetInputMethods: function () {\n\t\t\t// bind actions to browser events\n\t\t\tvar inputMethods = [];\n\n\t\t\tinputMethods.push({\n\t\t\t\t\"move\": \"mousemove\",\n\t\t\t\t\"down\": \"mousedown\",\n\t\t\t\t\"up\": \"mouseup\",\n\t\t\t\t\"accessor\": function (e) {\n\t\t\t\t\treturn e;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (gantt.config.touch) {\n\n\t\t\t\tvar touchEventsSupported = true;\n\t\t\t\ttry{\n\t\t\t\t\tdocument.createEvent(\"TouchEvent\");\n\t\t\t\t}catch (e){\n\t\t\t\t\ttouchEventsSupported = false;\n\t\t\t\t}\n\n\t\t\t\tif(touchEventsSupported){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"touchmove\",\n\t\t\t\t\t\t\"down\": \"touchstart\",\n\t\t\t\t\t\t\"up\": \"touchend\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.touches && ev.touches.length > 1) return null;\n\t\t\t\t\t\t\tif (ev.touches[0])\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttarget: document.elementFromPoint(ev.touches[0].clientX, ev.touches[0].clientY),\n\t\t\t\t\t\t\t\t\tpageX: ev.touches[0].pageX,\n\t\t\t\t\t\t\t\t\tpageY: ev.touches[0].pageY,\n\t\t\t\t\t\t\t\t\tclientX: ev.touches[0].clientX,\n\t\t\t\t\t\t\t\t\tclientY: ev.touches[0].clientY\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}else if(window.navigator.pointerEnabled){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"pointermove\",\n\t\t\t\t\t\t\"down\": \"pointerdown\",\n\t\t\t\t\t\t\"up\": \"pointerup\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.pointerType == \"mouse\") return null;\n\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}else if (window.navigator.msPointerEnabled){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"MSPointerMove\",\n\t\t\t\t\t\t\"down\": \"MSPointerDown\",\n\t\t\t\t\t\t\"up\": \"MSPointerUp\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE) return null;\n\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn inputMethods;\n\t\t},\n\t\tclearDragTimer: function () {\n\t\t\tif (this._drag_start_timer) {\n\t\t\t\tclearTimeout(this._drag_start_timer);\n\t\t\t\tthis._drag_start_timer = null;\n\t\t\t}\n\t\t},\n\t\tdragStart: function (obj, e, inputMethod) {\n\t\t\tif (this.config && this.config.started) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.config = {\n\t\t\t\tobj: obj,\n\t\t\t\tmarker: null,\n\t\t\t\tstarted: false,\n\t\t\t\tpos: this.getPosition(e),\n\t\t\t\tsensitivity: 4\n\t\t\t};\n\t\t\tif (this._settings)\n\t\t\t\tutils.mixin(this.config, this._settings, true);\n\n\n\t\t\tthis.traceDragEvents(obj, inputMethod);\n\n\t\t\tgantt._prevent_touch_scroll = true;\n\t\t\tdocument.body.className += \" gantt_noselect\";\n\n\t\t\tif (gantt.config.touch) {\n\t\t\t\tthis.dragMove(obj, e, inputMethod.accessor);\n\t\t\t}\n\n\t\t},\n\t\tdragMove: function (obj, e, getEvent) {\n\t\t\tvar source = getEvent(e);\n\t\t\tif (!source) return;\n\n\t\t\tif (!this.config.marker && !this.config.started) {\n\t\t\t\tvar pos = this.getPosition(source);\n\n\t\t\t\tif (gantt.config.touch || this.checkPositionChange(pos)) {\n\t\t\t\t\t// real drag starts here,\n\t\t\t\t\t// when user moves mouse at first time after onmousedown\n\t\t\t\t\tthis.config.started = true;\n\t\t\t\t\tthis.config.ignore = false;\n\t\t\t\t\tif (this.callEvent(\"onBeforeDragStart\", [obj, this.config.original_target]) === false) {\n\t\t\t\t\t\tthis.config.ignore = true;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.backupEventTarget(e, getEvent);\n\t\t\t\t\tthis.initDnDMarker();\n\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t\tthis.callEvent(\"onAfterDragStart\", [obj, this.config.original_target]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.config.ignore = true;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (!this.config.ignore) {\n\t\t\t\tsource.pos = this.getPosition(source);\n\t\t\t\tthis.config.marker.style.left = source.pos.x + \"px\";\n\t\t\t\tthis.config.marker.style.top = source.pos.y + \"px\";\n\t\t\t\tthis.callEvent(\"onDragMove\", [obj, source]);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\tdragEnd: function (obj) {\n\t\t\tvar target = this.config.backup_element;\n\t\t\tif (target && target.parentNode) {\n\t\t\t\ttarget.parentNode.removeChild(target);\n\t\t\t}\n\t\t\tgantt._prevent_touch_scroll = false;\n\t\t\tif (this.config.marker) {\n\t\t\t\tthis.config.marker.parentNode.removeChild(this.config.marker);\n\t\t\t\tthis.config.marker = null;\n\n\t\t\t\tthis.callEvent(\"onDragEnd\", []);\n\t\t\t}\n\t\t\tthis.config.started = false;\n\t\t\tdocument.body.className = document.body.className.replace(\" gantt_noselect\", \"\");\n\t\t},\n\n\t\tgetPosition: function (e) {\n\t\t\tvar x = 0, y = 0;\n\t\t\te = e || window.event;\n\t\t\tif (e.pageX || e.pageY) {\n\t\t\t\tx = e.pageX;\n\t\t\t\ty = e.pageY;\n\t\t\t} else if (e.clientX || e.clientY) {\n\t\t\t\tx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\t\ty = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t\t}\n\t\t\treturn {x: x, y: y};\n\t\t}\n\t};\n\n\treturn DnD;\n};\n", "/*\n %d - the day as a number with a leading zero ( 01 to 31 );\n %j - the day as a number without a leading zero ( 1 to 31 );\n %D - the day as an abbreviation ( Sun to Sat );\n %l - the day as a full name ( Sunday to Saturday );\n %W - the ISO-8601 week number of the year. Weeks start on Monday; 1)\n %m - the month as a number without a leading zero ( 1 to 12 );\n %n - the month as a number with a leading zero ( 01 to 12);\n %M - the month as an abbreviation ( Jan to Dec );\n %F - the month as a full name ( January to December );\n %y - the year as a two-digit number ( 00 to 99 );\n %Y - the year as a four-digit number ( 1900–9999 );\n %h - the hour based on the 12-hour clock ( 00 to 11 );\n %H - the hour based on the 24-hour clock ( 00 to 23 );\n %i - the minute as a number with a leading zero ( 00 to 59 );\n %s - the second as a number without a leading zero ( 00 to 59 ); 2)\n %a - displays am (for times from midnight until noon) and pm (for times from noon until midnight);\n %A - displays AM (for times from midnight until noon) and PM (for times from noon until midnight).\n*/\n\nmodule.exports = function(gantt) {\n\tvar dateHelper = {\n\t\tinit: function () {\n\t\t\tvar locale = gantt.locale;\n\n\t\t\tvar s = locale.date.month_short;\n\t\t\tvar t = locale.date.month_short_hash = {};\n\t\t\tfor (var i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]] = i;\n\n\t\t\tvar s = locale.date.month_full;\n\t\t\tvar t = locale.date.month_full_hash = {};\n\t\t\tfor (var i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]] = i;\n\t\t},\n\t\tdate_part: function (date) {\n\t\t\tvar old = new Date(date);\n\t\t\tdate.setHours(0);\n\t\t\tthis.hour_start(date);\n\t\t\tif (date.getHours() && //shift to yesterday on dst\n\t\t\t\t(date.getDate() < old.getDate() || date.getMonth() < old.getMonth() || date.getFullYear() < old.getFullYear()))\n\t\t\t\tdate.setTime(date.getTime() + 60 * 60 * 1000 * (24 - date.getHours()));\n\t\t\treturn date;\n\t\t},\n\t\ttime_part: function (date) {\n\t\t\treturn (date.valueOf() / 1000 - date.getTimezoneOffset() * 60) % 86400;\n\t\t},\n\t\tweek_start: function (date) {\n\t\t\tvar shift = date.getDay();\n\t\t\tif (gantt.config.start_on_monday) {\n\t\t\t\tif (shift === 0) shift = 6;\n\t\t\t\telse shift--;\n\t\t\t}\n\t\t\treturn this.date_part(this.add(date, -1 * shift, \"day\"));\n\t\t},\n\t\tmonth_start: function (date) {\n\t\t\tdate.setDate(1);\n\t\t\treturn this.date_part(date);\n\t\t},\n\t\tquarter_start: function (date) {\n\t\t\tthis.month_start(date);\n\t\t\tvar m = date.getMonth(),\n\t\t\t\tres_month;\n\n\t\t\tif (m >= 9) {\n\t\t\t\tres_month = 9;\n\t\t\t} else if (m >= 6) {\n\t\t\t\tres_month = 6;\n\t\t\t} else if (m >= 3) {\n\t\t\t\tres_month = 3;\n\t\t\t} else {\n\t\t\t\tres_month = 0;\n\t\t\t}\n\n\t\t\tdate.setMonth(res_month);\n\t\t\treturn date;\n\t\t},\n\t\tyear_start: function (date) {\n\t\t\tdate.setMonth(0);\n\t\t\treturn this.month_start(date);\n\t\t},\n\t\tday_start: function (date) {\n\t\t\treturn this.date_part(date);\n\t\t},\n\t\thour_start: function (date) {\n\t\t\tif (date.getMinutes())\n\t\t\t\tdate.setMinutes(0);\n\t\t\tthis.minute_start(date);\n\n\t\t\treturn date;\n\t\t},\n\t\tminute_start: function (date) {\n\t\t\tif (date.getSeconds())\n\t\t\t\tdate.setSeconds(0);\n\t\t\tif (date.getMilliseconds())\n\t\t\t\tdate.setMilliseconds(0);\n\t\t\treturn date;\n\t\t},\n\t\t_add_days: function (date, inc) {\n\t\t\tvar ndate = new Date(date.valueOf());\n\n\t\t\tndate.setDate(ndate.getDate() + inc);\n\t\t\tif (inc >= 0 && (!date.getHours() && ndate.getHours()) &&//shift to yesterday on dst\n\t\t\t\t(ndate.getDate() <= date.getDate() || ndate.getMonth() < date.getMonth() || ndate.getFullYear() < date.getFullYear()))\n\t\t\t\tndate.setTime(ndate.getTime() + 60 * 60 * 1000 * (24 - ndate.getHours()));\n\t\t\treturn ndate;\n\t\t},\n\n\t\tadd: function (date, inc, mode) {\n\t\t\t/*jsl:ignore*/\n\t\t\tvar ndate = new Date(date.valueOf());\n\t\t\tswitch (mode) {\n\t\t\t\tcase \"day\":\n\t\t\t\t\tndate = this._add_days(ndate, inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"week\":\n\t\t\t\t\tndate = this._add_days(ndate, inc * 7);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"month\":\n\t\t\t\t\tndate.setMonth(ndate.getMonth() + inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"year\":\n\t\t\t\t\tndate.setYear(ndate.getFullYear() + inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hour\":\n\t\t\t\t\t/*\n\t\t\t\t\t\tadding hours/minutes via setHour(getHour() + inc) gives weird result when\n\t\t\t\t\t\tadding one hour to the time before switch to a Daylight Saving time\n\n\t\t\t\t\t\texample: //Sun Mar 30 2014 01:00:00 GMT+0100 (W. Europe Standard Time)\n\t\t\t\t\t\tnew Date(2014, 02, 30, 1).setHours(2)\n\t\t\t\t\t\t>>Sun Mar 30 2014 01:00:00 GMT+0100 (W. Europe Standard Time)\n\n\t\t\t\t\t\tsetTime seems working as expected\n\t\t\t\t\t */\n\t\t\t\t\tndate.setTime(ndate.getTime() + inc * 60 * 60 * 1000);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"minute\":\n\n\t\t\t\t\tndate.setTime(ndate.getTime() + inc * 60 * 1000);\n\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn this[\"add_\" + mode](date, inc, mode);\n\t\t\t}\n\t\t\treturn ndate;\n\t\t\t/*jsl:end*/\n\t\t},\n\t\tadd_quarter: function (date, inc) {\n\t\t\treturn this.add(date, inc * 3, \"month\");\n\t\t},\n\n\t\tto_fixed: function (num) {\n\t\t\tif (num < 10) return \"0\" + num;\n\t\t\treturn num;\n\t\t},\n\t\tcopy: function (date) {\n\t\t\treturn new Date(date.valueOf());\n\t\t},\n\t\tdate_to_str: function (format, utc) {\n\t\t\tformat = format.replace(/%[a-zA-Z]/g, function (a) {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase \"%d\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getDate())+\\\"\";\n\t\t\t\t\tcase \"%m\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed((date.getMonth()+1))+\\\"\";\n\t\t\t\t\tcase \"%j\":\n\t\t\t\t\t\treturn \"\\\"+date.getDate()+\\\"\";\n\t\t\t\t\tcase \"%n\":\n\t\t\t\t\t\treturn \"\\\"+(date.getMonth()+1)+\\\"\";\n\t\t\t\t\tcase \"%y\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getFullYear()%100)+\\\"\";\n\t\t\t\t\tcase \"%Y\":\n\t\t\t\t\t\treturn \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\t\tcase \"%D\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.day_short[date.getDay()]+\\\"\";\n\t\t\t\t\tcase \"%l\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.day_full[date.getDay()]+\\\"\";\n\t\t\t\t\tcase \"%M\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.month_short[date.getMonth()]+\\\"\";\n\t\t\t\t\tcase \"%F\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.month_full[date.getMonth()]+\\\"\";\n\t\t\t\t\tcase \"%h\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\t\tcase \"%g\":\n\t\t\t\t\t\treturn \"\\\"+((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\t\tcase \"%G\":\n\t\t\t\t\t\treturn \"\\\"+date.getHours()+\\\"\";\n\t\t\t\t\tcase \"%H\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getHours())+\\\"\";\n\t\t\t\t\tcase \"%i\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getMinutes())+\\\"\";\n\t\t\t\t\tcase \"%a\":\n\t\t\t\t\t\treturn \"\\\"+(date.getHours()>11?\\\"pm\\\":\\\"am\\\")+\\\"\";\n\t\t\t\t\tcase \"%A\":\n\t\t\t\t\t\treturn \"\\\"+(date.getHours()>11?\\\"PM\\\":\\\"AM\\\")+\\\"\";\n\t\t\t\t\tcase \"%s\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getSeconds())+\\\"\";\n\t\t\t\t\tcase \"%W\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(getISOWeek(date))+\\\"\";\n\t\t\t\t\tcase \"%w\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(getWeek(date))+\\\"\";\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (utc) format = format.replace(/date\\.get/g, \"date.getUTC\");\n\t\t\tvar dateToStr = new Function(\"date\", \"to_fixed\", \"locale\", \"getISOWeek\", \"getWeek\", \"return \\\"\" + format + \"\\\";\");\n\n\t\t\treturn function (date) {\n\t\t\t\treturn dateToStr(date, dateHelper.to_fixed, gantt.locale, dateHelper.getISOWeek, dateHelper.getWeek);\n\t\t\t};\n\t\t},\n\t\tstr_to_date: function (format, utc) {\n\t\t\tvar splt = \"var temp=date.match(/[a-zA-Z]+|[0-9]+/g);\";\n\t\t\tvar mask = format.match(/%[a-zA-Z]/g);\n\t\t\tfor (var i = 0; i < mask.length; i++) {\n\t\t\t\tswitch (mask[i]) {\n\t\t\t\t\tcase \"%j\":\n\t\t\t\t\tcase \"%d\":\n\t\t\t\t\t\tsplt += \"set[2]=temp[\" + i + \"]||1;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%n\":\n\t\t\t\t\tcase \"%m\":\n\t\t\t\t\t\tsplt += \"set[1]=(temp[\" + i + \"]||1)-1;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%y\":\n\t\t\t\t\t\tsplt += \"set[0]=temp[\" + i + \"]*1+(temp[\" + i + \"]>50?1900:2000);\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%g\":\n\t\t\t\t\tcase \"%G\":\n\t\t\t\t\tcase \"%h\":\n\t\t\t\t\tcase \"%H\":\n\t\t\t\t\t\tsplt += \"set[3]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%i\":\n\t\t\t\t\t\tsplt += \"set[4]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%Y\":\n\t\t\t\t\t\tsplt += \"set[0]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%a\":\n\t\t\t\t\tcase \"%A\":\n\t\t\t\t\t\tsplt += \"set[3]=set[3]%12+((temp[\" + i + \"]||'').toLowerCase()=='am'?0:12);\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%s\":\n\t\t\t\t\t\tsplt += \"set[5]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%M\":\n\t\t\t\t\t\tsplt += \"set[1]=locale.date.month_short_hash[temp[\" + i + \"]]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%F\":\n\t\t\t\t\t\tsplt += \"set[1]=locale.date.month_full_hash[temp[\" + i + \"]]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar code = \"set[0],set[1],set[2],set[3],set[4],set[5]\";\n\t\t\tif (utc) code = \" Date.UTC(\" + code + \")\";\n\t\t\tvar strToDate = new Function(\"date\", \"locale\", \"var set=[0,0,1,0,0,0]; \" + splt + \" return new Date(\" + code + \");\");\n\n\t\t\treturn function (dateString) {\n\t\t\t\treturn strToDate(dateString, gantt.locale);\n\t\t\t};\n\t\t},\n\t\tgetISOWeek: function (ndate) {\n\t\t\treturn gantt.date._getWeekNumber(ndate, true);\n\t\t},\n\t\t_getWeekNumber: function(ndate, isoWeek){\n\t\t\tif (!ndate) return false;\n\t\t\tvar nday = ndate.getDay();\n\t\t\tif(isoWeek){\n\t\t\t\tif (nday === 0) {\n\t\t\t\t\tnday = 7;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar first_thursday = new Date(ndate.valueOf());\n\t\t\tfirst_thursday.setDate(ndate.getDate() + (4 - nday));\n\t\t\tvar year_number = first_thursday.getFullYear(); // year of the first Thursday\n\t\t\tvar ordinal_date = Math.round((first_thursday.getTime() - new Date(year_number, 0, 1).getTime()) / 86400000); //ordinal date of the first Thursday - 1 (so not really ordinal date)\n\t\t\tvar week_number = 1 + Math.floor(ordinal_date / 7);\n\t\t\treturn week_number;\n\t\t},\n\n\t\tgetWeek: function(ndate){\n\t\t\treturn gantt.date._getWeekNumber(ndate, gantt.config.start_on_monday);\n\t\t},\n\t\tgetUTCISOWeek: function (ndate) {\n\t\t\treturn gantt.date.getISOWeek(ndate);\n\t\t},\n\t\tconvert_to_utc: function (date) {\n\t\t\treturn new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n\t\t},\n\t\tparseDate: function (date, format) {\n\t\t\t// raw date may be of type string, number (timestamp) or something else\n\t\t\t// do not check for instanceof Date explicitly, since we may swap native date with different date implementation at some point\n\t\t\tif (date && !date.getFullYear) {\n\t\t\t\tif (gantt.defined(format)) {\n\t\t\t\t\tif (typeof(format) == \"string\")\n\t\t\t\t\t\tformat = gantt.defined(gantt.templates[format]) ? gantt.templates[format] : gantt.date.str_to_date(format);\n\t\t\t\t\telse\n\t\t\t\t\t\tformat = gantt.templates.xml_date;\n\t\t\t\t}\n\t\t\t\tif (date)\n\t\t\t\t\tdate = format(date);\n\t\t\t\telse\n\t\t\t\t\tdate = null;\n\t\t\t}\n\t\t\treturn date;\n\t\t}\n\t};\n\treturn dateHelper;\n};", "var env = require(\"../../utils/env\");\n\nmodule.exports = function(gantt){\n\treturn {\n\n\t\t// if false - dhxr param will added to prevent caching on client side (default),\n\t\t// if true - do not add extra params\n\t\tcache: true,\n\n\t\t// default method for load/loadStruct, post/get allowed\n\t\t// get - since 4.1.1, this should fix 412 error for macos safari\n\t\tmethod: \"get\",\n\n\t\tparse: function(data) {\n\t\t\tif (typeof data !== \"string\") return data;\n\n\t\t\tvar obj;\n\t\t\tdata = data.replace(/^[\\s]+/,\"\");\n\t\t\tif (window.DOMParser && !env.isIE) { // ff,ie9\n\t\t\t\tobj = (new window.DOMParser()).parseFromString(data, \"text/xml\");\n\t\t\t} else if (window.ActiveXObject !== window.undefined) {\n\t\t\t\tobj = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n\t\t\t\tobj.async = \"false\";\n\t\t\t\tobj.loadXML(data);\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\t\txmltop: function(tagname, xhr, obj) {\n\t\t\tif (typeof xhr.status == \"undefined\" || xhr.status < 400) {\n\t\t\t\tvar xml = (!xhr.responseXML) ? this.parse(xhr.responseText || xhr) : (xhr.responseXML || xhr);\n\t\t\t\tif (xml && xml.documentElement !== null && !xml.getElementsByTagName(\"parsererror\").length) {\n\t\t\t\t\treturn xml.getElementsByTagName(tagname)[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (obj !== -1) gantt.callEvent(\"onLoadXMLError\",[\"Incorrect XML\", arguments[1], obj]);\n\t\t\treturn document.createElement(\"DIV\");\n\t\t},\n\t\txpath: function(xpathExp, docObj) {\n\t\t\tif (!docObj.nodeName) docObj = docObj.responseXML || docObj;\n\t\t\tif (env.isIE) {\n\t\t\t\treturn docObj.selectNodes(xpathExp)||[];\n\t\t\t} else {\n\t\t\t\tvar rows = [];\n\t\t\t\tvar first;\n\t\t\t\tvar col = (docObj.ownerDocument||docObj).evaluate(xpathExp, docObj, null, XPathResult.ANY_TYPE, null);\n\n\t\t\t\twhile (true){\n\t\t\t\t\tfirst = col.iterateNext();\n\t\t\t\t\tif(first){\n\t\t\t\t\t\trows.push(first);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn rows;\n\t\t\t}\n\t\t},\n\t\tquery: function(config) {\n\t\t\tthis._call(\n\t\t\t\t(config.method || \"GET\"),\n\t\t\t\tconfig.url,\n\t\t\t\tconfig.data || \"\",\n\t\t\t\t(config.async || true),\n\t\t\t\tconfig.callback,\n\t\t\t\tnull,\n\t\t\t\tconfig.headers\n\t\t\t);\n\t\t},\n\t\tget: function(url, onLoad) {\n\t\t\tthis._call(\"GET\", url, null, true, onLoad);\n\t\t},\n\t\tgetSync: function(url) {\n\t\t\treturn this._call(\"GET\", url, null, false);\n\t\t},\n\t\tput: function(url, postData, onLoad) {\n\t\t\tthis._call(\"PUT\", url, postData, true, onLoad);\n\t\t},\n\t\tdel: function(url, postData, onLoad) {\n\t\t\tthis._call(\"DELETE\", url, postData, true, onLoad);\n\t\t},\n\t\tpost: function(url, postData, onLoad) {\n\t\t\tif (arguments.length == 1) {\n\t\t\t\tpostData = \"\";\n\t\t\t} else if (arguments.length == 2 && (typeof(postData) == \"function\" || typeof(window[postData]) == \"function\")) {\n\t\t\t\tonLoad = postData;\n\t\t\t\tpostData = \"\";\n\t\t\t} else {\n\t\t\t\tpostData = String(postData);\n\t\t\t}\n\t\t\tthis._call(\"POST\", url, postData, true, onLoad);\n\t\t},\n\t\tpostSync: function(url, postData) {\n\t\t\tpostData = (postData === null ? \"\" : String(postData));\n\t\t\treturn this._call(\"POST\", url, postData, false);\n\t\t},\n\t\tgetLong: function(url, onLoad) {\n\t\t\tthis._call(\"GET\", url, null, true, onLoad, {url:url});\n\t\t},\n\t\tpostLong: function(url, postData, onLoad) {\n\t\t\tif (arguments.length == 2 && (typeof(postData) == \"function\" || typeof(window[postData]))) {\n\t\t\t\tonLoad = postData;\n\t\t\t\tpostData = \"\";\n\t\t\t}\n\t\t\tthis._call(\"POST\", url, postData, true, onLoad, {url:url, postData:postData});\n\t\t},\n\t\t_call: function(method, url, postData, async, onLoad, longParams, headers) {\n\n\t\t\tvar t = (window.XMLHttpRequest && !env.isIE ? new XMLHttpRequest() : new window.ActiveXObject(\"Microsoft.XMLHTTP\"));\n\t\t\tvar isQt = (navigator.userAgent.match(/AppleWebKit/) !== null && navigator.userAgent.match(/Qt/) !== null && navigator.userAgent.match(/Safari/) !== null);\n\n\t\t\tif (!!async) {\n\t\t\t\tt.onreadystatechange = function() {\n\t\t\t\t\tif ((t.readyState == 4) || (isQt && t.readyState == 3)) { // what for long response and status 404?\n\t\t\t\t\t\tif (t.status != 200 || t.responseText === \"\")\n\t\t\t\t\t\t\tif (!gantt.callEvent(\"onAjaxError\", [t])) return;\n\n\t\t\t\t\t\twindow.setTimeout(function(){\n\t\t\t\t\t\t\tif (typeof(onLoad) == \"function\") {\n\t\t\t\t\t\t\t\tonLoad.apply(window, [{xmlDoc:t, filePath:url}]); // dhtmlx-compat, response.xmlDoc.responseXML/responseText\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (longParams) {\n\t\t\t\t\t\t\t\tif (typeof(longParams.postData) != \"undefined\") {\n\t\t\t\t\t\t\t\t\tthis.postLong(longParams.url, longParams.postData, onLoad);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.getLong(longParams.url, onLoad);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonLoad = null;\n\t\t\t\t\t\t\tt = null;\n\t\t\t\t\t\t},1);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (method == \"GET\" && !this.cache) {\n\t\t\t\turl += (url.indexOf(\"?\")>=0?\"&\":\"?\")+\"dhxr\"+new Date().getTime()+\"=1\";\n\t\t\t}\n\n\t\t\tt.open(method, url, async);\n\n\t\t\tif (headers){\n\t\t\t\tfor (var key in headers)\n\t\t\t\t\tt.setRequestHeader(key, headers[key]);\n\t\t\t} else if (method.toUpperCase() == \"POST\" || method == \"PUT\" || method == \"DELETE\") {\n\t\t\t\tt.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\t\t} else if (method == \"GET\") {\n\t\t\t\tpostData = null;\n\t\t\t}\n\n\t\t\tt.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t\t\tt.send(postData);\n\n\t\t\tif (!async) return {xmlDoc:t, filePath:url}; // dhtmlx-compat, response.xmlDoc.responseXML/responseText\n\n\t\t},\n\t\turlSeparator: function(str){\n\t\t\tif (str.indexOf(\"?\") != -1)\n\t\t\t\treturn \"&\";\n\t\t\telse\n\t\t\t\treturn \"?\";\n\t\t}\n\t};\n};\n", "module.exports = function() {\n\treturn {\n\t\tlayout: {\n\t\t\tcss: \"gantt_container\",\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tcols: [\n\t\t\t\t\t\t{view: \"grid\", scrollX: \"scrollHor\", scrollY: \"scrollVer\"},\n\t\t\t\t\t\t{resizer: true, width: 1},\n\t\t\t\t\t\t{view: \"timeline\", scrollX: \"scrollHor\", scrollY: \"scrollVer\"},\n\t\t\t\t\t\t{view: \"scrollbar\", id: \"scrollVer\"}\n\t\t\t\t\t]\n\n\t\t\t\t},\n\t\t\t\t{view: \"scrollbar\", id: \"scrollHor\", height: 20}\n\t\t\t]\n\t\t},\n\t\tlinks: {\n\t\t\t\"finish_to_start\": \"0\",\n\t\t\t\"start_to_start\": \"1\",\n\t\t\t\"finish_to_finish\": \"2\",\n\t\t\t\"start_to_finish\": \"3\"\n\t\t},\n\t\ttypes: {\n\t\t\t'task': 'task',\n\t\t\t'project': 'project',\n\t\t\t'milestone': 'milestone'\n\t\t},\n\t\tauto_types: false,\n\t\tduration_unit: \"day\",\n\t\twork_time: false,\n\t\tcorrect_work_time: false,\n\t\tskip_off_time: false,\n\n\t\tcascade_delete: true,\n\n\t\tautosize: false,\n\t\tautosize_min_width: 0,\n\t\tautoscroll: true,\n\t\tautoscroll_speed: 30,\n\n\t\tshow_links: true,\n\t\tshow_task_cells: true,\n\t\t// replace backgroung of the task area with a canvas img\n\t\tstatic_background: false,\n\t\tbranch_loading: false,\n\t\tbranch_loading_property: \"$has_child\",\n\t\tshow_loading: false,\n\t\tshow_chart: true,\n\t\tshow_grid: true,\n\t\tmin_duration: 60 * 60 * 1000,\n\t\txml_date: \"%d-%m-%Y %H:%i\",\n\t\tapi_date: \"%d-%m-%Y %H:%i\",\n\t\tstart_on_monday: true,\n\t\tserver_utc: false,\n\t\tshow_progress: true,\n\t\tfit_tasks: false,\n\t\tselect_task: true,\n\t\tscroll_on_click: true,\n\t\tpreserve_scroll: true,\n\t\treadonly: false,\n\n\t\t/*grid */\n\t\tdate_grid: \"%Y-%m-%d\",\n\n\t\tdrag_links: true,\n\t\tdrag_progress: true,\n\t\tdrag_resize: true,\n\t\tdrag_project: false,\n\t\tdrag_move: true,\n\t\tdrag_mode: {\n\t\t\t\"resize\": \"resize\",\n\t\t\t\"progress\": \"progress\",\n\t\t\t\"move\": \"move\",\n\t\t\t\"ignore\": \"ignore\"\n\t\t},\n\t\tround_dnd_dates: true,\n\t\tlink_wrapper_width: 20,\n\t\troot_id: 0,\n\n\t\tautofit: false, // grid column automatic fit grid_width config\n\t\tcolumns: [\n\t\t\t{name: \"text\", tree: true, width: '*', resize: true},\n\t\t\t{name: \"start_date\", align: \"center\", resize: true},\n\t\t\t{name: \"duration\", align: \"center\"},\n\t\t\t{name: \"add\", width: 44}\n\t\t],\n\n\t\t/*scale*/\n\t\tstep: 1,\n\t\tscale_unit: \"day\",\n\t\tscale_offset_minimal: true,\n\t\tsubscales: [],\n\n\t\tinherit_scale_class: false,\n\n\t\ttime_step: 60,\n\t\tduration_step: 1,\n\t\tdate_scale: \"%d %M\",\n\t\ttask_date: \"%d %F %Y\",\n\t\ttime_picker: \"%H:%i\",\n\t\ttask_attribute: \"task_id\",\n\t\tlink_attribute: \"link_id\",\n\t\tlayer_attribute: \"data-layer\",\n\t\tbuttons_left: [\n\t\t\t\"gantt_save_btn\",\n\t\t\t\"gantt_cancel_btn\"\n\t\t],\n\t\t_migrate_buttons: {\n\t\t\t\"dhx_save_btn\": \"gantt_save_btn\",\n\t\t\t\"dhx_cancel_btn\": \"gantt_cancel_btn\",\n\t\t\t\"dhx_delete_btn\": \"gantt_delete_btn\"\n\t\t},\n\t\tbuttons_right: [\n\t\t\t\"gantt_delete_btn\"\n\t\t],\n\t\tlightbox: {\n\t\t\tsections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"time\", type: \"duration\", map_to: \"auto\"}\n\t\t\t],\n\t\t\tproject_sections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"type\", type: \"typeselect\", map_to: \"type\"},\n\t\t\t\t{name: \"time\", type: \"duration\", readonly: true, map_to: \"auto\"}\n\t\t\t],\n\t\t\tmilestone_sections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"type\", type: \"typeselect\", map_to: \"type\"},\n\t\t\t\t{name: \"time\", type: \"duration\", single_date: true, map_to: \"auto\"}\n\t\t\t]\n\t\t},\n\t\tdrag_lightbox: true,\n\t\tsort: false,\n\t\tdetails_on_create: true,\n\t\tdetails_on_dblclick: true,\n\t\tinitial_scroll: true,\n\t\ttask_scroll_offset: 100,\n\n\t\torder_branch: false,\n\t\torder_branch_free: false,\n\n\t\ttask_height: \"full\",//number px of 'full' for row height\n\t\tmin_column_width: 70,\n\n\t\t// min width for grid column (when resizing)\n\t\tmin_grid_column_width: 70,\n\t\t// name of the attribute with column index for resize element\n\t\tgrid_resizer_column_attribute: \"column_index\",\n\t\t// name of the attribute with column index for resize element\n\t\tgrid_resizer_attribute: \"grid_resizer\",\n\n\t\t// grid width can be increased after the column has been resized\n\t\tkeep_grid_width: false,\n\n\t\t// grid width can be adjusted\n\t\tgrid_resize: false,\n\n\t\tshow_unscheduled: true,\n\n\t\t//\n\t\treadonly_property: \"readonly\",\n\t\teditable_property: \"editable\",\n\t\tcalendar_property: \"calendar_id\",\n\t\tresource_calendars: {},\n\n\t\ttype_renderers: {},\n\n\t\topen_tree_initially: false,\n\t\toptimize_render: true,\n\t\tprevent_default_scroll: false,\n\t\tshow_errors: true,\n\t\twai_aria_attributes: true,\n\t\tsmart_scales: true,\n\t\trtl:false,\n\t\tplaceholder_task: false\n\t};\n};\n", "module.exports = function(){\n\tvar services = {};\n\tfunction register (name, getter){\n\t\tservices[name] = getter;\n\t}\n\n\tfunction getService(name){\n\t\tif(!services[name]){\n\t\t\treturn null;\n\t\t}\n\t\treturn services[name]();\n\t}\n\n\tvar servicesEnum = {\n\t\t\"config\": \"config\",\n\t\t\"templates\": \"templates\",\n\t\t\"locale\": \"locale\"\n\t};\n\n\treturn {\n\t\tservices: servicesEnum,\n\t\tsetService: register,\n\t\tgetService: getService,\n\t\tconfig: function(){\n\t\t\treturn this.getService(\"config\");\n\t\t},\n\t\ttemplates: function(){\n\t\t\treturn this.getService(\"templates\");\n\t\t},\n\t\tlocale: function(){\n\t\t\treturn this.getService(\"locale\");\n\t\t},\n\t\tdestructor: function(){\n\t\t\tfor(var i in services){\n\t\t\t\tif(services[i]){\n\t\t\t\t\tvar service = services[i];\n\t\t\t\t\tif(service && service.destructor){\n\t\t\t\t\t\tservice.destructor();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tservices = null;\n\t\t}\n\t};\n};\n", "module.exports = function(gantt){\n\tgantt.$inject = function(module){\n\t\treturn module(this.$services);\n\t};\n};", "module.exports = {\n\tKEY_CODES: {\n\t\tUP: 38,\n\t\tDOWN: 40,\n\t\tLEFT: 37,\n\t\tRIGHT: 39,\n\t\tSPACE: 32,\n\t\tENTER: 13,\n\t\tDELETE: 46,\n\t\tESC: 27,\n\t\tTAB: 9\n\t}\n};", "require(\"css/skins/terrace.less\");\n\nfunction DHXGantt(){\n\tthis.constants = require(\"./../constants\");\n\tthis.version = VERSION;\n\tthis.templates = {};\n\tthis.ext = {};\n\tthis.keys = {\n\t\tedit_save: this.constants.KEY_CODES.ENTER,\n\t\tedit_cancel: this.constants.KEY_CODES.ESC\n\t};\n}\n\nmodule.exports = function() {\n\t// use a named constructor to make gantt instance discoverable in heap snapshots\n\tvar gantt = new DHXGantt();\n\n\trequire(\"./common/import\")(gantt);\n\n\tgantt.$services = gantt.$inject(require(\"./common/services\"));\n\tgantt.config = gantt.$inject(require(\"./common/config\"));\n\tgantt.ajax =  require(\"./common/ajax\")(gantt);\n\tgantt.date = require(\"./common/date\")(gantt);\n\tvar dnd = require(\"./common/dnd\")(gantt);\n\tgantt.$services.setService(\"dnd\", function(){return dnd;});\n\n\tgantt.$services.setService(\"config\", function () {\n\t\treturn gantt.config;\n\t});\n\tgantt.$services.setService(\"date\", function () {\n\t\treturn gantt.date;\n\t});\n\tgantt.$services.setService(\"locale\", function () {\n\t\treturn gantt.locale;\n\t});\n\tgantt.$services.setService(\"templates\", function () {\n\t\treturn gantt.templates;\n\t});\n\n\tvar templatesLoader = require(\"./common/templates\")(gantt);\n\tgantt.$services.setService(\"templateLoader\", function () {\n\t\treturn templatesLoader;\n\t});\n\n\tvar eventable = require(\"../utils/eventable\");\n\teventable(gantt);\n\n\tvar StateService = require(\"./common/state\");\n\tvar stateService = new StateService();\n\n\tstateService.registerProvider(\"global\", function () {\n\t\treturn {\n\t\t\tmin_date: gantt._min_date,\n\t\t\tmax_date: gantt._max_date,\n\t\t\tselected_task: gantt.$data.tasksStore.getSelectedId()\n\t\t};\n\t});\n\tgantt.getState = stateService.getState;\n\tgantt.$services.setService(\"state\", function () {\n\t\treturn stateService;\n\t});\n\n\tvar utils = require(\"../utils/utils\");\n\tutils.mixin(gantt, utils);\n\tgantt.env = require(\"../utils/env\");\n\n\tvar domEvents = require(\"../utils/dom_event_scope\")();\n\tgantt.event = domEvents.attach;\n\tgantt.eventRemove = domEvents.detach;\n\tgantt._eventRemoveAll = domEvents.detachAll;\n\tgantt._createDomEventScope = domEvents.extend;\n\n\tutils.mixin(gantt, require(\"./message\")(gantt));\n\tvar uiApi = require(\"./ui/index\").init(gantt);\n\tgantt.$ui = uiApi.factory;\n\tgantt.$ui.layers = uiApi.render;\n\tgantt.$mouseEvents = uiApi.mouseEvents;\n\tgantt.$services.setService(\"mouseEvents\", function () {\n\t\treturn gantt.$mouseEvents;\n\t});\n\tgantt.mixin(gantt, uiApi.layersApi);\n\n\trequire(\"./data_task_layers\")(gantt);\n\n\tgantt.$services.setService(\"layers\", function () {\n\t\treturn uiApi.layersService;\n\t});\n\n\tvar createLayoutFacade = require(\"./facades/layout\");\n\tgantt.mixin(gantt, createLayoutFacade());\n\n\trequire(\"./datastore/datastore_hooks\")(gantt);\n\n\trequire(\"./dataprocessor/hooks\")(gantt);\n\trequire(\"./plugins\")(gantt);\n\n\trequire(\"./dynamic_loading\")(gantt);\n\trequire(\"./grid_column_api\")(gantt);\n\trequire(\"./wai_aria\")(gantt);\n\trequire(\"./tasks\")(gantt);\n\trequire(\"./load\")(gantt);\n\trequire(\"./worktime/work_time\")(gantt);\n\trequire(\"./data\")(gantt);\n\trequire(\"./lightbox\")(gantt);\n\trequire(\"./lightbox_optional_time\")(gantt);\n\trequire(\"./data_task_types\")(gantt);\n\trequire(\"./cached_functions\")(gantt);\n\trequire(\"./skin\")(gantt);\n\trequire(\"../css/skins/skyblue\")(gantt);\n\trequire(\"../css/skins/meadow\")(gantt);\n\trequire(\"../css/skins/terrace\")(gantt);\n\trequire(\"../css/skins/broadway\")(gantt);\n\trequire(\"../css/skins/material\")(gantt);\n\trequire(\"../css/skins/contrast_black\")(gantt);\n\trequire(\"../css/skins/contrast_white\")(gantt);\n\trequire(\"./touch\")(gantt);\n\trequire(\"../locale/locale\")(gantt);\n\trequire(\"./gantt_core\")(gantt);\n\trequire(\"./destructor\")(gantt);\n\n\treturn gantt;\n};", "module.exports = function(gantt){\n\n\t// no deprecated methods for now\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction deprecated(badCode, goodCode, versionDeprecated, versionDeleted) {\n\n\t\tvar formatting = gantt.env.isIE ? \"\" : \"%c\";\n\t\tversionDeprecated = versionDeprecated || \"v6.0\";\n\t\tversionDeleted = versionDeleted || \"v7.0\";\n\n\t\tvar message = [\n\t\t\tformatting, \"\\\"\", badCode, \"\\\"\",  formatting,\n\t\t\t\" has been deprecated in dhtmlxGantt \", versionDeprecated, \" and will stop working in \", versionDeleted,\". Use \",\n\t\t\tformatting, \"\\\"\", goodCode, \"\\\"\",  formatting,\n\t\t\t\" instead. \\nSee more details at http://docs.dhtmlx.com/gantt/migrating.html \"\n\t\t].join(\"\");\n\n\t\tvar log = window.console.warn || window.console.log;\n\n\t\tvar args = [message];\n\t\tif(!gantt.env.isIE){\n\t\t\targs = args.concat([\"font-weight:bold\", \"font-weight:normal\", \"font-weight:bold\", \"font-weight:normal\"]);\n\t\t}\n\n\t\tlog.apply(window.console, args);\n\t}\n\n\t// gantt.getSlack is defined inside an extension, leave it without message for now\n\n};", "import * as warnings from \"./core/deprecated_warnings\";\nimport * as base from \"./core/gantt\";\n\n\nconst gantt = (window as any).gantt = base();\nwarnings(gantt);"],
    "sourceRoot": ""
}